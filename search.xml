<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>未言日</title>
      <link href="/2024/06/19/diaries/%E6%9C%AA%E8%A8%80%E6%97%A5/"/>
      <url>/2024/06/19/diaries/%E6%9C%AA%E8%A8%80%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f00c36d59a661b73ce678e8f6b5a2f8de56a6133fad7fe1f900a2372f6a3eaca">a834c3e63deaa882de86997759bf56035756bbaaf69e9db827bcbefcce68288e8e8676c1e8ee8c2ca3e22bfedbcd1a0b07ab4e9e90b0bcba5d5184afff712b494560aa631bcd135eb203239289036ad9c675399d764bf5659eacebf011ab3e67a4116783bcac166ad12d439e7a8b7da800e999b04372344df9b1fe21c2743788c021f79603b323a97292234e3e968aee0a564ee939981b5292f0f062ca83cd504c41920edc7c42cefc289d3323b463a036d875994be601641578ba29f03fc64431032911cb496101969c90675b47f9adb3d5a0372ce8ae747e71b3750ec7a0d2407e72b799975b455e5e846fbbb1ee3e6af76150b48e0471df1e6f08ed0202785ee85757104c4be43644f1153fe7ee3dca617919d42ca15159a18a0b1abff3b03a63008be53f56dd18fcd7e4bf17e524a5a6f4f7502d4532c5f23908d8082ed8aaf0d215c09cdf022252677798a885d5ca4c86aface9e37b2bfffc1be8ad7c271280ff5ace255636b96cfa677b4786d4935ef52f5e8e5685a54deea13efeccb1a9993e57a88d5921ded488e7f0f408e4f085e38c109aa2900b09a767bede8086c01dd47fd335025b9aceb2c9600e3c7ddb97ad46e0b53f756cfcb0881ac1e8b1cdfe2349093e1fed4154d85e27f40a7fac8dd6dfcc59b8bd32c611c1200732abaee95ea41bb504d5b80e2524d96ada195649d2f6a581dd0fd1288819d20575e9690c330f1e8ca1f421dfcab1421d85b719a30166ca7823a209c9202aae5a528bdb0d5c14b33106d956f81cb5c70d533055f1128f52a741eaa9b216c72ac155c24c771af7395d334c5a16a96160dade74954b38f59b240fd3e9b10332d6e167620bc002aae54f4a96a43df0eafe7d3a1ab416c70e2e4eefd7ecbbb58a7196dcd663841124cde7c16a8bbb637f097a9752df08e59e4260a36c313768bb594b1c05411e347a3073891223131375a6a574ec8fb8df483b8e69ff37e53e1299a36e028f9ce86eca51c255bfc5c7b0cbe218a083f2312a3aaacc372a377e60ffc1caffb7708cd10f7eb53d6933241866536444511beaf22a60753bf805ddbd14eb6b0b0d20f588e3360d96abe2a24d60765eea71a969e81207d1303996f9c38d4401a003d410d08a42e49460743bde143300c2b7672774a343ab530d140cb9b9b29fcb6dd1fc8ff863734eb7711f184b4c88c1b4f1c08a339ac5ead3cb9b18717fe8cf405c1b1bd207b5be58764904399216359a07551ea63533c5c13a9ccb2bb01d08ecdcb8a24cfeafb456445940c72ee96e38f4c2e9f4abdff928de30bd7fe1323059444aeb660b03d65bf7239500af8a1a7f449c578c38f6dcbd9d9fcce2e726b8084bca3f9aca73ce9252efc97a239530a843e449e00722c6ec81bff20f96ac63a71774948961fb42d5d551ecf29fd0909528f6bd45ba15d3663b52ddc0216a1b55b68b37bc153fd582273f9749863bb26e6cfa5ae4a96a7a67e2e81bd87bc8b6b0ed05246488d0d6a268e0263397a4f8ef9e7987cc1e31b12a026a36b3738dcc261915599f1fc5845c09699a2a2fc4a3a540b614dd0f2000389b1cc8b9321a779d12e2edc260d8579645b112340dfe6ad63e683c5efcc2e178aa530d9525e120dce838ad12d1e3a7fbf61aa3788d1a80b1549c6ba383da4bcec15edf12238a03ecec07a4c9a927106b5d59832187ec8d13ed5fad99592470f737fc74a762c35b03adb44447abd8eca353330e6d9f113abfb58c9382359ea6a06e839f6d28b00407638741c08905f33d35f5f824b3a39ea8e50f5d03aa18298bd7076b079a0230b4d7307e9a14cd87da7aaac305758ae89ca839530bbfee28669d5d40f498acf12d26bfc16955bebd886991eb366784c9cc44289ff90f669cd148e6189dcc7e817ced820a1a7ac756b40dba9992ca13a7ed6f59a63c4e2bfba4b02e62a141fddb40113d194e8c1c2eee93a669b32f82ef</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">私人领地</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>c++学习</title>
      <link href="/2023/11/13/posts/c++%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/11/13/posts/c++%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>c++的一点学习笔记<span id="more"></span></p><h3 id="1-引用语法"><a href="#1-引用语法" class="headerlink" title="1. 引用语法"></a>1. 引用语法</h3><p>引用是一种在已存在的变量或对象上创建的别名。引用提供了对现有变量的另一种名称，通过引用可以直接访问原始变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type &amp;ref_name = original_variable;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>type</code> 是原始变量的类型。</li><li><code>ref_name</code> 是引用的名称。</li><li><code>original_variable</code> 是已存在的变量。</li></ul><ol><li>引用必须在定义时初始化，一旦引用被初始化，它将一直引用相同的对象，不能改变引用的目标，即初始化后不可以发生改变</li><li>引用与原始变量时同一份数据，对引用的修改会直接影响原始变量，因为他们引用同一块内存</li><li>引用可以用于函数参数，引用经常用于函数参数，以便通过引用传递数据而不是通过复制</li><li>引用可以作为返回值，函数可以返回引用，使得返回值成为原始变量的别名</li></ol><p><strong>对于引用的理解，实际上这种语法的本质就是为变量取了一个别名，或者说为 原来有名字的内存空间 又起了一个别名，语法不难理解，实际上在编译时，这种引用的语法实际上可能会由编译器内部去转化为指针的用法，虽然实际上使用它时和指针的用法有一定区别，但这都是基于方便编程，方便修改变量(引用的设计估计就是为了方便修改变量，指针还是比较麻烦的)而设计的语法，我们只要保证使用引用的时候，一有确定的内存空间，二有合理的别名，这种对于原名，别名和内存空间的对应自然有编译器为我们代劳</strong></p><p><strong>引用的本质用指针的角度来看，是一个指针常量，int * const ref &#x3D; &amp;a，当内部发现是引用时，自动依据编译方式进行转换</strong></p><p><strong>在做一遍解释，引用在底层可能会被实现为指针，但这是编译器的实现细节，这并不影响引用在语法上的特性。在使用引用时，程序员无需关心它是否被实现为指针，只需要按照引用的语法规则使用即可。引用的主要目的是提供一种更直观、更易读的代码方式，同时避免了指针可能引发的一些问题。</strong></p><h3 id="2-函数的默认参数"><a href="#2-函数的默认参数" class="headerlink" title="2. 函数的默认参数"></a>2. 函数的默认参数</h3><p>函数的默认参数值必须<strong>在函数声明和定义的地方同时指定</strong>。也就是说，如果你在函数声明时指定了默认参数值，那么在函数的定义时也必须再次指定默认参数值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">return_type <span class="title">function_name</span><span class="params">(type parameter1 = default_value1, type parameter2 = default_value2, ...)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>return_type</code> 是函数的返回类型。</li><li><code>function_name</code> 是函数的名称。</li><li><code>type</code> 是参数的类型。</li><li><code>parameter1</code>, <code>parameter2</code>, … 是函数的参数。</li><li><code>default_value1</code>, <code>default_value2</code>, … 是参数的默认值。</li></ul><p>如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值</p><p><strong>注意，在C++中，函数的声明和定义不能同时带有默认参数，这是由语法规则决定的，记住是规则，不能同时带默认参数就对了</strong></p><p>默认参数的值只能在函数的声明或者定义中的一个地方指定，而不能同时在两个地方指定。这是为了避免在不同的编译单元中可能出现的冲突问题。如果同时在声明和定义中都指定默认参数值，将导致编译错误。</p><p>这种限制确保了在不同的编译单元中对函数的一致性理解，”不同的编译单元中对函数的一致性理解” 指的是在 C++ 程序中，源代码可能被分成多个文件进行编译，每个文件被称为一个编译单元（translation unit）。编译单元是独立进行编译的基本单位，最终这些编译单元将被链接在一起形成可执行文件。</p><p>在这个背景下，对函数的一致性理解意味着在不同的编译单元中对同一个函数的声明和定义的理解是一致的。如果不同的编译单元中对同一个函数的声明和定义的默认参数值不一致，可能导致一些问题。</p><p>考虑以下情况：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件1.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y = <span class="number">42</span>)</span></span>;  <span class="comment">// 在声明中指定默认参数值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件2.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y = <span class="number">24</span>)</span> </span>&#123;  <span class="comment">// 在定义中再次指定默认参数值</span></span><br><span class="line">    <span class="comment">// 函数实现</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，文件1.cpp 中的声明和文件2.cpp 中的定义对于 <code>foo</code> 函数的默认参数值的理解是不一致的。当这两个文件被分别编译后，如果链接在一起，可能会导致不一致的行为。这种不一致可能在程序运行时产生难以预测的结果。</p><p>为了避免这种潜在的问题，C++ 的语法规则要求默认参数值只能在声明或定义的其中一个地方指定，以确保在链接时对函数的一致性理解。</p><p><strong>函数默认值这种用法，可以使函数调用更加灵活，不需要为每个参数都提供值，我们可以只为我们关心的参数提供值，而其他的参数就保持默认</strong></p><h3 id="3-函数的占位参数"><a href="#3-函数的占位参数" class="headerlink" title="3. 函数的占位参数"></a>3. 函数的占位参数</h3><p>函数的占位参数是指在函数声明中省略参数名，只提供参数类型的一种方式。这种语法通常在函数声明时用于指示函数接受一定数量的参数，但在函数体内并不使用这些参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数声明中使用占位参数，省略参数名</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">functionName</span><span class="params">(<span class="type">int</span> a, <span class="type">float</span> b, <span class="type">int</span>)</span></span>;  <span class="comment">// 第三个参数，省略了参数名，占位用</span></span><br></pre></td></tr></table></figure><h3 id="4-函数重载"><a href="#4-函数重载" class="headerlink" title="4. 函数重载"></a>4. 函数重载</h3><p>函数重载指在同一个作用域内定义多个函数，他们有相同的名称但参数列表不同，参数列表的不同可能包括<strong>参数的类型、数量或者顺序</strong>，在调用这个函数时，编译器会根据实际传递的参数类型，数量等信息来选择匹配的函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数声明1</span></span><br><span class="line"><span class="function">return_type <span class="title">function_name</span><span class="params">(type1 parameter1, type2 parameter2, ...)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数声明2（重载）</span></span><br><span class="line"><span class="function">return_type <span class="title">function_name</span><span class="params">(type3 parameter1, type4 parameter2, ...)</span></span>;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>return_type</code> 是函数的返回类型。</li><li><code>function_name</code> 是函数的名称。</li><li><code>type1</code>, <code>type2</code>, … 是参数类型</li></ul><p>对于常量引用和普通引用，是可以作为函数重载的条件的</p><p>对于默认参数，作为函数重载的条件时，会出现二义性</p><h3 id="5-封装"><a href="#5-封装" class="headerlink" title="5. 封装"></a>5. 封装</h3><p>封装是c++面向对象三大特性之一</p><p>封装的意义：</p><ul><li>将属性和行为作为一个整体，表现生活中的事物</li><li>将属性和行为加以权限控制</li></ul><p><strong>语法：</strong> <code>class 类名 &#123;访问权限： 属性/行为 &#125;</code></p><h3 id="6-c-和c-中实例化的不同"><a href="#6-c-和c-中实例化的不同" class="headerlink" title="6. c++和c#中实例化的不同"></a>6. c++和c#中实例化的不同</h3><p>相同的语法如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">test</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="type">int</span> a;</span><br><span class="line">  <span class="type">int</span> b;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">test_func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//c++</span></span><br><span class="line">test object1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//c#</span></span><br><span class="line">test object1;</span><br></pre></td></tr></table></figure><p>对于<code>test object1</code>这句语句，在c++中表示创建了一个对象或者实例，而在c#中仅仅声明了一个引用，并没有创建实例或者对象，需要配合使用new关键字使用</p><h3 id="7-访问权限"><a href="#7-访问权限" class="headerlink" title="7. 访问权限"></a>7. 访问权限</h3><ul><li><p>公共权限 public：类内可以访问，类外也可以访问</p></li><li><p>保护权限 protected：类内可以访问，类外不可以访问；儿子可以访问父亲的保护内容</p></li><li><p>私有权限 private：类内可以访问，类外不可以访问；儿子不可以访问父亲的私有内容</p></li></ul><h3 id="8-构造函数-构造器-与析构函数"><a href="#8-构造函数-构造器-与析构函数" class="headerlink" title="8. 构造函数(构造器)与析构函数"></a>8. 构造函数(构造器)与析构函数</h3><p>对象的 <strong>初始化和清理</strong> 是两个非常中药的安全问题</p><p>c++利用了构造函数和析构函数解决上述问题，这两个哈数将会被编译器自动调用，完成对象初始化和清理工作，对象的初始化和清理工作是编译器强制要我们做的事情，因此如果我们不提供构造和析构，编译器会提供，编译器提供的构造函数和析构函数是空函数</p><ul><li>构造函数：主要作用在于创建对象时为对象的成语属性赋值，构造函数由编译器自动调用，无需手动调用</li><li>析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作</li></ul><h4 id="8-1-构造函数"><a href="#8-1-构造函数" class="headerlink" title="8.1 构造函数"></a>8.1 构造函数</h4><h5 id="8-1-1-构造函数语法：-类名"><a href="#8-1-1-构造函数语法：-类名" class="headerlink" title="8.1.1 构造函数语法： 类名() {}"></a>8.1.1 构造函数语法： <code>类名() &#123;&#125;</code></h5><ol><li>构造函数，没有返回值也不写void</li><li>函数名称与类名相同</li><li><strong>构造函数可以有参数，因此可以发生重载</strong></li><li>程序在调用对象时候会自动调用构造，无需手动调用，而且只会调用一次</li></ol><blockquote><p>对于构造函数的访问权限问题：</p><ul><li>public：如果构造函数时public的，那么在任何地方都可以创建该类的对象，这在大多数情况下是合适的，因为允许类的实例化</li><li>private：如果构造函数时private的，那么只有该类内部的成员函数或友元函数才能创建该类的对象，这种常用于实现<strong>单例模式或工厂模式</strong>等，确保只有受控的方式可以创建对象</li><li>protected：如果构造对象时protected的，那么只有该类的派生类可以访问构造函数，这在实现继承层次结构时可能会用</li></ul><p>选择构造函数的访问权限通常是根据设计需求和类的使用场景而定</p></blockquote><h5 id="8-1-2-构造函数的分类与调用"><a href="#8-1-2-构造函数的分类与调用" class="headerlink" title="8.1.2 构造函数的分类与调用"></a>8.1.2 构造函数的分类与调用</h5><p>两种分类方式：</p><ul><li>按参数分为：有参构造和无参构造</li><li>按类型分：普通构造和拷贝构造</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 有参构造与无参构造</span></span><br><span class="line">    <span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Person的无参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        age = a;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Person的有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 拷贝构造函数</span></span><br><span class="line">    <span class="built_in">Person</span> (<span class="type">const</span> Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 将传入的人身上的所有属性，拷贝到我身上</span></span><br><span class="line">        age = p.age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Person的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数三种调用方式：</p><ul><li>括号法</li><li>显式法</li><li>隐式转换法</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 括号法</span></span><br><span class="line">Person p; <span class="comment">// 默认构造函数调用</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>; <span class="comment">// 有参构造函数</span></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>; <span class="comment">// 拷贝构造函数</span></span><br><span class="line"><span class="comment">// 调用默认构造函数时，不要加(), 编译器会认为这是函数声明</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 显式法</span></span><br><span class="line">Person p1; </span><br><span class="line">Person p2 = <span class="built_in">Person</span>(<span class="number">10</span>); <span class="comment">// 有参构造</span></span><br><span class="line">Person p2 = <span class="built_in">Person</span>(p2); <span class="comment">// 拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Person(10); 这条语句会创建出一个匿名对象，c++早期版本是需要调用两次构造函数来完成初始化，就是创立黎明对象调用一次，初始化变量又调用一次，后来优化就只需要调用一次，匿名对象直接变成有名对象</span></span><br><span class="line"><span class="comment">// 个人理解是这样，如果有不正确的希望有大佬可以帮忙指出来，谢谢~</span></span><br><span class="line"><span class="comment">// 要明白 初始化 和 赋值 的区别</span></span><br><span class="line"><span class="comment">//如果用匿名对象 初始化 另外一个同类型的对象, 匿名对象 转成有名对象</span></span><br><span class="line"><span class="comment">//如果用匿名对象 赋值给 另外一个同类型的对象, 匿名对象 被析构</span></span><br><span class="line"><span class="comment">//c++早期版本是要调用两次构造函数来完成初始化的，现在优化版本只要调用一次，提高了效率。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.隐式转换法</span></span><br><span class="line">Person p4 = <span class="number">10</span>； <span class="comment">// 相当于Person p4 = Person(10); 编译器会隐式的转成这种形式，会帮你做这种事情</span></span><br><span class="line">Person p5 = p4; </span><br></pre></td></tr></table></figure><p>拷贝构造函数被调用的时机：</p><ul><li>使用一个已经创建完毕的对象(不是匿名对象)来初始化一个新对象</li><li>值传递的方式给函数参数传值</li><li>值方式返回局部对象</li></ul><blockquote><p>对于值方式返回局部对象，貌似是返回是回拷贝给一个匿名对象，这个时候会调用拷贝构造函数，但是根据实际情况来看，貌似现在已经不再产生临时对象，不调用拷贝构造函数，编译器做了优化，至少gcc&#x2F;g++是这样的，如果加上<code>-fno-elide-constructors</code>的选项，关闭编译器的优化，还是会产生匿名对象，调用拷贝构造函数</p></blockquote><p>弄清楚拷贝构造函数什么时候会被调用也是非常重要的，自己需要清楚这些函数的调用时机和调用次数等等，做到胸有成竹，心中有数</p><p>默认情况下，c++编译器至少会给一个类添加3个函数，默认构造函数，默认析构函数，默认拷贝构造函数</p><p>如果用户定义有参构造函数，c++不再提供默认无参构造，但是会提供默认拷贝构造</p><p>如果用户定义拷贝构造函数，c++不会再提供其他构造函数</p><h5 id="8-1-2-深拷贝与浅拷贝"><a href="#8-1-2-深拷贝与浅拷贝" class="headerlink" title="8.1.2 深拷贝与浅拷贝"></a>8.1.2 深拷贝与浅拷贝</h5><p>深浅拷贝是面试经典问题，也是常见的一个坑</p><p><strong>浅拷贝</strong>：简单的赋值拷贝操作(编译器提供的拷贝构造函数都是浅拷贝)</p><p><strong>深拷贝</strong>：在堆区重新申请空间，进行拷贝操作</p><p>浅拷贝带来的问题就是堆区内存的重复释放，当构造函数中有申请堆区内存，而使用了浅拷贝，在析构是就容易重复释放同一个块内存空间</p><h4 id="8-2-析构函数"><a href="#8-2-析构函数" class="headerlink" title="8.2 析构函数"></a>8.2 析构函数</h4><p>析构函数语法：<code>~类名() &#123;&#125;</code></p><ol><li>析构函数，没有返回值也不写void</li><li>函数名称与类名相同，在名称前面加上符号<code>~</code></li><li><strong>析构函数不可以有参数，因此不可以发生重载</strong></li><li>程序在对象销毁前会自动调用析构，无需手动调用，而且只会调用一次</li></ol><p>构造函数和析构函数不实现的时候，编译器会默认生成空实现</p><p>构造函数和析构函数都不需要写return</p><h3 id="9-初始化列表"><a href="#9-初始化列表" class="headerlink" title="9. 初始化列表"></a>9. 初始化列表</h3><p>在之前学习的构造函数中，主要是对类中的属性做初始化的操作，新的这个语法，初始化列表主要用途也是给类中的属性进行一个初始化的操作, 语法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">构造函数(): 属性<span class="number">1</span>(值<span class="number">1</span>), 属性<span class="number">2</span>(值<span class="number">2</span>)...&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="10-静态成员"><a href="#10-静态成员" class="headerlink" title="10. 静态成员"></a>10. 静态成员</h3><p>静态成员就是在成员变量和成员函数前加上关键字<code>static</code>，称为静态成员，静态成员分为：</p><ul><li>静态成员变量<ul><li>所有对象共享同一份数据</li><li>在编译阶段分配内存</li><li>类内声明，类外初始化</li></ul></li><li>静态成员函数<ul><li>所有对象共享同一个函数</li><li>静态成员函数只能访问静态成员变量</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表的学习</title>
      <link href="/2023/11/06/posts/%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/11/06/posts/%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><strong>相关术语：首节点，尾节点，头节点，头指针，尾指针</strong></p><span id="more"></span><h3 id="1-链表节点的相关术语"><a href="#1-链表节点的相关术语" class="headerlink" title="1. 链表节点的相关术语"></a>1. 链表节点的相关术语</h3><h4 id="1-1-首节点"><a href="#1-1-首节点" class="headerlink" title="1.1 首节点"></a>1.1 首节点</h4><p>第一个有效节点</p><h4 id="1-2-尾节点"><a href="#1-2-尾节点" class="headerlink" title="1.2 尾节点"></a>1.2 尾节点</h4><p>最后一个有效节点</p><h4 id="1-3-头节点"><a href="#1-3-头节点" class="headerlink" title="1.3 头节点"></a>1.3 头节点</h4><p>第一个有效节点之前的那个节点</p><p>头节点并不存放有效数据</p><p>加头节点的目的主要是为了方便对链表的操作</p><h4 id="1-4-头指针"><a href="#1-4-头指针" class="headerlink" title="1.4 头指针"></a>1.4 头指针</h4><p>指向头节点的指针变量</p><h4 id="1-5-尾指针"><a href="#1-5-尾指针" class="headerlink" title="1.5 尾指针"></a>1.5 尾指针</h4><h3 id="2-链表创建示例"><a href="#2-链表创建示例" class="headerlink" title="2. 链表创建示例"></a>2. 链表创建示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//链表节点类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> Node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> data; <span class="comment">// 数据域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">pNext</span>;</span> <span class="comment">// 指针域</span></span><br><span class="line">&#125;NODE, *PNODE;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建链表</span></span><br><span class="line">PNODE <span class="title function_">create_list</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    PNODE pTail;</span><br><span class="line">    </span><br><span class="line">    PNODE pHead = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (pHead == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分配失败，程序终止！\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    pTail = pHead;</span><br><span class="line">    pTail-&gt;pNext = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入您需要生成的链表节点的个数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;len);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个节点的值:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val;);</span><br><span class="line">        </span><br><span class="line">        PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">        pNew-&gt;data = val;</span><br><span class="line">        pTail-&gt;pNext = pNew;</span><br><span class="line">        pNew-&gt;pNext = <span class="literal">NULL</span>;</span><br><span class="line">        pTail = pNew;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">traverse_list</span><span class="params">(PNODE pHead)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNODE p = pHead-&gt;pNext;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;data);</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链表是否为空</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_empty</span><span class="params">(PNODE pHead)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (pHead-&gt;pNext == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链表长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">length_list</span><span class="params">(PNODE pHead)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    PNODE p = pHead-&gt;pNext;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        len++;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">insert_list</span><span class="params">(PNODE pHead, <span class="type">int</span> position, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">delete_list</span><span class="params">(PNODE pHead, <span class="type">int</span> position, <span class="type">int</span> *data_buff)</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链表排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_list</span><span class="params">(PNODE pHead)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="type">int</span> len = length_list(pHead);</span><br><span class="line">    PNODE p_i, p_j;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (p_i = pHead-&gt;pNext, i = <span class="number">0</span>; i &lt; len <span class="number">-1</span>; i++, p_i = p_i-&gt;pNext) &#123;</span><br><span class="line">        <span class="keyword">for</span> (p_j = p_i-&gt;pNext, j = i + <span class="number">1</span>; j &lt; len; j++, p_j = p_j-&gt;pNext) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p_i-&gt;data &gt; p_j-&gt;data) &#123;</span><br><span class="line">                temp = p_i-&gt;data;</span><br><span class="line">                p_i-&gt;data = p_j-&gt;data;</span><br><span class="line">                p_j-&gt;pNext = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    PNODE pHead = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">// create_list()功能：创建一个非循环单链表，并将该链表的头节点的地址赋给pHead</span></span><br><span class="line">    pHead = create_list();</span><br><span class="line">    traverse_list(pHead);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>确定一个链表只需要一个参数——头指针</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础排序算法解析</title>
      <link href="/2023/11/05/posts/%E5%9F%BA%E7%A1%80%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/11/05/posts/%E5%9F%BA%E7%A1%80%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>冒泡排序，选择排序，插入排序的解析与实现</p><span id="more"></span><h3 id="基础排序算法解析"><a href="#基础排序算法解析" class="headerlink" title="基础排序算法解析"></a>基础排序算法解析</h3><h4 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1. 冒泡排序"></a>1. 冒泡排序</h4><p>冒泡排序的核心思想就是：</p><p>从左到右，相邻元素进行比较。每次比较一轮，就会找到序列中最大的一个或最小的一个。这个数就会从序列的最右边冒出来。  </p><p>以从小到大排序为例，第一轮比较后，所有数中最大的那个数就会浮到最右边；第二轮比较后，所有数中第二大的那个数就会浮到倒数第二个位置……就这样一轮一轮地比较，最后实现从小到大排序。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">bubble</span><span class="params">(<span class="type">int</span> *<span class="built_in">array</span>, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//外层的i循环是为了确定要进行遍历次数</span></span><br><span class="line">    <span class="comment">//每遍历一次可以确定一个当前 &quot;待比较序列&quot; 的最大值放在末尾</span></span><br><span class="line">    <span class="comment">//n个数据需要遍历n - 1次才可以，最后一个数据不需要比较，位置确定</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//内层的循环j是当前 &quot;待比较的序列&quot; 中，相邻数据需要比较多少次</span></span><br><span class="line">        <span class="comment">//易得需要比较 &quot;待比较序列&quot; 的长度减一次</span></span><br><span class="line">        <span class="comment">//进入第i次外层循环后，就有i个数据已经确定位置，待比较序列的长度就为n - i</span></span><br><span class="line">        <span class="comment">//相邻数据就需要比较 &quot;待比较序列&quot; 的长度减一次，即 n - 1 - i</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j ++) &#123;</span><br><span class="line">            <span class="comment">//满足条件时，相邻数据相互交换即可</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[j] &gt; <span class="built_in">array</span>[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                temp = <span class="built_in">array</span>[j + <span class="number">1</span>];</span><br><span class="line">                <span class="built_in">array</span>[j + <span class="number">1</span>] = <span class="built_in">array</span>[j];</span><br><span class="line">                <span class="built_in">array</span>[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2. 选择排序"></a>2. 选择排序</h4><p>选择排序的核心思想是：</p><p>它在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">select</span><span class="params">(<span class="type">int</span> *<span class="built_in">array</span>, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="type">int</span> min;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 正如冒泡排序一样，外层的i循环是为了确定要进行遍历的次数</span></span><br><span class="line">    <span class="comment">// n个元素的序列只需要选择n - 1次即可，每次选择都会确定当前 “待选择序列” 的最小元素</span></span><br><span class="line">    <span class="comment">// 放在当前的位置 i 上</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 假定当前位置的元素是最小元素</span></span><br><span class="line">        min = i;</span><br><span class="line">        <span class="comment">// 内层j循环就是 “待选择序列” 需要和当前最小元素比较多少次</span></span><br><span class="line">        <span class="comment">// 当然起步是从i后面一个元素开始比较，即 i + 1,一直到最后一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[j] &lt; <span class="built_in">array</span>[min]) &#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//退出内层循环后，如果min改变说明发现了更小的元素，将之与当前位置i进行交换</span></span><br><span class="line">        <span class="keyword">if</span> (min != i) &#123;</span><br><span class="line">            temp = <span class="built_in">array</span>[i];</span><br><span class="line">            <span class="built_in">array</span>[i] = <span class="built_in">array</span>[min];</span><br><span class="line">            <span class="built_in">array</span>[min] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3. 插入排序"></a>3. 插入排序</h4><p>插入排序的核心思想是</p><p><strong>逐个将未排序的元素插入到已排序的部分中，构建有序序列</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> *<span class="built_in">array</span>, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 插入排序，首先第一个元素的位置是确定的, 即array[0], 它是当前的待插入序列</span></span><br><span class="line">    <span class="comment">// 我们从第二个元素开始，向当前 &quot;待插入序列&quot; 插入元素</span></span><br><span class="line">    <span class="comment">// 外层循环i 表示了剩余待插入的元素的当前位置，从1 到 n -1 </span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="comment">// 内层循环j表示 “待插入序列” 的末尾，也是 当前待插入元素的前一个位置</span></span><br><span class="line">        <span class="comment">// 当前待插入元素需要和 “待插入序列” 中的每一个元素比较，找到自己的插入位置</span></span><br><span class="line">        temp = <span class="built_in">array</span>[i];</span><br><span class="line">        <span class="keyword">for</span> (j = i <span class="number">-1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[j] &gt; temp) &#123;</span><br><span class="line">                <span class="comment">//由于当前元素大于待插入元素</span></span><br><span class="line">                <span class="comment">//将当前元素后移</span></span><br><span class="line">                <span class="comment">//之后进入下一次循环时，比较下一个当前元素与待插入元素</span></span><br><span class="line">                <span class="comment">//大于待插入元素时，就将其后移，空出插入位置</span></span><br><span class="line">                <span class="built_in">array</span>[j + <span class="number">1</span>] = <span class="built_in">array</span>[j];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//不满足if的条件说明已经找到了当前待插入元素的位置</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">array</span>[j + <span class="number">1</span>] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-快速排序"><a href="#4-快速排序" class="headerlink" title="4. 快速排序"></a>4. 快速排序</h4>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 排序算法 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表节点的结构体定义问题</title>
      <link href="/2023/11/05/posts/%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89%E9%97%AE%E9%A2%98/"/>
      <url>/2023/11/05/posts/%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>链表节点的结构体定义理解和不完整类型声明</p><span id="more"></span><h3 id="链表节点的结构体定义问题"><a href="#链表节点的结构体定义问题" class="headerlink" title="链表节点的结构体定义问题"></a>链表节点的结构体定义问题</h3><p>在单向链表的学习中，一直忽略了一个技术问题，先看链表节点的结构体定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>仔细观察上述结构体定义，会发现在定义结构体 <code>struct node</code> 时，在其中又定义了一个<code>struct node *next</code>, 可是明明这个时候，<code>struct node</code> 的类型还没有定义完成，就在内部使用自己的类型，有点让人难以理解，感觉很奇怪</p><p>其实在C语言中，你可以定义结构体来表示链表节点，链表节点结构体包含了数据和指向下一个节点的指针，通常，你可以在定义节点类型之前使用正在定义的类型，但是需要使用指针来解决类型未定义的问题</p><p>其实，这种定义方式，和<strong>编译器</strong>本身的 <strong>处理方式</strong> 紧密相关</p><h4 id="1-结构体内部的大小是确定的"><a href="#1-结构体内部的大小是确定的" class="headerlink" title="1. 结构体内部的大小是确定的"></a>1. 结构体内部的大小是确定的</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>首先，<code>Node</code> 这个结构体的大小是可以明确的, <code>int data</code> 是4个字节，<code>struct Node *next</code> 也是4个字节(32位系统)，因为它仅仅只是一个指针变量，大小是确定的，因此整个<code>Node</code> 的大小也是确定的，总共是8个字节大小(32位系统)，包括其中存放的数据类型，一个是数据域部分的数据，一个是指针域部分的指针，这对于编译器来说是明确的</p><p>错误的写法其实是下面这种:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">subnode</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中<code>Node</code>的类型还正在定义中，在 <code>Node</code> 里面又定义<code>struct Node</code>类型的变量，编译器根本无法确定它的大小是多少，编译时就会出错，而且这是很明显的递归定义，是错误的定义形式</p><p><strong>总之，你可以在定义节点类型之前使用正在定义的类型，只要你使用指针来解决类型未定义的问题。这是因为指针的大小是已知的，即使它指向的类型尚未完全定义</strong></p><h4 id="2-编译会自己更新结构体的声明"><a href="#2-编译会自己更新结构体的声明" class="headerlink" title="2. 编译会自己更新结构体的声明"></a>2. 编译会自己更新结构体的声明</h4><p>实际上，这种方式称为 <strong>不完整类型声明</strong>，典型的例子就是结构体中的自引用指针</p><p>对于这种声明方式，编译器有自己的处理步骤：</p><ul><li><strong>分配足够的内存空间</strong>：当编译器遇到不完整类型声明时，他知道其中的指针域变量是一个指针，但是无法确定指针指向的内存的确定大小，因为结构体的定义尚未完整，因为结构体本身的大小是确定的，内部各个成员的大小也是确定的，所以编译器会为其分配足够的内存大小</li><li><strong>生成代码</strong>：编译器会生成与结构体的定义<strong>不完整的部分的相关代码，相当于中间部分</strong></li><li><strong>结构体的完整定义</strong>：当编译器走到完整的结构体定义结束后（通常在后续代码中或在不同的源文件中），它会了解结构体的确切布局和字段的大小</li><li><strong>更新不完整类型声明</strong>：编译器这时会回头更新之前的<strong>不完整类型声明</strong>，也就是中间部分</li><li><strong>生成正确的机器代码</strong>：现在，编译器具有完整的结构体定义，可以生成正确的机器代码，以确保结构体的成员被正确访问和操作</li></ul><p><strong>总之，编译器在编译过程中通过逐步处理不完整类型声明来处理自引用结构体。它为这些声明分配足够的内存以容纳指向相同类型的指针，然后在结构体的完整定义可用时，更新这些声明以反映完整的结构体定义，并生成正确的机器代码以处理结构体的成员。这使得在链表节点等数据结构中引用自身成为可能</strong></p><blockquote><p>简单来说，对于不完整类型声明，编译器在编译的过程中会进行更新，由不完整到完整，由不明确到明确，最终生成确定的定义和声明代码</p></blockquote><p>参考：</p><ol><li><a href="https://chat.openai.com/share/9184c02c-b45e-473f-8467-037d86a72d72">Chatgpt的问答</a></li><li><a href="https://www.cnblogs.com/xiaojianliu/articles/8735663.html">不完全类型和复杂声明</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 结构体 </tag>
            
            <tag> 不完整类型声明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年10月22日小记</title>
      <link href="/2023/10/23/diaries/2023%E5%B9%B410%E6%9C%8822%E6%97%A5%E5%B0%8F%E8%AE%B0/"/>
      <url>/2023/10/23/diaries/2023%E5%B9%B410%E6%9C%8822%E6%97%A5%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fda666647b32d2bd1ab5e5faa78cbe8bf21cb755d62aa919c2fa97fcb546d37e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">闲人勿入呀</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>裸辞杂记二</title>
      <link href="/2023/07/20/diaries/%E8%A3%B8%E8%BE%9E%E6%9D%82%E8%AE%B0%E4%BA%8C/"/>
      <url>/2023/07/20/diaries/%E8%A3%B8%E8%BE%9E%E6%9D%82%E8%AE%B0%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fe5db3824c9fe077b30e17e1d6f4f9f6e73784dceb31d6954afc3700707807a9">a834c3e63deaa882de86997759bf5603db66f9a0d1b6d5c8dd8a26e5bd8e9e8c8a7ce0104f34cf2f100e536c0fe86bef2dc08d36f03192a140c7c2a01fc0267c9173d8dce80a0ee54e6d0adc24b4f17621e094cff1e055595c0384d56172abab279a605107220a75d05a5b44d995c98f1d9046106590c9cc75c83dbc1e1975299553623ba22a0c0db5cb65ca22a8ea6e995d9b55dbedc876dfa3f43bc8d97529a0fbcf024bc5e52199d9fbbf1d21bc23ca9e27a06eb07f759fd64d62deb866ab7d3930b67ebdce8717c8d74340f4d5b370b77293174e81015def542885f9f986cf64cb8b0ebf5256cc21b9661c57f43faad6f051436fda627f03aeea4f2a608ea5c1bb6a6b65a57157a8fb9f07179161e571c4123b3475c0c46f4153e4236a484dd9da5ce1e7dc2767fcbdeb47b26f333d42b9bd51af2b3f49de106ebba2a3b056e7418843af7782dcbffba70819acf29bae534fee7001bfb4932055af08e3a5680ec236dca211342056d21554b15add5c85f0f82b4916b6c64692cb94d034de0b249a874e94ef64a8d0fdc6368a9de6d5893d4c038870e518c31f079a7dbbb65777986d4a08694cf3215ddc2437648b6a987f22324ea2a7fd0803a8214543e8ac24405df98ae247d2b64c0023b6149321f36f33259f9ce72a07a4efc7c0f3de4c18abbb2d7553327ccd9c9d1df5985a4141925f21995edbfb6df25147eeca493ea479706c1971ca684203a0b2a9c9e9adddd1e15b37bcbd887b83c91aa2f01bb9ec458087bef614eff3e9587456be1e134d87eac8ea7ce51baa35325d9e1095d6acc29e5ef292ad095c46ff24a2e22be4a02bcfa980cf54517808dcab5cac679bef688711bb2851237a6c87adaae6013a8d62dfd0283f476acd1087aec08cf569f96592f8b7a97b50863dee77001d606a2bc9dad190b4902cc479e672689b4499a2941eb55fa52301d2b6e71491618dd6d458e26ed11934b1971a2371ef14499eecf1ee2358a1e6f0804e596385e006708a7c74a3b3f8fe1e2d8564e13c9065934040ac1f61e210f31b42bfbaf19eb5e42e265763e1858a5ede082ef0119d6edd68064ee6e62bfbf9f6b42a14f5353ddcb6a7dbe7af123a3b5fa58cc57f0e6d5f2e6f41777e86751e101b1d215d48ab544b508edd6c4db497fb937fc24ef11f9386e887bda13225d4b3932fd9d19d1d79f3a61ada812ec45724f4b7ebd894b6e5d0ed68a4ffc4eca8ab22fe00c9e27b3cb56b09200f84b7821deda6794d5f5d6c2a8192505fb1aebd0ce3d3c8b6ef7844802f20303aa00e2509cde003afd984ba6b8e34bd7ee0bfedd27168c1bf9ad328413e0c2a2839af1755114dcec9a94318eed111643f98f0f2a42d88437b26d600b554c274ee99cdac24e5119d561106f677873d240884cfcc212c283e9e3efcf396842091a053788ae40e36050897932971bf5239b6cff9c8c78b9b9bda178b72ddde1355e22d79a1b4bddb1bb2101319e01b77ef1ae05e1cadf5b2ca24f371877573e8c39c8a939cb767e3f51a28cdba8f37d4893916f7c4c5ddf23fc2e05fade595e4073c60eb4af017d6170cf4bf676b43f1827449f92b6ace4b22852f211c174794eca40b664dd11845d2fd6da5ac9e6c824821ffb055cceda0e7e29bfc952fe430e52808e4b2c44b2b74e4ed5b680b0713da339c75496af7ee69eb82749bddf686ba7c11b77425cffc2de63aed8c77cb9adc8b96a3aeccc3dc13cbb658</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">私人领地</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>裸辞杂记一</title>
      <link href="/2023/07/20/diaries/%E8%A3%B8%E8%BE%9E%E6%9D%82%E8%AE%B0%E4%B8%80/"/>
      <url>/2023/07/20/diaries/%E8%A3%B8%E8%BE%9E%E6%9D%82%E8%AE%B0%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4024bd03b8f4f9a802b5f0dbd7bcaf0bd1e26723810c42e300666b44ce296528"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">私人领地</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Next主题去除目录自动标号</title>
      <link href="/2023/07/09/posts/Next%E4%B8%BB%E9%A2%98%E5%8E%BB%E9%99%A4%E7%9B%AE%E5%BD%95%E8%87%AA%E5%8A%A8%E6%A0%87%E5%8F%B7/"/>
      <url>/2023/07/09/posts/Next%E4%B8%BB%E9%A2%98%E5%8E%BB%E9%99%A4%E7%9B%AE%E5%BD%95%E8%87%AA%E5%8A%A8%E6%A0%87%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>Next主题自动添加的序号比较生硬，还是文章本身设置的章节序号更加直观自然<span id="more"></span><br>我们在写文章时，通常会自己对各个章节进行标序，会使用各种各样合适的序号，像下面这些</p><ul><li><code>一、</code> <code>二、</code> <code>三、</code> <code>四、</code>  </li><li><code>1.</code> <code>2.</code> <code>3.</code> <code>4.</code></li><li><code>(1).</code> <code>(2).</code> <code>(3).</code> <code>(4).</code></li><li><code>(一)、</code> <code>(二)、</code> <code>(三)、</code> <code>(四)、</code> </li><li><code>...</code></li></ul><br>但实际上构建时，<code>Next</code>主题会自动为我们的文章加上章节序号，但是当文章本身有章节序的时候，就会显得不伦不类，像下面这样<p><img src="/2023/07/09/posts/Next%E4%B8%BB%E9%A2%98%E5%8E%BB%E9%99%A4%E7%9B%AE%E5%BD%95%E8%87%AA%E5%8A%A8%E6%A0%87%E5%8F%B7/%E8%87%AA%E5%8A%A8%E6%A0%87%E5%8F%B7.jpg" alt="自动标号"></p><p><br>想要取消的话，修改<b>主题配置文件</b>  <code>_config.next.yml</code>文件的<code>toc</code>项，将<code>number</code>改为<code>false</code>即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Table of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># Front-matter variable (nonsupport wrap expand_all).</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span> <span class="comment">#去除博客为目录自动标上序号</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> 目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题新增评论系统</title>
      <link href="/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>一个优秀的博客应当允许读者能够自由的抒发自己的意见 <span id="more"></span></p><h4 id="1-评论系统选择"><a href="#1-评论系统选择" class="headerlink" title="1. 评论系统选择"></a>1. 评论系统选择</h4><p>在此之前我使用的评论系统为<code>Valine</code>，重新配置博客以后，发现<code>Valine</code>评论系统被从Next主题配置中移除，移除原因见<a href="https://github.com/next-theme/hexo-theme-next/issues/188#issuecomment-766578906">Next V8.1.0移除Valine</a> ，且<code>Valine</code>的代码已经停更，因此笔者不得不寻求新的评论系统</p><p>目前<code>Next</code>支持的评论系统有很多，<code>Disqus</code>, <code>DisqusJS</code>, <code>Changyan</code>, <code>LiveRe</code>, <code>gitalk</code>, <code>Utterances</code>等等，包括已经移除的<code>Valine</code>也是可以使用</p><p>其实最迎合笔者需求的就是<code>Valine</code>，轻量简洁，无需登录也可评价，其余的评论系统一般都是需要注册登录才可以回复，对于很多读者来说可能并没有那么多的耐心，找了半天发现一款<code>Valine</code>的替代品——<code>Waline</code>, 其实基本上和<code>Valine</code>差不多，一样的轻量简洁，支持不登陆评论</p><p>其实官方的配置教程已经非常的详细，见<a href="https://waline.js.org/guide/get-started/#leancloud-%E8%AE%BE%E7%BD%AE-%E6%95%B0%E6%8D%AE%E5%BA%93">官方文档</a> ，本次的配置过程就简单写下</p><h4 id="2-前置条件"><a href="#2-前置条件" class="headerlink" title="2. 前置条件"></a>2. 前置条件</h4><ul><li><p><strong>1. 创建LeanCloud存储评论的数据库</strong></p><blockquote><ol><li><p>注册<code>LeanCloud</code>国际版，网址为 <a href="https://console.leancloud.app/apps">https://console.leancloud.app/apps</a></p><img src="/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/LeanCloud.png" alt="LeanCloud" style="zoom:50%;"></li><li><p>创建应用(开发版)，获取应用的<code>AppId</code>，<code>AppKey</code>，<code>MasterKey</code>即可</p></li></ol></blockquote></li><li><p><strong>2. Vercel部署评论系统服务端</strong></p><blockquote><p>点击<a hrfef="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample">链接</a>，跳转至Vercel进行服务端部署，按照官方文档操作，记住下面<strong>服务端的地址</strong></p><p>记住教程里说的，<strong>第一个评论用户为管理员</strong>，要记得注册一个用户</p><p><img src="/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/vercel.png" alt="vercel"></p></blockquote></li></ul><h4 id="3-本地配置"><a href="#3-本地配置" class="headerlink" title="3. 本地配置"></a>3. 本地配置</h4><ul><li><p>1.安装<code>Waline</code>插件 (<a href="https://www.npmjs.com/package/@waline/hexo-next">插件网址</a>)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">@waline/hexo-next</span></span><br></pre></td></tr></table></figure></li><li><p>2.修改<code>_config.next.yml</code>文件</p><p>在<code>_config.next.yml</code>文件末尾添加<code>Waline</code>的<strong>配置项</strong>，<strong>配置项</strong>的内容在插件网址中有介绍，即<strong>标红部分</strong></p><img src="/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/waline.png" alt="waline" style="zoom:50%;"><p>或者在<code>waline</code>插件安装完成后，在本地的<code>README.md</code>文件也可以看到</p><img src="/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/waline2.png" alt="waline2" style="zoom:50%;"></li></ul><p>我的配置项如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Waline Config File</span></span><br><span class="line"><span class="comment"># For more information:</span></span><br><span class="line"><span class="comment"># - https://waline.js.org</span></span><br><span class="line"><span class="comment"># - https://waline.js.org/reference/component.html</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="comment"># New! Whether enable this plugin</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline server address url, you should set this to your own link</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">your</span> <span class="string">server</span> <span class="string">link</span></span><br><span class="line">  <span class="comment"># Waline library CDN url, you can set this to your preferred CDN</span></span><br><span class="line">  <span class="comment"># libUrl: https://unpkg.com/@waline/client@v2/dist/waline.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline CSS styles CDN url, you can set this to your preferred CDN</span></span><br><span class="line">  <span class="attr">cssUrl:</span> <span class="string">https://unpkg.com/@waline/client@v2/dist/waline.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom locales</span></span><br><span class="line">  <span class="attr">locale:</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">comment</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">commentCount:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Pageviews count, <span class="doctag">Note:</span> You should not enable both `waline.pageview` and `leancloud_visitors`.</span></span><br><span class="line">  <span class="attr">pageview:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom emoji</span></span><br><span class="line">  <span class="attr">emoji:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/weibo</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/alus</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/bilibili</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/qq</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/tieba</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/tw-emoji</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Comment infomation, valid meta are nick, mail and link</span></span><br><span class="line">  <span class="attr">meta:</span> [<span class="string">nick</span>, <span class="string">mail</span>, <span class="string">link</span>]</span><br><span class="line">  <span class="comment">#   - nick</span></span><br><span class="line">  <span class="comment">#   - mail</span></span><br><span class="line">  <span class="comment">#   - link</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Set required meta field, e.g.: [nick] | [nick, mail]</span></span><br><span class="line">  <span class="comment"># requiredMeta:</span></span><br><span class="line">  <span class="comment">#   - nick</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Language, available values: en-US, zh-CN, zh-TW, pt-BR, ru-RU, jp-JP</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Word limit, no limit when setting to 0</span></span><br><span class="line">  <span class="comment"># wordLimit: 0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Whether enable login, can choose from &#x27;enable&#x27;, &#x27;disable&#x27; and &#x27;force&#x27;</span></span><br><span class="line">  <span class="attr">login:</span> <span class="string">enable</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># comment per page</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>参考链接：</p><ol><li><a href="https://waline.js.org/guide/get-started/">waline官方文档</a></li><li><a href="https://blog.csdn.net/jiunian_2761/article/details/122621667">Next主题添加waline评论系统</a></li><li><a href="https://www.npmjs.com/package/@waline/hexo-next?activeTab=readme">waline插件地址</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> 评论系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题配置字数统计与阅读时长</title>
      <link href="/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E4%B8%8E%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF/"/>
      <url>/2023/07/08/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E4%B8%8E%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<p>一眼让读者对文章的大小和阅读耗时有一个大致的把控，对于读者来说，是一件好事 <span id="more"></span></p><p>下面是配置方法</p><h4 id="1-安装插件-hexo-word-counter"><a href="#1-安装插件-hexo-word-counter" class="headerlink" title="1. 安装插件 hexo-word-counter"></a>1. 安装插件 hexo-word-counter</h4><p>网上有些教程是让安装<code>hexo-wordcount</code>插件，或者其他版本的插件，实际上如果查看主题配置文件，可以看到注释中附带了<a href="https://github.com/next-theme/hexo-word-counter">插件链接</a>，因此我们采用主题配置文件里介绍的<code>hexo-word-counter</code>插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-word-counter</span><br></pre></td></tr></table></figure><h4 id="2-修改主题配置文件"><a href="#2-修改主题配置文件" class="headerlink" title="2. 修改主题配置文件"></a>2. 修改主题配置文件</h4><p>其中，<code>item_text_total</code>属性改为<code>true</code>，添加<code>wpm</code>属性与合适值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Post wordcount display settings</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Dependencies: https://github.com/next-theme/hexo-word-counter</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_total: true</span><br><span class="line">  wpm: 275              # 一分钟阅读的字数</span><br></pre></td></tr></table></figure><p><code>wpm</code>是每分钟阅读字数，一般博文大多数是纯中文，设成300，中英文混合的情况较多时，设成275，其他的详细属性介绍请看<a href="https://github.com/next-theme/hexo-word-counter">官网说明</a> </p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> 字数统计 </tag>
            
            <tag> 阅读时长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题配置不蒜子访问计数</title>
      <link href="/2023/07/07/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%B8%8D%E8%92%9C%E5%AD%90%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0/"/>
      <url>/2023/07/07/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%B8%8D%E8%92%9C%E5%AD%90%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>给每篇文章添加上<strong>阅读次数</strong>，是一个比较能衡量博文价值的功能，也会给作者带来成就感和创作的动力</p><span id="more"></span><p>由于Next主题实际上是支持<strong>不蒜子访问计数</strong>这个功能的，所以实际上我们只需要对配置文件进行修改就可以了</p><p>在<code>_config.next.yml</code>文件中找到下面的配置选项，将<code>enable</code>的值从<code>false</code>改为<code>true</code>即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">far</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure><p>如果配置没有问题，而不蒜子计数功能失效时，可以去<a href="http://ibruce.info/2015/04/04/busuanzi/">官网</a>查看，是否是不蒜子的脚本链接有所更改</p><p>还有一点，主页也会显示站点访问人数和浏览次数，如下所示，在本地查看的时候这两个数据就是不正确的，部署到远端再查看就好啦</p><p><img src="/2023/07/07/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%B8%8D%E8%92%9C%E5%AD%90%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0/%E4%B8%8D%E8%92%9C%E5%AD%90.png" alt="不蒜子"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> busuanzi </tag>
            
            <tag> 不蒜子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next新增搜索功能</title>
      <link href="/2023/07/07/posts/Next%E6%96%B0%E5%A2%9E%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/07/07/posts/Next%E6%96%B0%E5%A2%9E%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>当文章的数量越来越多时，如果站内有搜索功能，对读者来说会非常的实用</p><span id="more"></span><h4 id="1-安装搜索插件"><a href="#1-安装搜索插件" class="headerlink" title="1. 安装搜索插件"></a>1. 安装搜索插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search</span><br></pre></td></tr></table></figure><p>如果你在网上搜索教程会发现，有些教程安装的是<code>hexo-generator-search</code>插件，有些教程安装的是<code>hexo-generator-searchdb</code>插件，区别在于<a href="https://github.com/theme-next/hexo-generator-searchdb">theme-next&#x2F;hexo-generator-searchdb</a> 目前为止已经停更</p><p>查看一下发现项目属于<code>IVan</code>大佬管辖，众所周知，<code>Ivan</code>大佬管理的<code>theme-next</code>主题也已停止更新，不再活跃，因此才有了后来的<code>Stevenjoezhang</code>管理的<code>next-theme</code>主题，详细见博客内相关博文，话不多说，我们要认准安装的是<a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a></p><p><code>hexo-generator-search</code>本身在不断的更新，还在支持新的能力</p><h4 id="2-修改主题配置文件"><a href="#2-修改主题配置文件" class="headerlink" title="2. 修改主题配置文件"></a>2. 修改主题配置文件</h4><p>修改主题配置文件<code>_config.next.yml</code>中的<code>local_search</code>项</p><p>将<code>enable: false</code>开启为<code>enable: true</code> </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>到这一步其实基础的搜索功能就可以使用了，且一般不会有问题</p><h4 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h4><p>大家网上在搜索教程的时候，会发现有些教程还会修改 <strong>站点配置文件</strong><code> _config.yml</code>，在站点配置文件中添加以下内容，大差不差，有的会加更多属性，有的会少加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./search.xml</span></span><br></pre></td></tr></table></figure><p>这快内容是参考官方配置的，下面是官方的解释：</p><blockquote><ul><li><p><strong>path</strong> - file path. By default is <code>search.xml</code> . If the file extension is <code>.json</code>, the output format will be JSON. Otherwise XML format file will be exported.</p></li><li><p>field</p><p>- the search scope you want to search, you can chose:</p><ul><li><strong>post</strong> (Default) - will only covers all the posts of your blog.</li><li><strong>page</strong> - will only covers all the pages of your blog.</li><li><strong>all</strong> - will covers all the posts and pages of your blog.</li></ul></li><li><p><strong>content</strong> - whether contains the whole content of each article. If <code>false</code>, the generated results only cover title and other meta info without mainbody. By default is <code>true</code>.</p></li><li><p><strong>template</strong> (Optional) - path to a custom XML template</p></li></ul></blockquote><p>首先解释一下<code>search.xml</code>文件的作用，实际上是由搜索插件整合文章的信息生成的一个用于本地检索的数据库，换句话说为全站所有 <code>post</code> 类型的页面生成结构化的数据，并保存在本站的 <code>/search.xml</code> 当中，借助这个文件，我们就可以实现本地搜索功能</p><p>这个文件的生成与否，和<strong>站点配置文件</strong>是否添加<code>search:</code>选项并无关系，不配置也会生成，因为这就是搜索功能所必需的一个文件</p><p><img src="/2023/07/07/posts/Next%E6%96%B0%E5%A2%9E%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/xml%E6%96%87%E4%BB%B6.png" alt="xml文件"></p><p>就是说<strong>站点配置文件</strong>可以按需修改，可以添加配置项，也可以不添加，不添加的话默认生成的就是<code>search.xml</code></p><h4 id="4-可能出现的问题"><a href="#4-可能出现的问题" class="headerlink" title="4. 可能出现的问题"></a>4. 可能出现的问题</h4><p>有的小兄弟在配置<strong>搜索功能</strong>时会出现无法搜索的问题，大致是这两点问题</p><ul><li><p><code>搜索插件没有配置好</code></p><p><strong>搜素插件没有配置好</strong>时，按照上述配置方式配置一遍就行，一般没有什么问题</p></li><li><p><code>文章中包含特殊字符</code></p><p><strong>文章中包含特殊字符</strong>时，有两个方法，一是将含有特殊字符的文章全部找出来，删去或修改都可以，然后重新<code>hexo g &amp; hexo s</code>，二是将站点配置文件中的<code>search.xml</code>修改为<code>search.json</code></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.json</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure><p><code>json</code>格式比<code>xml</code>格式更加的通用简单，即使含有特殊字符，大概率也不会产生无法搜索的问题，就是采用<code>json</code>格式在搜索时，预览中不会渲染<code>markdown</code>语法，会出现下面这种情况</p><img src="/2023/07/07/posts/Next%E6%96%B0%E5%A2%9E%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/json问题.png" alt="json问题" style="zoom:67%;"><p>当然我还是希望即使是预览，也能正常一点，下面是改成<code>search.yml</code>后的结果</p><img src="/2023/07/07/posts/Next%E6%96%B0%E5%A2%9E%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/xml显示.png" alt="xml显示" style="zoom:67%;"><p>参考链接：</p><ol><li><a href="https://wangjiezhe.com/posts/2018-10-29-Hexo-NexT-2/">Hexo NexT 魔改系列之二</a></li><li><a href="https://cloud.tencent.com/developer/article/1624646">为 hexo 博客添加本地搜索功能</a></li><li><a href="https://www.sqlsec.com/2017/12/hexosearch.html">Hexo 博客无法搜索的终极解决方法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题开启文末版权声明</title>
      <link href="/2023/07/07/posts/Next%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E6%9C%AB%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/"/>
      <url>/2023/07/07/posts/Next%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E6%9C%AB%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>技术分享是自由的，但是也要尊重知识的 “源头们” </p><span id="more"></span><p>添加版权声明的难度并不大，下面是配置方法 :</p><p>在<code>_config.next.yml</code> 找到 <code>creative_commons</code> 配置项，将其中的<code>post</code>选项改为<code>true</code> 即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/about/cclicenses/</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="comment"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="comment"># Available values: big | small</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">small</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line">  <span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure><p>默认只是这种比较简单的版权声明，已经够用，如果想要更加个性化，还要修改layout下的相关文件，这里就不进行配置了，意义不大</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> 版权声明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加附件下载功能</title>
      <link href="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>某些情况下，文章需要提供附件下载功能</p><span id="more"></span><h4 id="1-尝试一"><a href="#1-尝试一" class="headerlink" title="1. 尝试一"></a>1. 尝试一</h4><ul><li><p>站点配置文件修改<code>post_asset_folder: true</code>，开启资源文件功能</p><blockquote><p>提供的资源都放在与文章同名的文件夹下</p></blockquote></li><li><p>文章内通过<code>[资源名](资源路径)</code>的方式提供附件下载链接</p></li></ul><p>举个例子，如图<code>phaser.min.js</code>文件放置在资源文件夹</p><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="资源文件夹"></p><br><p><strong>引用一：</strong><code>[phaser.min.js](./Next新增自定义游戏菜单/phaser.min.js)</code></p><p>文章内通过<strong>引用一</strong>的方式引用时，网站解析出来的路径为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:4000/2023/07/06/posts/Next新增自定义游戏菜单/Next新增自定义游戏菜单/phaser.min.js</span><br></pre></td></tr></table></figure><p>可以看到路径多了一层<code>Next新增自定义游戏菜单</code></p><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E9%94%99%E8%AF%AF%E8%A7%A3%E6%9E%90.png" alt="错误解析"></p><br><p><strong>引用二：</strong><code>[phaser.min.js](phaser.min.js)</code></p><p>文章内通过引用二的方式引用时，网站解析出来的路径为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:4000/2023/07/06/posts/Next新增自定义游戏菜单/phaser.min.js</span><br></pre></td></tr></table></figure><p>解析是正常解析了，但并不会跳出下载框，只是将文件的内容输出，也并没有达到理想的功能</p><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E6%AD%A3%E5%B8%B8%E8%A7%A3%E6%9E%90.png" alt="正常解析"></p><br><p>另外一个问题是，上面两处的链接都是在<u><strong>文章所在页面</strong></u>触发的，即下图标红处</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:4000/2023/07/06/posts/Next新增自定义游戏菜单/</span><br></pre></td></tr></table></figure><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2.png" alt="文章页面"></p><br><p>当在<strong><u>博客主页页面</u></strong>直接触发，即<code>http://127.0.0.1:4000/</code>时，上面两种解析方式都会失败</p><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E4%B8%BB%E9%A1%B5%E9%A1%B5%E9%9D%A2.png" alt="主页页面"></p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">引用一: [phaser.min.js](./Next新增自定义游戏菜单/phaser.min.js)</span><br><span class="line">会解析为</span><br><span class="line">http://127.0.0.1:4000/Next新增自定义游戏菜单/phaser.min.js</span><br></pre></td></tr></table></figure><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E4%B8%BB%E9%A1%B5%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A52.png" alt="主页解析失败2"></p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">引用二: [phaser.min.js](phaser.min.js)</span><br><span class="line">会解析为</span><br><span class="line">http://127.0.0.1:4000/phaser.min.js</span><br></pre></td></tr></table></figure><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E4%B8%BB%E9%A1%B5%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A51.png" alt="主页解析失败1"></p><br><p><b>可以看到，对于<code>[文件名](文件路径)</code>的解析，hexo都是基于网页当前的路径，后面跟上括号中所填写的<u>文件路径</u>进行解析的，也就是相对路径，因此这些实现方案都不太理想</b></p></blockquote><br><h4 id="2-尝试二"><a href="#2-尝试二" class="headerlink" title="2. 尝试二"></a>2. 尝试二</h4><p>其余的基本上都是一些通过图床存储文件，云盘存储文件的形式进行在线分享，相比于在线的形式，笔者一直钟情于<strong>本地资源引用</strong>的方式，因此这些就不做考虑</p><br><h4 id="3-最终方案"><a href="#3-最终方案" class="headerlink" title="3. 最终方案"></a>3. 最终方案</h4><p>通过html语言的<code>&lt;a&gt;</code>标签，实现对文件的下载</p><ul><li><p>在<code>博客目录/source/</code>下新建一个<code>download/</code>文件夹</p><blockquote><p>此文件夹下用于存储整个博客需要下载的附件，如图</p><p><img src="/2023/07/07/posts/Hexo%E6%B7%BB%E5%8A%A0%E9%99%84%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="下载文件夹"></p></blockquote></li><li><p>文章内通过<code>&lt;a&gt;</code>标签进行资源引用</p><blockquote><p><code>&lt;a href=&quot;/download/Next新增自定义游戏菜单/phaser.min.js&quot; download&gt;phaser.min.js&lt;/a&gt;</code></p><p>其中标签内的路径采用<strong>绝对路径</strong>，直接检索<code>download</code>下的资源，后面也要带上<code>download</code>标签，不然点击时不会跳出下载框</p></blockquote></li></ul><p><a href="/download/Hexo添加附件下载功能/测试下载.txt" download>测试下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 附件 </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next新增自定义游戏菜单</title>
      <link href="/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B8%E6%88%8F%E8%8F%9C%E5%8D%95/"/>
      <url>/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B8%E6%88%8F%E8%8F%9C%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>浏览吾爱破解的网站时，发现他们的404页面是一个叫**”围住小猫”**的游戏，非常有意思，就萌生了将之搬到自己博客上面的想法</p><span id="more"></span><p>如下图</p><p><img src="/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B8%E6%88%8F%E8%8F%9C%E5%8D%95/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3.png" alt="吾爱破解"></p><p>这个游戏主要是依赖<code>phaser</code>游戏框架，主要配置方式有两种，<strong>一种是直接通过cdn链接加载远程js代码，一种是将js下载到本地，直接本地引用js代码</strong></p><h4 id="1-远程加载"><a href="#1-远程加载" class="headerlink" title="1. 远程加载"></a>1. <strong>远程加载</strong></h4><p>将以下代码块复制到md文件中即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;catch-the-cat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/js/catch-the-cat/phaser.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/js/catch-the-cat/catch-the-cat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span>=<span class="string">&quot;defer&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/js/catch-the-cat/game.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于不能确保链接一直有效，因此我采用的是本地引用的形式</p><h4 id="2-本地引用"><a href="#2-本地引用" class="headerlink" title="2. 本地引用"></a>2. 本地引用</h4><p><strong>“圈小猫”</strong>游戏主要依赖了两个js脚本，<code>phaser.min.js</code>和<code>catch-the-cat.js</code>两个，将他们放在<code>next/source/js/game</code>文件夹下，<code>game/</code>是自己创建的目录，直接放在<code>js/</code>下也可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;/js/game/phaser.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/js/game/catch-the-cat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;div id=&quot;catch-the-cat&quot; style=&quot;width:100%;margin-top:32px;text-align:center&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.game = new CatchTheCatGame(&#123;</span><br><span class="line">    w: 11,</span><br><span class="line">    h: 11,</span><br><span class="line">    r: 20,</span><br><span class="line">    backgroundColor: 0xffffff,</span><br><span class="line">    parent: &#x27;catch-the-cat&#x27;,</span><br><span class="line">    statusBarAlign: &#x27;center&#x27;,</span><br><span class="line">    credit: &#x27;github.com/ganlvtech&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><img src="/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B8%E6%88%8F%E8%8F%9C%E5%8D%95/%E5%9C%88%E4%BD%8F%E7%8C%AB.png" alt="圈住猫"></p><p>附件：</p><p><a href="/download/Next新增自定义游戏菜单/phaser.min.js" download>phaser.min.js</a></p><p><a href="/download/Next新增自定义游戏菜单/catch-the-cat.js" download>catch-the-cat.js</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题加载本地自定义js文件</title>
      <link href="/2023/07/06/posts/Next%E4%B8%BB%E9%A2%98%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E8%87%AA%E5%AE%9A%E4%B9%89js%E6%96%87%E4%BB%B6/"/>
      <url>/2023/07/06/posts/Next%E4%B8%BB%E9%A2%98%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E8%87%AA%E5%AE%9A%E4%B9%89js%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>Next为什么要配置加载本地自定义js文件，道理和配置引用本地图片一样 <span id="more"></span></p><ul><li><p><strong>在线资源不稳定</strong></p><p>加载第三方js依赖其站点的稳定性，当站点停止维护或者链接更改，我们加载的地址就会失效</p></li><li><p><strong>加载速度慢</strong></p><p>某些js远程加载时，耗时较久，导致网页加载的时间延长</p></li></ul><br><p>解决办法就是，将js下载下来，放在<code>next/source/js</code>目录下，让hexo在生成静态网站时，引用的是静态站点本身的js</p><br><p>参考链接：</p><p><a href="https://blog.csdn.net/qianghaohao/article/details/90736310">https://blog.csdn.net/qianghaohao/article/details/90736310</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next新增404页面</title>
      <link href="/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E404%E9%A1%B5%E9%9D%A2/"/>
      <url>/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E404%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>添加404页面其实有两种方式</p><span id="more"></span><h4 id="1-根目录添加404-html"><a href="#1-根目录添加404-html" class="headerlink" title="1. 根目录添加404.html"></a>1. 根目录添加404.html</h4><p>直接在source目录下添加404.html文件，和<code>source/_posts</code>目录同级，文件内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">layout: false</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;/&quot;</span> <span class="attr">homePageName</span>=<span class="string">&quot;返回&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个页面是腾讯的寻人页面，如果说想要在主页菜单项也能访问的话，就在<code>_config.next.yml</code>中的<code>menu</code>选项，取消<code>commonweal: /404/ || fa fa-heartbeat</code>的注释，此时主页就会多出一个 公益菜单</p><p><img src="/2023/07/06/posts/Next%E6%96%B0%E5%A2%9E404%E9%A1%B5%E9%9D%A2/404%E8%8F%9C%E5%8D%95.png" alt="404菜单"></p><br><h4 id="2-创建404菜单目录"><a href="#2-创建404菜单目录" class="headerlink" title="2. 创建404菜单目录"></a>2. 创建404菜单目录</h4><p>和新增菜单项的过程一样，执行<code>hexo new page 404</code>，就会在<code>博客根目录/source/</code>下创建一个404文件夹，其中会有一个<code>index.md</code>文件，修改文件内容为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">date: 2023-07-06 09:44:20</span><br><span class="line">permalink: /404</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span>                            </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;/&quot;</span> <span class="attr">homePageName</span>=<span class="string">&quot;返回&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>记得<code>index.md</code>文件的<code>front-matter</code>内容，要添加<code>permalink: /404</code>，否则设置不会生效</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> 404 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题配置自定义菜单</title>
      <link href="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/"/>
      <url>/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>博客菜单的作用就和饭店菜单的作用一样，只不过一个顾客是<strong>读者</strong>，一个顾客是<strong>食客</strong></p><span id="more"></span><p>博客的菜单项就是下面红色标记的部分，在未配置主题的菜单项时，没有主页，作者介绍，也没有分类，归档等功能选项，配置一下会比较好看且更加有条理</p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/菜单.png" alt="菜单" style="zoom:50%;"><h4 id="1-修改主题配置文件"><a href="#1-修改主题配置文件" class="headerlink" title="1. 修改主题配置文件"></a>1. 修改主题配置文件</h4><p>主题菜单是在主题配置文件<code>_config.next.yml</code>中<code>menu</code>模块定义的：</p><p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/%E8%8F%9C%E5%8D%95%E9%85%8D%E7%BD%AE.png" alt="菜单配置"></p><p>上面是菜单项名称和对应的图标名称，下面是控制图标是否启用，图标都来自 <a href="https://fontawesome.com/icons">Font Awesome</a> ,在网站上找到合适的图标后如图，将图标名称放在<code>||</code>后面就行</p><h4 id="2-本地创建目录与文件"><a href="#2-本地创建目录与文件" class="headerlink" title="2. 本地创建目录与文件"></a>2. 本地创建目录与文件</h4><p>这里每开启一项菜单，本地就要创建对应的文件夹和<code>index.md</code>文件，可以通过下面这条命令创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 菜单名</span><br></pre></td></tr></table></figure><p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BA.png" alt="目录创建"></p><p>执行成功后，本地会生成相应的目录，并且每个目录下会生成相应的<code>index.md</code>文件</p><p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/%E7%9B%AE%E5%BD%95.png" alt="目录"></p><br><p>到这里，菜单就建立完成了</p><blockquote><p>但是对于标签和分类菜单，需要在<code>index.md</code>中添加<code>type</code>属性，否则虽然页面不会报错，但是不能检索文章信息</p><p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/%E6%A0%87%E7%AD%BE.png" alt="标签"></p><p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/%E5%88%86%E7%B1%BB.png" alt="分类"></p><p>在新建的文章的<code>Front-Matter</code>中添加<code>tags</code>和<code>categories</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Next主题配置自定义菜单</span><br><span class="line">date: 2023-07-05 10:41:32</span><br><span class="line">tags: [Hexo,自定义,菜单,404]</span><br><span class="line"><span class="section">categories: 技术</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>那么此文章就会被标签和分类的检索页面检索到，将信息整理在其页面中，像下面这样，这对于其他菜单项的设置也是一样的</p><p><img src="/2023/07/05/posts/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95/%E6%A0%87%E7%AD%BE%E6%A3%80%E7%B4%A2%E9%A1%B5%E9%9D%A2.png" alt="标签检索页面"></p></blockquote><p>参考链接：</p><p><a href="https://blog.csdn.net/lijing742180/article/details/85622524">https://blog.csdn.net/lijing742180/article/details/85622524</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> 菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo数据文件能力介绍</title>
      <link href="/2023/07/05/posts/Hexo%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E8%83%BD%E5%8A%9B%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/07/05/posts/Hexo%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E8%83%BD%E5%8A%9B%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>Hexo的数据文件能力给博主的个性化创造了无限可能</p><span id="more"></span><blockquote><p>官网的介绍:</p><p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了                                 ——<a href="https://hexo.io/zh-cn/docs/data-files">https://hexo.io/zh-cn/docs/data-files</a></p><p>就是说中本版的翻译有点。。。。</p><p>英文版：</p><p>Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new <strong>Data files</strong>. This feature loads YAML or JSON files in <code>source/_data</code> folder so you can use them in your site.</p><p>​                                                                                             ——<a href="https://hexo.io/docs/data-files.html">https://hexo.io/docs/data-files.html</a></p></blockquote><br><h4 id="1-什么是数据文件"><a href="#1-什么是数据文件" class="headerlink" title="1. 什么是数据文件"></a>1. 什么是数据文件</h4><p>简单来说，就是有些数据你可能会在所有的<b>posts(可以理解为文章)</b>中都使用</p><p>比如<code>hexo</code>创建<code>post</code>时使用的默认模板中，含有一个叫<code>Front-matter</code>的头，其内容也算是一种数据，不过对于文章来说是预定义的数据</p><blockquote><p>Front-matter是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，如下图</p></blockquote><img src="/2023/07/05/posts/Hexo%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E8%83%BD%E5%8A%9B%E4%BB%8B%E7%BB%8D/模板.png" alt="模板" style="zoom:80%;"><p>你可以通过<code>Front-matter</code>去使用这些数据，也可以通过<code>Hexo</code>本身<strong>自定义数据文件</strong>的方式，不过这些都是比较进阶的用法</p><br><p>有兴趣的可以参考这个视频学习，视频可能加载不出来，在线链接 <a href="https://youtu.be/CN31plHbI-ws">https://youtu.be/CN31plHbI-ws</a></p><br><h4 id="2-如何使用数据文件"><a href="#2-如何使用数据文件" class="headerlink" title="2. 如何使用数据文件"></a>2. 如何使用数据文件</h4><p>实际上我们自己在使用时，一般无需自己构建数据文件</p><p>采用下面的这些文件即可，比如<code>styles.styl</code>文件，我们在其中添加一些样式代码，当取消注释后，hexo会自己载入<code>source/_data/</code>下的<code>yml</code>文件或者<code>json</code>文件，或者styl文件</p><p>下面就是<code>styles.styl</code>文件，可以通过添加这个文件，在里面实现自定义样式</p><p><img src="/2023/07/05/posts/Hexo%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E8%83%BD%E5%8A%9B%E4%BB%8B%E7%BB%8D/%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE.png" alt="数据文件配置"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 数据文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客配置之路</title>
      <link href="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/"/>
      <url>/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>仅以此篇文章记录笔者的博客配置过程，希望对各位爱折腾博客小伙伴也能有所帮助</p><span id="more"></span><h4 id="1-Nodejs安装"><a href="#1-Nodejs安装" class="headerlink" title="1. Nodejs安装"></a>1. Nodejs安装</h4><p><strong>官网</strong>：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a> ，推荐下载安装官网长期维护版本</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/Nodejs.png" alt="Nodejs"></p><p>如官网所说，Nodejs是一个开源，跨平台的JavaScript运行时环境，我们使用的Hexo就是要依赖它去运行的，下载完直接安装就行</p><p>记得更新下npm源，由于国内网络原因，默认源下载时可能会卡住</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h4 id="2-Hexo安装"><a href="#2-Hexo安装" class="headerlink" title="2. Hexo安装"></a>2. Hexo安装</h4><p>直接使用npm安装命令安装即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>安装完成后在博客目录执行 <code>hexo init</code> 命令，即可初始化博客基本框架，如下图</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/hexo%E5%88%9D%E5%A7%8B%E5%8C%96.png" alt="hexo初始化"></p><h4 id="3-添加Next主题"><a href="#3-添加Next主题" class="headerlink" title="3. 添加Next主题"></a>3. 添加Next主题</h4><p>博客初始化后，默认主题为landscape主题，笔者一直使用的是Next主题，因此需要下载Next主题的代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在博客目录<span class="built_in">cd</span>到themes文件夹</span></span><br><span class="line">cd themes</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载next代码，注意最后一个参数next/表示主题文件夹的名字，不带上的话默认名字是hexo-theme-next</span></span><br><span class="line">git clone https://github.com/next-theme/hexo-theme-next.git next/</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/Next.png" alt="Next"></p><p>如果不修改主题文件夹的名字为next, 那在修改站点配置文件的主题处时，启用主题应填写<code>hexo-theme-next</code>，即和主题文件夹名保持一致</p><p>接下来，复制主题配置文件<code>博客目录/themes/next/_config.yml</code>，移动到博客目录下，即和<code>themes/</code>目录同级，并改名为<code>_config.next.yml</code>，以后Next主题的所有配置将全部在这个文件里做更改，这样可以实现主题代码和配置相互分离，做到主题平滑更新</p><p>就此，博客的基本框架建立，至于如何写文章大家可以自行查询，基本流程为：</p><ul><li><p><code>hexo new post &quot;文章名&quot;</code></p><p>hexo将在<code>博客目录/source/_posts/</code>下新建一个<code>文章.md</code>文件，这也是我们博客文章源文件的存放之处，注意文章名中不要有空格，可能会导致后续个性化配置时，某些插件的功能不正常</p></li><li><p><code>hexo g</code></p><p>文章完成以后，运行<code>hexo g</code>生成一把，会发现博客目录下多了一个<code>博客目录/public/</code>目录，这里是<code>hexo g</code> 之后的产物</p></li><li><p><code>hexo s</code></p><p><code>hexo s</code>之后就可以在本地查看博客效果，浏览器其进入网址<code>127.0.0.1:4000</code>查看即可</p></li></ul><p>接下来就是个性化之旅，我们往往会希望自己的博客可以支持各种各样的能力，比如检索功能，看板娘展示功能，背景音乐播放功能，粒子时钟功能等等等等，可以根据自己自己所需进行配置</p><h4 id="4-hexo-支持本地图片引用功能"><a href="#4-hexo-支持本地图片引用功能" class="headerlink" title="4. hexo 支持本地图片引用功能"></a>4. hexo 支持本地图片引用功能</h4><p>配置方法已有文章解释，这里只做简单介绍</p><ol><li><p>修改站点配置文件<code>_config.yml</code>中的 <code>post_asset_folder</code> 选项为 <code>true</code> </p><blockquote><p>修改完成后，每次<code>hexo new post &quot;文章名&quot;</code> 的同时，hexo会在同级目录下创建一个同名的文件夹，用以存放这篇文章所需要的所有资源，包括图片，音频，视频等等，文章中使用相对路径引用即可</p></blockquote></li><li><p>安装<code>hexo-asset-img</code> 插件</p><blockquote><p><code>npm install https://github.com/xcodebuild/hexo-asset-image.git</code></p></blockquote></li></ol><p>这样就实现了引用本地图片功能，写文章时图片可以正常预览，生成博客时图片依旧可以正常预览</p><h4 id="5-Next主题配置网页背景与博主头像"><a href="#5-Next主题配置网页背景与博主头像" class="headerlink" title="5. Next主题配置网页背景与博主头像"></a>5. Next主题配置网页背景与博主头像</h4><p>配置方法已有文章解释，这里只做简单介绍</p><ol><li><p>修改<code>_config.next.yml</code>文件中<code>custom_file_path</code>选项，取消<code>style: source/_data/styles.styl</code>的注释</p><blockquote><p>相当于启用了用户自定义的css样式，网页背景图片的设置就在styles.styl文件中</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6.png" alt="样式文件"></p></blockquote></li><li><p>添加<code>source/_data/styles.styl</code>文件，<code>styles.styl</code>文件中设置网页背景图像的路径</p></li><li><p>在主题资源文件夹中<code>next/sources/images/</code>添加所需网页背景图片</p></li><li><p>修改<code>_config.next.yml</code>文件中<code>avatar</code>选项，修改头像图片的路径</p><blockquote><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F.png" alt="设置头像"></p></blockquote></li><li><p>在主题资源文件夹中<code>next/sources/images/</code>添加所需头像图片</p></li></ol><h4 id="6-Next主题配置自定义菜单，404页面"><a href="#6-Next主题配置自定义菜单，404页面" class="headerlink" title="6. Next主题配置自定义菜单，404页面"></a>6. Next主题配置自定义菜单，404页面</h4><ol><li><p>修改<code>_config.next.yml</code>中的<code>menu</code>菜单项，开启<code>主页、关于、标签、分类、归档、游戏、404</code>菜单</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/%E8%8F%9C%E5%8D%95%E9%85%8D%E7%BD%AE.png" alt="菜单配置"></p></li><li><p>执行<code>hexo new page 菜单名</code>命令，可在<code>博客目录/source/</code>目录下创建相应的菜单子目录</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/%E5%AD%90%E7%9B%AE%E5%BD%95.png" alt="子目录"></p></li><li><p>子目录中的<code>index.md</code>文件修改</p><p>主要是<code>tags/index.md</code> 和 <code>categories/index.md</code>需要做修改</p><p><code>tags/index.md</code>文件的<code>front-matter</code>中添加<code>type: tags</code>项</p><p><code>categories/index.md</code>文件中的<code>front-matter</code>中添加<code>type: categories</code> 项</p><p><code>404/index.md</code>文件中的<code>front-matter</code>中添加<code>permalink: /404</code>项</p></li><li><p>像<code>game</code>菜单项这种自定义的菜单，需要在主题语言文件中添加相应译文</p><p><code>next/languages/zh-CN</code>中添加<code>game: 游戏</code>的译文</p></li></ol><h4 id="7-Next主题增加-”圈小猫“-游戏"><a href="#7-Next主题增加-”圈小猫“-游戏" class="headerlink" title="7. Next主题增加 ”圈小猫“ 游戏"></a>7. Next主题增加 ”圈小猫“ 游戏</h4><p>”圈小猫“游戏主要依赖于<code>phaser</code>游戏框架，主要有<code>phaser.min.js</code>框架js 和 <code>catch-the-cat.js</code>游戏代码js两个部分组成</p><p>要引用这两个<code>js</code>文件，一种是采用<strong>cdn链接远程引用</strong>，一种是<strong>本地引用</strong>，笔者钟情于<strong>本地引用</strong></p><ol><li><p>将<code>phaser.min.js</code>和<code>catch-the-cat.js</code>放置在<code>next/source/js/game/</code>路径下</p></li><li><p>在<code>博客目录/source/game/index.md</code>中引用这两个文件即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/game/phaser.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/game/catch-the-cat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;catch-the-cat&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;margin-top:32px;text-align:center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">game</span> = <span class="keyword">new</span> <span class="title class_">CatchTheCatGame</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">w</span>: <span class="number">11</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">h</span>: <span class="number">11</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">r</span>: <span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">backgroundColor</span>: <span class="number">0xffffff</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">parent</span>: <span class="string">&#x27;catch-the-cat&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">statusBarAlign</span>: <span class="string">&#x27;center&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">credit</span>: <span class="string">&#x27;github.com/ganlvtech&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>附件: <a href="/download/Next新增自定义游戏菜单/phaser.min.js" download>phaser.min.js</a> , <a href="/download/Next新增自定义游戏菜单/catch-the-cat.js" download>catch-the-cat.js</a></p><h4 id="8-Hexo添加附件下载功能"><a href="#8-Hexo添加附件下载功能" class="headerlink" title="8. Hexo添加附件下载功能"></a>8. Hexo添加附件下载功能</h4><ol><li><p>将文件放置在<code>博客目录/source/download/</code>目录下</p></li><li><p>文件中提供下载时，使用如下语法即可</p><p><code>&lt;a href=&quot;/download/待下载文件&quot; download&gt;文件名&lt;/a&gt;</code></p></li></ol><h4 id="9-Next主题新增打赏功能"><a href="#9-Next主题新增打赏功能" class="headerlink" title="9. Next主题新增打赏功能"></a>9. Next主题新增打赏功能</h4><ol><li><p>修改<code>_config.next.yml</code>文件中<code>reward_setting</code>和<code>reward</code>选项内容</p><p><code>reward_setting: true</code></p><p><code>reward:</code>添加收款码图片路径</p><p><img src="/2023/07/04/posts/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/%E6%89%93%E8%B5%8F.png" alt="打赏"></p></li><li><p>放置<strong>收款码图片</strong>至路径<code>next/source/images/</code></p></li></ol><h4 id="10-Next主题新增文末版权声明"><a href="#10-Next主题新增文末版权声明" class="headerlink" title="10. Next主题新增文末版权声明"></a>10. Next主题新增文末版权声明</h4><p>将主题配置文件<code>_config.next.yml</code>中<code>creative_commons</code>下的<code>post: false</code>内容修改为<code>post: true</code> </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/about/cclicenses/</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="comment"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="comment"># Available values: big | small</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">small</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line">  <span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure><h4 id="11-Next主题新增搜索功能"><a href="#11-Next主题新增搜索功能" class="headerlink" title="11. Next主题新增搜索功能"></a>11. Next主题新增搜索功能</h4><ol><li><p>安装搜索插件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-search</span></span><br></pre></td></tr></table></figure></li><li><p>修改<strong>主题配置文件</strong><code>_config.next.yml</code>文件中<code>local_search</code>选项，开启<code>enable: true</code></p></li><li><p>在<strong>站点配置文件</strong><code>_config.yml</code>文件最后添加内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">      <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">      <span class="attr">content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="12-Next主题配置不蒜子访问计数"><a href="#12-Next主题配置不蒜子访问计数" class="headerlink" title="12. Next主题配置不蒜子访问计数"></a>12. Next主题配置不蒜子访问计数</h4><p>在<code>_config.next.yml</code>文件中找到下面的配置选项，将<code>enable</code>的值从<code>false</code>改为<code>true</code>即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">far</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure><h4 id="13-Next主题配置文章字数统计和阅读时长"><a href="#13-Next主题配置文章字数统计和阅读时长" class="headerlink" title="13. Next主题配置文章字数统计和阅读时长"></a>13. Next主题配置文章字数统计和阅读时长</h4><ol><li><p>安装插件<code>hexo-word-counter</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-word-counter</span><br></pre></td></tr></table></figure></li><li><p>修改主题配置文件<code>_config.next.yml</code>，<code>item_text_total</code>属性改为<code>true</code>，添加<code>wpm</code>属性与合适值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-word-counter</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span>              <span class="comment"># 一分钟阅读的字数</span></span><br></pre></td></tr></table></figure><p><code>wpm</code>是每分钟阅读字数，一般博文大多数是纯中文，设成300，中英文混合的情况较多时，设成275，其他的详细属性介绍请看<a href="https://github.com/next-theme/hexo-word-counter">官网说明</a></p></li></ol><h4 id="14-Next主题新增评论系统"><a href="#14-Next主题新增评论系统" class="headerlink" title="14. Next主题新增评论系统"></a>14. Next主题新增评论系统</h4><p>详细教程，见官网<a href="https://waline.js.org/guide/get-started/#leancloud-%E8%AE%BE%E7%BD%AE-%E6%95%B0%E6%8D%AE%E5%BA%93">指导文档</a></p><ol><li><p><code>LeanCloud</code>国际版网页创建应用，获取<code>AppId</code>，<code>AppKey</code>，<code>MasterKey</code></p></li><li><p><code>Vercel</code>部署评论区服务端，获取<strong>服务端地址</strong>，待使用</p></li><li><p>安装<code>Waline</code>插件 (<a href="https://www.npmjs.com/package/@waline/hexo-next">插件网址</a>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @waline/hexo-next</span><br></pre></td></tr></table></figure></li><li><p>修改站点配置文件<code>_config.next.yml</code>，在最后添加以下内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Waline Config File</span></span><br><span class="line"><span class="comment"># For more information:</span></span><br><span class="line"><span class="comment"># - https://waline.js.org</span></span><br><span class="line"><span class="comment"># - https://waline.js.org/reference/component.html</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="comment"># New! Whether enable this plugin</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline server address url, you should set this to your own link</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">your</span> <span class="string">server</span> <span class="string">link(刚刚vercel获取的地址)</span></span><br><span class="line">  <span class="comment"># Waline library CDN url, you can set this to your preferred CDN</span></span><br><span class="line">  <span class="comment"># libUrl: https://unpkg.com/@waline/client@v2/dist/waline.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline CSS styles CDN url, you can set this to your preferred CDN</span></span><br><span class="line">  <span class="attr">cssUrl:</span> <span class="string">https://unpkg.com/@waline/client@v2/dist/waline.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom locales</span></span><br><span class="line">  <span class="attr">locale:</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">comment</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">commentCount:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Pageviews count, <span class="doctag">Note:</span> You should not enable both `waline.pageview` and `leancloud_visitors`.</span></span><br><span class="line">  <span class="attr">pageview:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom emoji</span></span><br><span class="line">  <span class="attr">emoji:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/weibo</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/alus</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/bilibili</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/qq</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/tieba</span></span><br><span class="line">  <span class="comment">#   - https://unpkg.com/@waline/emojis@1.0.1/tw-emoji</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Comment infomation, valid meta are nick, mail and link</span></span><br><span class="line">  <span class="attr">meta:</span> [<span class="string">nick</span>, <span class="string">mail</span>, <span class="string">link</span>]</span><br><span class="line">  <span class="comment">#   - nick</span></span><br><span class="line">  <span class="comment">#   - mail</span></span><br><span class="line">  <span class="comment">#   - link</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Set required meta field, e.g.: [nick] | [nick, mail]</span></span><br><span class="line">  <span class="comment"># requiredMeta:</span></span><br><span class="line">  <span class="comment">#   - nick</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Language, available values: en-US, zh-CN, zh-TW, pt-BR, ru-RU, jp-JP</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Word limit, no limit when setting to 0</span></span><br><span class="line">  <span class="comment"># wordLimit: 0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Whether enable login, can choose from &#x27;enable&#x27;, &#x27;disable&#x27; and &#x27;force&#x27;</span></span><br><span class="line">  <span class="attr">login:</span> <span class="string">enable</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># comment per page</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="15-Next主题去除目录自动标号"><a href="#15-Next主题去除目录自动标号" class="headerlink" title="15. Next主题去除目录自动标号"></a>15. Next主题去除目录自动标号</h4><p>修改<strong>主题配置文件</strong> <code>_config.next.yml</code>文件的<code>toc</code> 项，将<code>number</code>改为<code>false</code>即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Table of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># Front-matter variable (nonsupport wrap expand_all).</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span> <span class="comment">#去除博客为目录自动标上序号</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h4 id="16-Hexo-博客部署"><a href="#16-Hexo-博客部署" class="headerlink" title="16. Hexo 博客部署"></a>16. Hexo 博客部署</h4><p>博客距今为止已经两年没有动过，其实之前已经进行过部署操作，在<code>github</code>和<code>gitee</code>的平台都部署过，再部署的过程就变得非常简单了，下面以部署在<code>github</code>为例子进行简单说明</p><ol><li><p>在<code>github</code>创建 <code>用户名.github.io</code> 的仓库</p></li><li><p>安装部署插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm insatll hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>修改站点配置文件<code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">   <span class="attr">repo:</span></span><br><span class="line">     <span class="attr">gitee:</span> <span class="string">git@gitee.com:lasonneil/lasonneil.git,master</span></span><br><span class="line">     <span class="attr">github:</span> <span class="string">git@github.com:Lasonneil/Lasonneil.github.io.git,main</span></span><br></pre></td></tr></table></figure></li></ol><p>我这边部署到了两个页面中，这是两个页面的写法，也可以参考下</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next设置网站背景和头像</title>
      <link href="/2023/07/04/posts/Next%E8%AE%BE%E7%BD%AE%E7%BD%91%E9%A1%B5%E8%83%8C%E6%99%AF%E5%92%8C%E5%A4%B4%E5%83%8F/"/>
      <url>/2023/07/04/posts/Next%E8%AE%BE%E7%BD%AE%E7%BD%91%E9%A1%B5%E8%83%8C%E6%99%AF%E5%92%8C%E5%A4%B4%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p>一个好看的背景会是网页的加分项</p><span id="more"></span><h3 id="1-Next设置网站背景"><a href="#1-Next设置网站背景" class="headerlink" title="1.Next设置网站背景"></a>1.Next设置网站背景</h3><h4 id="1-1-添加自定义样式文件"><a href="#1-1-添加自定义样式文件" class="headerlink" title="1.1 添加自定义样式文件"></a>1.1 添加自定义样式文件</h4><p>在NexT的配置文件<code>_config.next.yml</code>中的<code>custom_file_path</code>参数下设置CSS样式文件<code>style.styl</code>的存储路径，我们可以在此文件中自定义使用自己的各种样式</p><p><img src="/2023/07/04/posts/Next%E8%AE%BE%E7%BD%AE%E7%BD%91%E9%A1%B5%E8%83%8C%E6%99%AF%E5%92%8C%E5%A4%B4%E5%83%8F/%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6.png" alt="样式文件"></p><br><p>默认路径<code>source/_data/style.styl</code>，在对应路径下创建对应的<code>style.styl</code>文件，如下为我的<code>style.styl</code>文件内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background/maid.png</span>);// 设定网页背景图片，images目录位于next/source路径下</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;// 设定背景图片非重复填充</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed; // 设定背景图片不随页面滚动</span><br><span class="line">    <span class="attribute">background-size</span>: cover;// 设置保持图像的纵横比，并将图像缩放至完全覆盖背景区域</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;// 设置背景图片位置，即图片水平和垂直居中与 <span class="attribute">background-position</span>:center center;效果等同</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文本居中</span><br><span class="line">//<span class="selector-class">.index</span> <span class="selector-class">.post-body</span>&#123;</span><br><span class="line">//   <span class="attribute">text-align</span>: center <span class="meta">!important</span>;</span><br><span class="line">//&#125;</span><br><span class="line">// 图片阴影</span><br><span class="line"><span class="selector-class">.medium-zoom-image</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 短代码颜色</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#64dfdf</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#383a42</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 隐藏顶部黑线条</span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//底部文字颜色</span><br><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#07031a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 选字颜色</span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">149</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">149</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//透明化：自定义<span class="attribute">opacity</span>的值。范围为<span class="number">0</span>~<span class="number">1</span>的小数</span><br><span class="line">//文章内容透明</span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">  //透明度</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.92</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//侧边工具栏样式属性</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  //透明度</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.92</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏透明</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.95</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//搜索框透明</span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.92</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 添加顶部边距</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">8px</span> auto <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 圆角计划</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">50px</span> <span class="number">18px</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-brand-container</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span> <span class="number">18px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">18px</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 字体大小</span><br><span class="line"><span class="selector-class">.post-body</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h4 id="1-2-设置背景图片路径"><a href="#1-2-设置背景图片路径" class="headerlink" title="1.2 设置背景图片路径"></a>1.2 设置背景图片路径</h4><p><code>style.styl</code>中可以设置网站背景，其<code>background:url</code>设置了图片的路径，<code>/images/background</code>中的<code>images/</code>路径，位于Next主题目录<code>next/sources/images</code>，因此，只要将图片文件置于此路径即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background/maid.png</span>);// 设定网页背景图片，images目录位于next/source路径下</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;// 设定背景图片非重复填充</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed; // 设定背景图片不随页面滚动</span><br><span class="line">    <span class="attribute">background-size</span>: cover;// 设置保持图像的纵横比，并将图像缩放至完全覆盖背景区域</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;// 设置背景图片位置，即图片水平和垂直居中与 <span class="attribute">background-position</span>:center center;效果等同</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="2-Next设置网站头像"><a href="#2-Next设置网站头像" class="headerlink" title="2. Next设置网站头像"></a>2. Next设置网站头像</h3><p>修改Next的配置文件<code>_config.next.yml</code>，其中有个<code>avatar</code>配置项即是关于头像设置，<code>images/</code>路径与存放网站背景图片的路径一致，都是位于Next主题目录<code>next/sources/images</code>，将图片放于此路径下即可</p><p><img src="/2023/07/04/posts/Next%E8%AE%BE%E7%BD%AE%E7%BD%91%E9%A1%B5%E8%83%8C%E6%99%AF%E5%92%8C%E5%A4%B4%E5%83%8F/%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F.png" alt="设置头像"></p><br><br><hr><blockquote><p>图像存放路径示例：</p><p><img src="/2023/07/04/posts/Next%E8%AE%BE%E7%BD%AE%E7%BD%91%E9%A1%B5%E8%83%8C%E6%99%AF%E5%92%8C%E5%A4%B4%E5%83%8F/%E5%9B%BE%E5%83%8F%E8%B7%AF%E5%BE%84.png" alt="图像路径"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next </tag>
            
            <tag> hexo </tag>
            
            <tag> 网页背景，头像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo配置本地图片引用</title>
      <link href="/2023/07/03/posts/hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8/"/>
      <url>/2023/07/03/posts/hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>文章的图片引用方式至关重要，胡乱引用不可取</p><span id="more"></span><p>我们本地在编写博客的<code>md</code>源文件时，经常需要引用图片，引用主要有两种方式：</p><ul><li><strong>图床图片引用</strong></li><li><strong>本地图片引用</strong></li></ul><br><h4 id="1-图床引用"><a href="#1-图床引用" class="headerlink" title="1. 图床引用"></a>1. 图床引用</h4><p>图床引用，是将图片上传到图床上，然后通过图床生成的链接去引用，如下图，只要使用图中的链接就可以引用上传的图片，方便快捷</p><p><img src="/2023/07/03/posts/hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8/%E5%9B%BE%E5%BA%8A%E5%BD%A2%E5%BC%8F%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87.png" alt="图床形式引用图片"></p><br><p>但是图床引用的方式，在笔者看来不够可靠</p><blockquote><ol><li><p>图床引用这种方式需要依靠网络，当没有网络时，所有的图片都不能加载</p></li><li><p>图床有一定的服务器宕机风险，图床一挂，所有的图片都无法再找回并引用，记得有次浏览文章的时候，文章的图片全部无法加载，发现全部是通过图床引用，对于自己的笔记和分享内容来说，这是不能容忍的事情</p></li><li><p>当图床的图片数量增长到一定程度，没有目录结构，也不便于管理</p></li></ol></blockquote><br><p>因此，对于自己比较重视的文章来说，我觉得采用本地管理图片，引用图片的方式更加安全可靠一些</p><br><h4 id="2-本地引用"><a href="#2-本地引用" class="headerlink" title="2. 本地引用"></a>2. 本地引用</h4><p>hexo支持本地图片引用的配置，<strong>配置方法</strong>如下</p><blockquote><ol><li><p>修改站点配置文件<code>_config.yml</code>中的 <code>post_asset_folder</code> 选项为 <code>true</code></p><p>即 <code>post_asset_folder: true</code> ，配置完成后，我们再使用 <code>hexo new post &quot;article_name&quot;</code> 创建新文章时，hexo会同步为我们创建同名文件夹，用以存储文章所引用的资源，包括图片，音频，视频资源等</p></li><li><p>下载<code>hexo-asset-img</code>插件</p><p>通过 <code>npm install https://github.com/xcodebuild/hexo-asset-image.git</code> </p><p>或者  <code>npm install git@github.com:xcodebuild/hexo-asset-image.git   </code> 下载安装</p><p>(<code>hexo-asset-img</code> github 官方地址: <a href="https://github.com/xcodebuild/hexo-asset-image">https://github.com/xcodebuild/hexo-asset-image</a>)</p></li></ol></blockquote><br><p>引用成功，如图中图片链接正常</p><p><img src="/2023/07/03/posts/hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8.png" alt="本地图片引用"></p><br><p>需要注意的是，插件<code>hexo-asset-img</code> 已经停止更新了，如果你是通过<code>npm install hexo-asset-img</code> 的形式下载，可能并不会生效，可见下图中的图片路径并没有成功转换，因此引用失败</p><p><img src="/2023/07/03/posts/hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E5%A4%B1%E8%B4%A5.png" alt="本地图片引用失败"></p><br><p>虽然已经不更新了，但是简单看了一下内部的代码，实际上实现的功能就是相对路径和绝对路径的转换，因此并不影响它的使用</p><br><p><strong>！！！！注意文件名和文件夹名中最好不要有空格，可能导致图片引用出现问题！！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hexo-asset-img </tag>
            
            <tag> 图片引用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo关资源</title>
      <link href="/2023/07/03/posts/hexo%20%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/"/>
      <url>/2023/07/03/posts/hexo%20%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>学习使用Hexo时，优秀且正确的资源不可或缺</p><span id="more"></span><ol><li><p><strong>hexo官方文档</strong></p><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></li><li><p><strong>hexo github地址</strong></p><p><a href="https://github.com/hexojs">https://github.com/hexojs</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题与配置分离实现平滑更新</title>
      <link href="/2023/07/02/posts/hexo%E4%B8%BB%E9%A2%98%E4%B8%8E%E9%85%8D%E7%BD%AE%E5%88%86%E7%A6%BB%E5%AE%9E%E7%8E%B0%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0/"/>
      <url>/2023/07/02/posts/hexo%E4%B8%BB%E9%A2%98%E4%B8%8E%E9%85%8D%E7%BD%AE%E5%88%86%E7%A6%BB%E5%AE%9E%E7%8E%B0%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p>到目前为止，Hexo有三种主题配置方式</p><span id="more"></span><h3 id="1-站点配置文件方式"><a href="#1-站点配置文件方式" class="headerlink" title="1. 站点配置文件方式"></a>1. 站点配置文件方式</h3><p>这种方式下，所有的配置内容包括 <strong>站点配置</strong>，<strong>主题配置</strong>，全部放在 <strong>站点配置文件(_config.yml)</strong> 当中，不需要修改 <strong>主题配置文件(themes&#x2F;next&#x2F;_config.yml)</strong> 或者创建其他什么文件</p><p>站点配置文件中要添加一个<code>theme_config</code> 属性，所有的主题选项必须放置在 <code>theme_config</code>后，并全部增加两个空格的缩进，如：</p><p><img src="/2023/07/02/posts/hexo%E4%B8%BB%E9%A2%98%E4%B8%8E%E9%85%8D%E7%BD%AE%E5%88%86%E7%A6%BB%E5%AE%9E%E7%8E%B0%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0/%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><br><p><strong>用法</strong>：</p><ol><li>请确认不存在 <code>source/_data/next.yml</code> 文件（如果已存在，请删除）</li><li>从主题的 <code>themes/next/_config.yml</code> 文件中复制你需要的 NexT 配置项到 <code>/_config.yml</code> 中，然后<ul><li>所有这些配置项右移两个空格</li><li>在这些参数最上方添加一行 <code>theme_config:</code></li></ul></li></ol><blockquote><p>有些麻烦，不太推荐这种方式</p></blockquote><br><h3 id="2-数据文件方式"><a href="#2-数据文件方式" class="headerlink" title="2. 数据文件方式"></a>2. 数据文件方式</h3><p>使用这一方式，你现在可以将你的全部配置置于同一位置（<code>source/_data/next.yml</code>），并且不需要修改 <code>themes/next/_config.yml</code>。 但是可能无法让所有 Hexo 外部库都准确处理它们的附加选项（举个例子，<code>hexo-server</code> 模块只会从 Hexo 默认配置文件中读取选项）</p><p>如果在新的 release 中出现了任何新的选项，那么你只需要从 <code>/themes/next/_config.yml</code> 中将他们复制到 <code>/source/_data/next.yml</code> 中并设置它们的值为你想要的选项</p><br><p><strong>用法：</strong></p><ol><li>在<code>source/_data</code>目录创建一个next.yml，将主题配置文件中的配置项按需复制到此文件即可，我一般是将整个主题文件的配置内容全部肤质过来，如果没有<code>_data</code>目录，就新建一个</li><li>next.yml中的override选项置为true</li></ol><blockquote><p>这种方式下，有些配置项可能不支持，因此不推荐这种，且这种方式已经被Next弃用了</p></blockquote><br><h3 id="3-config-name-yml-方式-推荐使用"><a href="#3-config-name-yml-方式-推荐使用" class="headerlink" title="3. _config.[name].yml 方式(推荐使用)"></a>3. <code>_config.[name].yml</code> 方式(推荐使用)</h3><p>使用这种方法，你的所有配置都放在根目录下的<code>_config.[name].yml</code> 中。将 <code>[name]</code> 替换成你在站点配置文件中 <code>theme</code> 选项后的值，比如：<code>next</code>。</p><p><img src="/2023/07/02/posts/hexo%E4%B8%BB%E9%A2%98%E4%B8%8E%E9%85%8D%E7%BD%AE%E5%88%86%E7%A6%BB%E5%AE%9E%E7%8E%B0%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0/%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0%E6%96%B9%E5%BC%8F.png" alt="平滑更新方式"></p><br><p><strong>用法：</strong></p><ol><li>在博客根目录下新建一个配置文件，比如：<code>_config.next.yml</code></li><li>将你需要的 NexT 主题选项从主题配置文件复制到这个配置文件</li><li>如果之前使用的是选择 2 的方式，可以将 <code>/source/_data/next.yml</code> 中的内容复制到 <code>/_config.next.yml</code> 中</li></ol><blockquote><p>推荐使用这种方式，非常便于平滑更新</p></blockquote><br><p>参考链接：</p><ol><li><a href="https://theme-next.js.org/docs/getting-started/configuration.html">https://theme-next.js.org/docs/getting-started/configuration.html</a></li><li><a href="https://xfdj.github.io/2020/05/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98/">https://xfdj.github.io/2020/05/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98/</a></li><li><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/DATA-FILES.md">https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/DATA-FILES.md</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题 </tag>
            
            <tag> 平滑更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>faststone下载注册</title>
      <link href="/2023/07/02/posts/faststone%E4%B8%8B%E8%BD%BD%E6%B3%A8%E5%86%8C/"/>
      <url>/2023/07/02/posts/faststone%E4%B8%8B%E8%BD%BD%E6%B3%A8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<p>一款一直在坚持使用的截图软件 😉</p><span id="more"></span><h4 id="1-faststone"><a href="#1-faststone" class="headerlink" title="1. faststone"></a>1. faststone</h4><blockquote><p>一款强大的截图，屏幕录制工具</p></blockquote><p>官网地址：<a href="https://www.faststone.org/FSCaptureDetail.htm">https://www.faststone.org/FSCaptureDetail.htm</a></p><br><h4 id="2-注册及设置方法"><a href="#2-注册及设置方法" class="headerlink" title="2. 注册及设置方法"></a>2. 注册及设置方法</h4><blockquote><p>注册名:TEAM_BRAiGHTLiNG_2007</p><p>注册码:RPTME-IMDHD-MIEPX-VLXAW</p></blockquote><p>如果您使用的旧版如9.9版已授权注册，可以将旧版如9.9版注册文件及设置文件fsc.db，复制到10.0版FSCapture目录中就能注册10.0版并保持旧版如9.9版的设置，不必重新注册和设置。</p><br><p><strong>更新问题：</strong></p><p>此软件为付费软件，更新的话直接官网下载最新版本，使用注册码注册即可，若注册码失效，去52破解找一找</p>]]></content>
      
      
      <categories>
          
          <category> 软件下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> faststone </tag>
            
            <tag> 软件下载 </tag>
            
            <tag> 截图软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo和hexo-cli的关系</title>
      <link href="/2023/07/02/posts/hexo%E5%92%8Chexo-cli%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
      <url>/2023/07/02/posts/hexo%E5%92%8Chexo-cli%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p>安装hexo时网上的教程总是<code>npm install -g hexo-cli</code>，但是<code>hexo</code>和<code>hexo-cli</code>又是两个模块，我们在使用<code>hexo</code>的时候，总是使用<code>hexo</code>的相关命令，比如<code>hexo g</code> 、<code>hexo s</code>、<code>hexo d</code>等等，貌似并没有使用到<code>hexo-cli</code>的命令</p><span id="more"></span><h4 id="1-官网的解释"><a href="#1-官网的解释" class="headerlink" title="1. 官网的解释"></a>1. 官网的解释</h4><p>思考了半天，发现这个问题没有什么意义，简单的看，按照<a href="https://github.com/hexojs">官网</a>的说明去使用就行了</p><p><img src="/2023/07/02/posts/hexo%E5%92%8Chexo-cli%E7%9A%84%E5%85%B3%E7%B3%BB/hexo%E4%B8%8Ehexo-cli%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="hexo与hexo-cli的关系"></p><p>按照官网的解释，hexo-cli就是hexo的命令行接口模块，hexo的各种命令实际上是通过hexo-cli去实现的，也就是说实际上我们只管安装和使用就行了</p><br><h4 id="2-官网的安装"><a href="#2-官网的安装" class="headerlink" title="2. 官网的安装"></a>2. 官网的安装</h4><p>可以看到官网(<a href="https://github.com/hexojs/hexo-cli)%E5%AF%B9%E4%BA%8Ehexo%E7%9A%84%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4">https://github.com/hexojs/hexo-cli)对于hexo的安装命令</a> <code>npm install hexo-cli -g</code>，实际上也是安装的hexo-cli</p><p><img src="/2023/07/02/posts/hexo%E5%92%8Chexo-cli%E7%9A%84%E5%85%B3%E7%B3%BB/hexo%E5%AE%89%E8%A3%85.png" alt="hexo安装"></p><br><p>再看官网(<a href="https://github.com/hexojs/hexo-cli)%E5%AF%B9%E4%BA%8Ehexo-cli%E7%9A%84%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4%60npm">https://github.com/hexojs/hexo-cli)对于hexo-cli的安装命令`npm</a> install hexo-cli -g&#96;，和hexo安装是一模一样的，</p><p><img src="/2023/07/02/posts/hexo%E5%92%8Chexo-cli%E7%9A%84%E5%85%B3%E7%B3%BB/hexo-cli%E7%9A%84%E5%AE%89%E8%A3%85.png" alt="hexo-cli的安装"></p><br><p>所以实际上，hexo-cli才是hexo功能的核心，hexo只是调用hexo-cli的一层壳罢了</p><blockquote><p>猜测两个项目之间的区别，先有的hexo-cli，只不过要运行等同于hexo s，hexo g这类的功能，执行的命令会非常复杂，不易于用户使用费</p><p>所以后来有了hexo，实际上是hexo-cli的基础上封装了一些简单命令，比如hexo s，hexo g等等</p><p>hexo项目和hexo-cli的项目实际区别并不大，只是一个在另外一个的基础上做了层命令封装</p><p>（仅猜想作此解，不保证正确哈哈哈哈，有时为了不钻牛角尖确实需要学会自欺欺人）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hexo-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Next主题几个仓库的关系</title>
      <link href="/2023/07/02/posts/%E5%85%B3%E4%BA%8ENext%E4%B8%BB%E9%A2%98%E5%87%A0%E4%B8%AA%E4%BB%93%E5%BA%93%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
      <url>/2023/07/02/posts/%E5%85%B3%E4%BA%8ENext%E4%B8%BB%E9%A2%98%E5%87%A0%E4%B8%AA%E4%BB%93%E5%BA%93%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p>初次接触<code>Next</code>主题时，你很容易被它的几个仓库弄昏头脑，其实这些都是有历史缘由的</p><span id="more"></span><h3 id="1-Next仓库"><a href="#1-Next仓库" class="headerlink" title="1. Next仓库"></a>1. Next仓库</h3><p>在配置博客为Next主题时，下载主题代码就碰到了问题，在github上搜索next主题，会蹦出来许多next仓库，有三十多页的结果，这些仓库其实都是自己fork下来的结果，其实主要的仓只有三个：</p><ul><li><code>iissnan/hexo-theme-next</code> </li><li><code>theme-next/hexo-theme-next</code></li><li><code>next-theme/hexo-theme-next</code></li></ul><p>从上到下的的star数量依次下降</p><p><img src="/2023/07/02/posts/%E5%85%B3%E4%BA%8ENext%E4%B8%BB%E9%A2%98%E5%87%A0%E4%B8%AA%E4%BB%93%E5%BA%93%E7%9A%84%E5%85%B3%E7%B3%BB/Next%E4%BB%93%E5%BA%93.png" alt="Next仓库"></p><br><p>先说结论，目前保持活跃，频繁更新的是上图中的第三个，<code>next-theme/hexo-theme-next</code>仓库, 由 <strong>stevenjoszhang</strong> 主导，大家广泛使用的也是这一个，不要下载错了哟</p><br><h3 id="2-几个仓库间的关系"><a href="#2-几个仓库间的关系" class="headerlink" title="2. 几个仓库间的关系"></a>2. 几个仓库间的关系</h3><p>这一点，其实作者 <strong>stevenjoezhang</strong> 在issue中有过解释</p><blockquote><p>详见：<a href="https://github.com/next-theme/hexo-theme-next/issues/4#issuecomment-626205848">https://github.com/next-theme/hexo-theme-next/issues/4#issuecomment-626205848</a></p></blockquote><p><img src="/2023/07/02/posts/%E5%85%B3%E4%BA%8ENext%E4%B8%BB%E9%A2%98%E5%87%A0%E4%B8%AA%E4%BB%93%E5%BA%93%E7%9A%84%E5%85%B3%E7%B3%BB/Next%E4%BB%93%E5%BA%93%E5%85%B3%E7%B3%BB%E7%9A%84%E8%A7%A3%E9%87%8A.png" alt="Next仓库关系的解释"></p><p>简单说明三个仓库：</p><ul><li><code>iissnan/hexo-theme-next</code>         “<strong>iissnan</strong>建立”</li><li><code>theme-next/hexo-theme-next </code>   “<strong>ivan</strong> fork第一个仓库”</li><li><code>next-theme/hexo-theme-next</code>   “<strong>stevenjoezhang</strong> fork第二个仓库”</li></ul><br><p>最早出现的就是第一个仓库 <code>iissnan/hexo-theme-next</code>，由 <strong>iissnan</strong> 建立，主要开发者有 <strong>iissnan</strong>，<strong>ivan</strong> 等等众多大佬</p><p>大佬们都贡献的很顺利，只是后来 <strong>iissnan</strong> 不知为何原因变得不再活跃，而 <strong>ivan</strong> 的权限又不足以很好地管理这个仓库，一段时间后这个问题并没有得到改善，<strong>ivan</strong> 就fork出一个新的仓库 <code>theme-next/hexo-theme-next</code> ，后来的开发者们也都基于这个仓库继续对Next主题做出自己的贡献</p><p>相同的历史发生了，不知为何原因 <strong>ivan</strong> 也变得不再活跃，作为主要贡献者 <strong>stevenjoezhang</strong> 也无法获取更高的权限去好好的管理这个仓库，因此在诸多尝试沟通无果后，<strong>stevenjoezhang</strong> 基于 <strong>ivan</strong> 的仓库，也fork出一个新的仓库 <code>next-theme/hexo-theme-next</code>，目前流行且保持活跃的也就是这个仓库</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> 仓库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OneDrive 本地应用与网页登录问题</title>
      <link href="/2023/07/02/posts/OneDrive%E6%9C%AC%E5%9C%B0%E5%BA%94%E7%94%A8%E4%B8%8E%E7%BD%91%E9%A1%B5%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/"/>
      <url>/2023/07/02/posts/OneDrive%E6%9C%AC%E5%9C%B0%E5%BA%94%E7%94%A8%E4%B8%8E%E7%BD%91%E9%A1%B5%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>由于墙的存在，国内访问国外的服务时，总会碰到写莫名奇妙的问题</p><span id="more"></span><h4 id="1-OneDrive网页登录"><a href="#1-OneDrive网页登录" class="headerlink" title="1. OneDrive网页登录"></a>1. OneDrive网页登录</h4><p><code>OneDrive</code>网页登录的时候，有可能会无法访问，如图下：</p><p><img src="/2023/07/02/posts/OneDrive%E6%9C%AC%E5%9C%B0%E5%BA%94%E7%94%A8%E4%B8%8E%E7%BD%91%E9%A1%B5%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/OneDrive%E7%BD%91%E7%BB%9C%E8%A2%AB%E5%A2%99.png" alt="OneDrive网页被墙"></p><br><p>这一般是因为网络被墙的原因，打开代理即可访问</p><blockquote><p>其实微软的服务之前是没有被墙的，我们使用的office 2016， office 365, onedrive, MicroSoft Teams等等，国内是都可以使用的，包括现在也是，但是由于国内网络长城的某些策略，可能也会导致某些网页无法正常访问，就比如one drive的网页版，目前不开代理已经是不可访问了</p></blockquote><br><p>由于我用的是clash，购买的机场设置中有专门针对微软服务的的选项，一开始我没有设置，结果开了代理还是访问失败</p><p><img src="/2023/07/02/posts/OneDrive%E6%9C%AC%E5%9C%B0%E5%BA%94%E7%94%A8%E4%B8%8E%E7%BD%91%E9%A1%B5%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/%E5%BE%AE%E8%BD%AF%E6%9C%8D%E5%8A%A1%E8%AE%BE%E7%BD%AE.png" alt="微软服务设置"></p><p>这里设置一下自动选择就可以连接啦，另外，网上也有相关教程是修改hosts文件，那个其实也是可以的</p><br><h4 id="2-OneDrive-PC端登录"><a href="#2-OneDrive-PC端登录" class="headerlink" title="2. OneDrive PC端登录"></a>2. OneDrive PC端登录</h4><p><code>OneDrive</code> PC端应用在第一次连接或者登录的时候可能会碰到这种问题，账号和密码都已经输入，等待一段时间后跳出如下错误</p><p><img src="/2023/07/02/posts/OneDrive%E6%9C%AC%E5%9C%B0%E5%BA%94%E7%94%A8%E4%B8%8E%E7%BD%91%E9%A1%B5%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/OneDrive%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5.png" alt="OneDrive本地连接失败"></p><br><p>这个具体原因不明，反正把代理软件关掉，采取直连的形式就可以通过验证</p><blockquote><p>必须要关掉代理软件，在代理软件中设置直连模式也不可以</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> one drive </tag>
            
            <tag> 微软 </tag>
            
            <tag> MicroSofts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-status中文显示异常</title>
      <link href="/2023/07/02/posts/git-status%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E5%BC%82%E5%B8%B8/"/>
      <url>/2023/07/02/posts/git-status%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<p><code>git status</code>在终端的中文有时因为编码会存在显示问题</p><span id="more"></span><h4 id="1-git-status-显示中文为八进制形式"><a href="#1-git-status-显示中文为八进制形式" class="headerlink" title="1.  git status 显示中文为八进制形式"></a>1.  git status 显示中文为八进制形式</h4><p>如图中的 <code>.md</code> 文件名称实际上都是中文，但是git status显示结果全部变为八进制，非常的难看</p><p><img src="/2023/07/02/posts/git-status%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E5%BC%82%E5%B8%B8/git-status%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E6%88%90%E5%85%AB%E8%BF%9B%E5%88%B6%E5%BD%A2%E5%BC%8F.png" alt="git-status中文显示成八进制形式"></p><p><strong>原因：</strong></p><p>中文乱码的根源往往是软件或者平台对于中文的编码或者解码不统一，像git开发核心是linux系统，使用UTF-8编码，windows使用GBK编码，这种不统一往往就会造成中文的乱码</p><br><p><strong>此问题的解决方案：</strong></p><p><code>git config --global core.quotepath false</code></p><blockquote><p>core.quotepath设置为false的话，就不会对0x80以上的字符进行转义，这样中文就会显示正常</p></blockquote><br><p>修改完后，<code>git status</code> 查看结果, 中文正常显示</p><p><img src="/2023/07/02/posts/git-status%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E5%BC%82%E5%B8%B8/git-status%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA.png" alt="git-status正常显示"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次员工活动</title>
      <link href="/2021/08/26/posts/%E4%B8%80%E6%AC%A1%E5%91%98%E5%B7%A5%E6%B4%BB%E5%8A%A8/"/>
      <url>/2021/08/26/posts/%E4%B8%80%E6%AC%A1%E5%91%98%E5%B7%A5%E6%B4%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c5d0f98bf5fef299d931e5956248c8f6e013fd9ae885054b567daa06875e2867">367b8a3271bfbbc904de1fb59c6930d999b15243d644f887506157f83b3e735bcac2716caa219f7ddb1fd17a141aaaa59b4ebf17a8821a6c7a839acd962a7dae0a3343b2cf222fae56f30ab0bc1ddc2e98cb2d598a0778e07c349b46baa9fbeee8ff09f39b48f4c10e7c32782c83f8f47f6102441e8e915ac3e86c48e233ce26a89f77704214ecc3324bf396c986ad528396b3ed5ee13aa607ee563610441e12cab45fe5aea5e0a1b73f09fa9d472e972fd10ac5c178fcda887c166c5f97307271675dcfb74a8335c00a0d5add01a10f481dda773cb8456f5f8b0e429245959b255debc9eccf00f2f1b0f03ed6e63a33e7fa23e8fd503bee101f29850c3f41fb64bdddaca00847a73e9cd1ff76e75178761e5c4f5eb0140f0dec5e0c48501ae3969db3bb0f61af9d60205c86f1dbc70d8f6bab1e13d8313850a03529208d424a7172b77e2da36fe34d403a01affaad0406c5a0b367f7f65defe1e8e79d263627e9e4e9fe464959e0d6ba28f73dc523f66c6075e79ad512b7d2f6271d277a5b520723d4b66730fc8e987cf73f77891fd6e0960f950a3af9b502fa043202ad282b6130718ec4930362e82cae2396ff905f592b1a8620b2de8229e58f716267a1fd966036c8b1a1a1af660395ea8c438fdfb92a22f152f4107b69a187b96ba74c27a643f1c9ed9dfa1b301236005004e1ca658ad4efa59c414b5116358280945f56c6f5fe7f1366c064d8e74575a64856f513c29aa58b1d6c7b35b3680a44a2a856905158344cb3f7240483d0f49d8ac78d0786d7b7c065b874ec7793b3cdfaaf9d3b86b34bc6c0f584087cbbbf80ec704352a6e605613d9043a1aa8bed61273c9a91608126463529381f80df69c6ad538fa177e7e9e21b8b420bb1bdc5f6aa0a6423228b18d02e8fb3a0ab3116a3d22d93a6df99142cd238f915df24334006d36eed9651fbd67dc9b77f80b0c005436c9de0c8dba23422e9d295e7e6e2653e8ebda4f7c7a8e99dcd71df3d9bb35541c410f8775bb12b27be4dafcc0b32f3e35b03e799120121695dca5e39522892b5ede9658c0e08001657c6c5198bca68dddd33f184e8497ee414deddc0600a2fdcbaf7b3a58b8036f142c14e6faff6ff28bc608196e273027df40ce783d05faaf2edd3089c5463e6e8a37feb873ac0dddecdede9e9b9be37c4b6d83ecbba60000e0bc7599a62b7800c9cc3b75bb1ce375562aab3ac0b89d50bdeb3eb9f6008a6627caa7be55b7115dd251e32fc38f85f1f71c66bd1ed487a8f0b4aba94410b0e79711ba55ca9214ea744d8d4d5751219beb3ca8161ee9200a209d074a53870286b6e8012ce633e0c1d1984bee1b0c4882d98eb4a8f89552429ee9703043e92fda09ddd25695ec4743048dedafac47a5bf9c7297c25402e9702b6605da439d9d0adb84669d4679ab33b0eb648e73ed85e2ee29cabf4cc419213ebc5e01a205b3a0048f199aee94f4314eb06552866f990a3b426724a3c2ebb6a56d395d14a77d601c8ec2d2a28db6e603434cda914623031d46525058980f833028d661c7910f68497aa0665d0a4b796cc084d5db4fcc082339669145870bd0b5bdf7df8416548f3a73c8f975a35f7f8eb00ef15ae7036900bdda56ac8adf70119a8f023a46f2079eb033f15b6c6699f0bfeee957d7af6fd2e04bc1a58278cd154f44411b97e4c1e78a78eec39497ff22d932c64ac6bb8c079772f3ec1b30462491e518233b770e893845e516b8715ba2f3e3c319112a8bd70b033e476b27b0c3824198759559903d18af564ca250309a3d0598283ba4302a4574b0ecefc48f7f4fe15a50733a39c31475478f132cdcbd83b343317bffa35641c5a895028cde0a7b986454437361e7497d7e6fb290e821c7259c4ca40ce5a50741a120a0eeeb5c5dcc4986f4ac506693d5f94b29efcfba9edf85e7a42e529a615fd3544dd60f50ba896f0cfbecf619d111cc2879f5809ca2a551b8680f1177127f8273998f7ab464968b0a19d549558baa60ddb2219fb16f9c8ee505633e945ef6470c637386f1f9be105657e9a12f1231dcaa8a7b65a342e8834b1994b6311f02bc072d116277769fb8c5692c50178c3834c2446bf405d461d1462cd94b240ddbe32869b2cc7aaf34ac9d42b456a33f6dadad23059bef6a6593c0437b8012c97d44bf564cdf0c3aa1f893c3cf9951f261c631ab048e2e4d995b739bb0ee8fbe4980536e28d7b801fcf66508678b8ef54fb8a0879c1bdd45b52a76648375fd2964e68e342fa09efd03f6dbc0cf51c9fa87da7284fad7970efff4bd29f2783d910a29cc35da2113bc4db94bcc9900197e314b0d562eedf0aef03832fcb411dcc22f08f1390050d56329429b8d14537efb17cd50cfebbe471d46e6caf393fe486b76f79236924ef98081018480a3716130d68737f2649fef83f7f70f9f08bcd81110664d5fd984e7473de7ffb931d90d51723db3f15e2104a0504b4ede37deb4a5ba2b417e4364d01e06dc8d06d8fb2ae7a27a97f7d866038e380c3e227aebc3256a50171e97a66c69c74bf730719295488ab1ecf7b4d19e26df13dabeefe25e62bc07346da7f04532fce8524916a7328dc8e45b530283cad01e996b24c21ef08e1643f5a503e3eadeb6fdf54eb75ced5783b9e1f1cdb20d6a32f023cef2b646f33a7ef9f2ab320e90c73cd030f3e9649764130650f3c499f00797db39ed9c9faa2e29ae3b4521cb747e6fb21131bd09e1c6d56deb8c6c02132c43658efd974220e099afbcffd49b62980c28467bbfbc44572b30643ca1454d059caa2d7a81a811d33cfc26d94a979439eed7cf296d8a9322254d7cbf989cdd712a9217166238d3b8390c59e96346a8f0c4d97b5a212dee7e05561345ffc6538b5b8d417abfe33f90957a56ebeb58015579dea139919c6b41cb89cbf4f7171270a811a0b0a5c6733af3dc30648eac77fe46ee7f0571b0e87e0d54ef1ffd7f16a833c93be63a60e6b8b5f93715ef179d10a0cd78304662244e7cfbda509ddcb64172940d21eb1ab5633da53ee00524a34f49ad3fc8a7d2fc0fdd3ceb73407ee5d0a0933028ce57c9f14ba86850d43ef1d21a2593e6f00d4a3293b1c72039a50f20063d595a2663ca4ab1610dcc00341722e2a766b2d3053147fc516e23be044a7b181bf74bae3733e5a1ae7d91a3c8da9bd456a63206bea7e4f0147a93225100ad556b1151e8b3ce8a324b6b19e4807c68f3b2a9984b7be6c7c7ab5e5aad873f046f9eff032fadde38c30a0b8bb8b6c8eb07dccdae4110b4a1776ba160179697be82c369b276e9ea4f1f1fe7099f663ddd3267f2f432fbbd38c70b06f9a38fb035b8a6a3474d45f6329744facde6892a4ed7a33f004a028d74089339b6c0cb4ae9df4b9bbc06a5ceb35948502d33be0765d1cb845dbf8312de991dd92d482bdec845610752f28b0ee5322a90ad6684a211dfa738c41cbaf2e044fe24f91e44993738f9844489d8aa783fc9bf76c1d2cef07b8d731f72c56e3ba687650e5f778da76098960365ee16c8b77afda56b15a62ee69b1ce74fdf5577892c09c8bda6246e9ef2a63d60c33cd60eaee2a711bd976199ccb1ec8d8fcb121fdc8ebef0c40ed60fa70a355d96680a037a07e7b97dac6d22961636de8c8043f7d3f9a515433c530416d3efe30e679a9795c107dd3ccc5496d1aabafd3c22fba8ce6a38330dccc28417c271dddd1c48cc22224c9b0b4c2788e86231c9942e1d9cd99a3a27d8fbb03afc57c3ec8f4f17ed92857364d97df21abdb8ff68cd7f889d7eb7ff7239d1333a4d51201bbd37774385e0119347ac721eb8cb18791e9283bcd22306e21eb66b1a8b581ccc8beead20ef3d2b04f472b634a496f43adb4b8ad4986221e86c1cfb9975c732f038fb9a1c09ab47d332858553668da7f7bf66e9fa42db5d890d321ff4f265e0412a3d3067bc350702e9117d435b7a11be9aad5a7ea35bbb83aa18bfbf372c47843d0d1dee4ac3367ce1ac5692978772d388511f16cb2b201d600c29d0a6ac7d86dd7556a37ba856f0a924fcf849101321695f6e9c97d40fdb90356f736d65738d339f7c4d64703eca25556b7507f0f2a33023fee22e2a08de044e5d163c5e857bf1e6098823298fa4035884df75ca1966bff1978938e26addb80cab79bc8e27c03ca9b13279bffdeed80cad6ee6e402e785b7f9211b2cd962d1da1c7e928684afbea3dcd3253a1fbd468263fe7d10a0a1bc8402907cc9644d4ddc395612827e7e0dcdaa19413a84e13a614667c2a7ce11b641918f3d7e6ef466edaa13492f783fe7de129103c173506c51e1de45c372b61b1535cbb781f3957de7d6345ce369941b3bfacbb1e79b6879bd20f12040fe22eb94bcd914747b0de2da985779857e4123c60209686b33f0a357d31cd1f11685cc11963f97dcbdb37fe79cf8b7b37021346660e280fe17d73e2c97bc0983f1597840f68d104cb478299d2fd01ed7e14acffa018e48d4f70c2c42c202bbf7f31b9f90e9036e54135d2d80946774ab6aa5825768fb54793dec9ad0235679ccd4922ac06bf12ba37ee68d5575db48e71603c1ca54b49c030a8a60faff590a649c16f29faf32412a5f5bed1c4df171e5ecb4d295a013320c389eb32075a5de9ff6600e0ac5be60c4f04cf7182adb61842d9cdebc46bf0d6c45a16217ea070fbfbba60f8fffdb0c75942311fe19f04a51bb8d0522574270316f845ded41da0dd87db5d2b0c2ba7fadebaab07ec7a3ffcddb7679c00</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Valine出现Code403访问被api域名白名单拒绝</title>
      <link href="/2021/08/19/posts/valine%E5%87%BA%E7%8E%B0Code403%E8%AE%BF%E9%97%AE%E8%A2%ABapi%E5%9F%9F%E5%90%8D%E7%99%BD%E5%90%8D%E5%8D%95%E6%8B%92%E7%BB%9D/"/>
      <url>/2021/08/19/posts/valine%E5%87%BA%E7%8E%B0Code403%E8%AE%BF%E9%97%AE%E8%A2%ABapi%E5%9F%9F%E5%90%8D%E7%99%BD%E5%90%8D%E5%8D%95%E6%8B%92%E7%BB%9D/</url>
      
        <content type="html"><![CDATA[<p>valine评论区出现 <code>Code 403: 访问被api域名白名单拒绝，请检查你的安全域名设置</code> 导致评论系统无法评论</p><span id="more"></span><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>博客托管在了github和gitee两个平台上，之前在leancloud上为github添加了Web安全域名设置，因此通过github.io访问博客时，评论系统没有出现问题，但是通过gitee.io访问时就会出现如上错误，导致评论系统无法使用</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>在 leancloud 的 <code>应用&gt;设置&gt;安全中心&gt;Web安全域名</code>中只添加了新的自定义的域名即可解决该问题，如图</p><p><img src="/2021/08/19/posts/valine%E5%87%BA%E7%8E%B0Code403%E8%AE%BF%E9%97%AE%E8%A2%ABapi%E5%9F%9F%E5%90%8D%E7%99%BD%E5%90%8D%E5%8D%95%E6%8B%92%E7%BB%9D/code403%E8%A7%A3%E5%86%B3.png" alt="code403解决"></p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leancloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo如何给文章加密</title>
      <link href="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E7%BB%99%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
      <url>/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E7%BB%99%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>我们在写一些比较私密性的文章时，并不希望每一个人都可以看见其中的内容，所以你常常会为这种文章设置一个密码。其他人需要输入密码才可以访问这篇文章。这个功能对于emlog或者wordpress来说很容易，但是对于hexo来说，并没有类似的功能</p><p>因此，插件Hexo-Blog-Encrypt 因为这个需求而诞生了，我们只需要使用这个插件就可以实现想要的功能</p><span id="more"></span><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p><code>npm install --save hexo-blog-encrypt</code> </p><h4 id="配置站点文件"><a href="#配置站点文件" class="headerlink" title="配置站点文件"></a>配置站点文件</h4><p>站点配置文件中可能就直接有以下代码，将<code>enable: false</code> 改为 <code>enable: true</code> 即可启用插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><p>如果站点配置文件没有如下代码，直接在最后面加上这些内容就行</p><h4 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h4><p>如果需要使用，在文章的头部配置中添加上相应的字段，如password、message等，如下图</p><p><img src="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E7%BB%99%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/company%E6%A8%A1%E6%9D%BF.png" alt="company模板"></p><p>发布文章后如果想要访问，就需要输入密码了</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo如何添加使用文章新模板</title>
      <link href="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%BD%BF%E7%94%A8%E6%96%87%E7%AB%A0%E6%96%B0%E6%A8%A1%E6%9D%BF/"/>
      <url>/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%BD%BF%E7%94%A8%E6%96%87%E7%AB%A0%E6%96%B0%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><p>运行命令行将目录跳转到博客根目录，即 <code>Blog/</code> 下，输入 <code>hexo new 模板名 文章名</code>  即可创建新文章</p><p>创建出的文章在 <code>Blog/source/_posts/文章名.md</code>  中</p><p>其中，模板文件在 <code>Blog/scaffolds/</code> 目录下，默认情况下有三个模板<code>post</code>、<code>draft</code>、<code>page</code> </p><span id="more"></span><table><thead><tr><th>参数</th><th>功能</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>新建文章</td><td>Blog&#x2F;source&#x2F;_posts&#x2F;</td></tr><tr><td>draft</td><td>新建草稿</td><td>&#x2F;source&#x2F;_drafts&#x2F;</td></tr><tr><td>page</td><td>新建页面（标签页、分类页等等）</td><td>&#x2F;source&#x2F;</td></tr></tbody></table><p>通常情况下，使用 <code>hexo new post 文章名</code> 即可，注意这里的 <code>“文章名”</code> 不是文章内部具体显示的标题，具体显示的标题可以在文章内部修改，例如新建一篇文章，文章名为 article</p><p>命令行输入 <code>hexo new post article</code></p><p>此时在 <code>Blog/source/_posts/</code> 文件夹中多了一个article.md 文件，打开可以看见如下内容</p><p><img src="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%BD%BF%E7%94%A8%E6%96%87%E7%AB%A0%E6%96%B0%E6%A8%A1%E6%9D%BF/%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0.png" alt="新建文章article"></p><p>文章中灰色区域之中的内容为文章的配置内容，可以在里面设置分类，标签等等，其中的title为<strong>文章发布后文章页面显示的标题</strong>，默认和创建文件时起的文章名一致，即<code>article</code> ，默认情况下文件名和文章内题目名是一样的，都是article，但是<strong>文件名和文章题目名功能却不一样</strong>，修改title为 <code>title: Hexo如何添加使用文章新模板</code> ，最后发布后的文章页面 显示标题就是这个</p><p><strong>改title前：</strong></p><img src="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%BD%BF%E7%94%A8%E6%96%87%E7%AB%A0%E6%96%B0%E6%A8%A1%E6%9D%BF/改名前.png" alt="改名前" style="zoom:80%;"><p><strong>改title后：</strong></p><img src="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%BD%BF%E7%94%A8%E6%96%87%E7%AB%A0%E6%96%B0%E6%A8%A1%E6%9D%BF/改名后.png" alt="改名后" style="zoom:80%;"><p>但文件名却依然都是<code>article.md</code> , 它是用来生成索引链接的,用来作为文章链接中显示的名字，如果不更改文件名，那么文章最后的链接就是<code>https://lasonneil.github.io/2021/08/19/article</code> </p><h3 id="添加使用文章模板"><a href="#添加使用文章模板" class="headerlink" title="添加使用文章模板"></a>添加使用文章模板</h3><p>在新建文章语句 <code>hexo new post article</code> 中使用的 <code>post</code> 参数，就是模板的名称，在使用<code>hexo new post &lt;文件名&gt;</code>命令进行新建文章时，系统会自动在<code>scaffolds</code>文件夹中搜寻名为<code>post</code>的文件，根据其中的内容生成新的<code>.md</code>文章文件。后续随着配置项的增多，可以自行设置不同类型的模板。例如我新建了一个 <code>company</code> 模板</p><p><img src="/2021/08/19/posts/Hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%BD%BF%E7%94%A8%E6%96%87%E7%AB%A0%E6%96%B0%E6%A8%A1%E6%9D%BF/company%E6%A8%A1%E6%9D%BF.png" alt="company模板"></p><p>使用此模板新建文章时，使用 <code>hexo new company 文章名</code> 即可</p><p>其中的<code>title</code>跟<code>data</code>会在生成文件时自动填写。利用此模板生成的文章文件，只需要进行对应项目的填写即可</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>临时工管理方案白皮书（第一版）</title>
      <link href="/2021/08/19/posts/%E4%B8%B4%E6%97%B6%E5%B7%A5%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/"/>
      <url>/2021/08/19/posts/%E4%B8%B4%E6%97%B6%E5%B7%A5%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="64c30d7aeb9a0da2faf49e0ed825b800bc6390496772c0dedbd8c3b29fe2e309"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo new在子目录创建文章</title>
      <link href="/2021/07/14/posts/hexo%20new%E5%9C%A8%E5%AD%90%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0/"/>
      <url>/2021/07/14/posts/hexo%20new%E5%9C%A8%E5%AD%90%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>​目前的文章分类有 ”技术相关“ 和 ”日记“ 两类，但是这两类文章是通过hexo本身的categories属性分开的，实际在创建时两类文章是在同一目录下的，我希望日记的文章归在日记文件夹下，普通文章就归在普通文件夹下<span id="more"></span>，如图所示：</p><img src="/2021/07/14/posts/hexo%20new%E5%9C%A8%E5%AD%90%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0/子目录创建文章.png" alt="子目录创建文章" style="zoom:50%;"><p>​</p><p>​我所有的日记文章全部都放在diaries文件夹下，其他文章都放在posts文件夹下</p><blockquote><p>注意：这是我调整过的文件目录</p><p>&#x2F;_posts目录下新增了两个文件夹，原本是没有的，原来应当是是所有的文章都在  &#x2F;_post目录下</p><p>新增了diaries文件夹和posts文件夹后，就可以把文章有序的放在不同的文件夹里了</p></blockquote><p>​但是，当<code>hexo new</code> 文章时，创建的文章依然在&#x2F;_posts 目录下，想要直接在&#x2F;_posts&#x2F;diaries目录下直接创建文章的话，应当执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new post -p diaries/test</span><br><span class="line"></span><br><span class="line">//test就是文章名字</span><br></pre></td></tr></table></figure><img src="/2021/07/14/posts/hexo%20new%E5%9C%A8%E5%AD%90%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0/子目录创建结果.png" alt="子目录创建结果" style="zoom:67%;">]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给自己的一封信</title>
      <link href="/2021/07/14/diaries/%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/"/>
      <url>/2021/07/14/diaries/%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="21d106f4ca53cdcce51eb261a629229a4ff9599f6d7126870245d4353b7c9279">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d7f2b75f07e89980b09afd32c6d31b38c995e7a57baf6333b03aa020023a3a2aa045a60b3779fbab15e918bd7573b45ab03bcdab525ad2a5b764945e92c3abc5aeb5bb316e63c3ab63017446e7b71778110659dbb209b2d6d5711247a8282b759ba64e6bc7dcdf528c41770b59f341875bf769a7f48d921da5b32f69cc9f086eea0b9f76de81046157ce6653373c18712031ee8b8029725aaded9edee53656f7137835aebad9111a4e352892477b134a7e22fcc26c6ba613dfd7d9e58ece905632de90c4b29e07ff8bb348105c863ede14aa378263170619029688b791da5163d9bb8b5bb37e533b9a09f3ed1fb7428cd230365f7b306f43fdcbd4688c7509884195074c6a34ba185dee2f4477e1afe91a94749cd05d42795f61602854e987f34d788d8b1a91bfb3b4a63669115bb7fcb3fca0f04ab6892bb0c6a9173d964e8312549b2a2cf0932bcb743e8f65bc0389923214323c3b3a1c9b393fe8af19f23152c157485ccc820f17c94d3d2329afacec3ee9acbf706d8bfef8c052a8de877ae055c6dd96eb600ee4a5473688048d8397ab63ff2ce52e052729d6056ef9beca75727173bea5d0e8d639a2d4fe1ca7d6d74445f8462537c913538bc3dc4f9d6b7890e804275e8b3fc545c5c94ccd63e8d3cdafa549cfe3cfa72fa93993539ad76e6d9e33ea53e66469b4de039e7802efb9c2ab8af1bf2b5741645d629b8ea7d93d459f994286ab0c1709cd735878ce0252563445b3ca94905f5991178daa397eab4cb62b10df04400b79404f12e5f9419bf67709fd12cc8ecd71e0db8ac8309d6d49a28212b59a5e66e0813ed75016c0a6929fa8acf6f4880eba479b5d8c52c0de059272c7bc5ce4056103f4d72bd3e368ff3d891f624ff10213d23f462e7023f7ab2fc3408ead4f110f356b61d23de692a0fd5769e42d77afcaea39ace41f34031ceb0c71a2d83c56f7d3aa432aedbe3c5baa6f86ec287aa8e5acac442028013307a24ee0bfb9ab1b6bf00b7040d2d7ad7028b613d5b56f94e371cd49d8c9b27e97cf14277382ce85699ad352ba61ed971c1c16872cf988e29c13b0c59961c68c23d386229713ba4ba1a655ca7dd696c2362a77da45331a990bceed9a22be22328cfabb390b0d58fc158c80bb4965a77e276d104e9e519f9907961fe000e1c7143a7efbb7d1f2d88e7d72c028efc514e1945ef9164f53904bd4281a6f9ebc3e961faa1a7b059dfbd387262f6004af2ab6feba21256a4fad6a87c13685b740af39954ac4948c48a553e14a883cd682f8d1821517cb11fed34a13fd05bb53d7c1a5feb3db6a1671a486ca655320a9f9b02e40e4c78c406c4eb3c4dad9bf2d8725b67a28cb20824833bde8a39c7116f96fd9afcb9042077afdebb54a3f0bc381c1ed3ecef3ff2692e7a6baef3e9f9dbf13188e7aeaf34c0d10d56e126e799497a440dbcf71e7b0a3b83f8675fb6ae39c3745e53eaf995f6369bfdd48ad46edf3a1aa90dbd389a78b118921c9d8e7b43aabbfd7a703a18ee2892ac4511588007e7d3305f6b79d2fa2214d387f5c38bf7ff5e561188dc35a840c14fa77c5f12aa64da500d8cb01603e61fed7c6d61e79952d55793a76c6080a3c20f1382e1025c476a8f301f7d258eccf5897360755aecd333a3b3c23c288b5207339f361ef34f8a89b0613eaf92f9d0676b0e0721cfd43459bdf6b209adb150e0dcd0df50ce7e97f8562732d1fc7268e2c6e4e67f1f2dd990eab2c4474fdc7099393668f02a237ef74892170fd42676bab950157774a3d72fd891365301c6c356d434a123102e0791b6fdeaac41f8011105bfe7fc5aa7cd45902a6827bf44817a8c99eab68d3cd212525004b8915ad857b54744ee638a443276274fed75dc0cef951b448899249791611e810ac43301637c15374b65c78c9ca86dd71e2cbeac561814d3e8b046e8fb8adaa68c7d308c3daae21fd385690b86e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离校</title>
      <link href="/2021/06/27/diaries/%E7%A6%BB%E6%A0%A1/"/>
      <url>/2021/06/27/diaries/%E7%A6%BB%E6%A0%A1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b5afeccabf457038a000c59e58b9415987ed76a09995fa5a59b091c29096b030">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d700ff9d0184e99884eff8addc45d27fcf3433348710adaaf9b106a7f72c6f4c04271a5b76b54ad15d72b16e650dd84f8be6a9d37ec85216092ea88885b63e8a59058eff19ef3c58cac3cc55f7df85f4dda956ff0faa7dce1596092ed280acacd2ce3ceaccc0b6a3082755190f9345f545263e2087bc8c7b05fdd632c88a10d162245dbe99fac05dca92bb75c49473e370a254c5dafb2af416c289a41ab377081ebf3c895514584fa21bf38e798855827524922ad0a43f101fc6807385f7b8f43bd6ec9e3c9cb88802f57ec1cb92b6eb4d36053ead90b5d26bbab235aad39005efd4f8f0ba76caf1d8e18d15813aab2a4b8716a6e622ccabb701529f0835734926c7e49ccd660766bc9e4ff44d94cd791f7768e8864d7964b3036b7670f573395b19d1e6f68ccdb85c1c3d6f303df7a0abd06849d6fee439ec84c3467751390e7efea3f77045ec0772304bd5f24f22d9d039cdd4e45a1d3e5e65c7bd65ac52e6b494e1dbb606c67cbf07fd013a95c13ebdbb3a6331a0bb87a374c4341485f8d6c58853209db843ac869f230dad9d2788a428f885885cd3356e5475cd297fa612490f25f343a5a4da6b6932e9d662505a0c232ee846631514451220a09a8b0114ce8532513dc12c51c2a0fb32d5669adacc6a73168d28fe3c7dd2df36ed9cd70f30247692a431b013918b3fa85ecc5de8ec53396921e750525d6b927cec7dd75bf5cfd6f055b8d7352e3581fe8bf1e39732728b3ce604a7708d52f3ae365f5bbb91b887e7b8ac1c948617607ec4442765c766bc0fb23edaa3d69e16c2ec328f0ce3142b959eb58b20fa182d72e89db44330b0867a8e7a05deb3f67c2349cfc5a901bae5330088af4e074f50a8e531166c372efd7ea9aa28121f47876606dd12505ea94f18ed21db6c9b20ea2d5f42bd4f253089d2c9a00cf796abbba1aad265cee99c8fb1dc0017ec827bdac020f268ec41248f4e7bbbf0b97cfdc489df58066fcde8a1673c5034ea2ea67b9af7da178cce44bfa661441391c482dd1d432726842b4eca988fd9040546dfe36e4c13052112e2d7e7deffc26058e7ee4f8e6d61c4e2419f5ca6bc9228df65c2bc8a8ab6d47e14ffa2de337f11e44aa3b34b7e07aadde281ad2f9a56f4ddd2bbc5b580c3241c0f29df05eef0f7b180c13ec6f99723e140ce817a74650a3fc66a4c48deae4943b40403af0ded0a008b6af4522b0f9d940bfbd421114b088ec3318965aa454619b4122b56dc2a87d085ddaba11f344d8ee600722e5407e3df774241d369f11dd3bb6bc15a29d1a40586dcf55d622ab9b0f87c00db54d376c16047746b4dd068986c0c66861b9d049536232158ed159b2f4b8b2855be4dcbc05b088e6207ec2e4c13bee5a0536b34f8676281aec955b31bf8b1a48ddb16ebd19199b569b3e70480d5f5252165383b5cade16987d2534e2f1df6d409d0f2d01b399159326c2068f18f75583fddf6aa8d791d51dae8b7c208fe3a0ad688e45da52d39fb3d00da54a5664c1c2f2e22ab52919ad005b7057e613e0a1e86a05d0efd0db457192bb01ebaa5e0dc39c7079bc297dd5480f73af7794d0726f042870d8c22134bab3e56aa647c6f1ca76ad4e4f3919beaf2e818cd248ddeb85e199ce1ad8c42a0d3a2d7a8a7347cabf7648f4720607b64fbd0d79da68e60ebb9032fa11296f3930ed4463b29da5116bddafa335babf659356071e0e1586470eed93a6366654a0efd0fe06d8a8d6c3d63b60bf2131106d0a211bb73c314b674cde0b4d535f6dca43f51335678217f270e5e60726a0d9f5b18d7bc396bf94c5a5c006f99022925494f12aff70c6d2c44776561b1bbb4924a3609cb6cdf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离校倒数第二天小记</title>
      <link href="/2021/06/22/diaries/%E7%A6%BB%E6%A0%A1%E5%80%92%E6%95%B0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E5%B0%8F%E8%AE%B0/"/>
      <url>/2021/06/22/diaries/%E7%A6%BB%E6%A0%A1%E5%80%92%E6%95%B0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fb23413e1d4da54c350e30e0a6be1b37b675ebbbf72d3eb9904f7fc9d502bd84">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d79595c10acf4bb68be383773a1f7ac195c94285b2317c5b8f52e33088c2931ddc2893e0e11845191c4f50dab130d71a149eb73cb235447d6230326960661cbe9aecdbdd441744e4838cb0858feee9e1ac8a25912343e712d2fe298e6a59df73288ccd28fea87a2a4aa270dfd5b00b890ec273c96efb98efd5ce0bbb821b92d472ff21be5bd1bf1867dd3fcb95cfea524d1db86b12bc79cf29933f711fa5e2c0baf1ca11fe9ecb12d1e9dbd232988d4f880a5580eb4aa1dd36663e77ad8fe908df6b76499327e08da8e92744d4d4517b9ad2b09b88e5439c537c23cd25f14e7eb89c1b74ce9b34f0cf631714a5b244a87b66d532c8451ef9e513492fcc35ed7fd9e9b5265de78fa61b2a6d913ffd70187f82b1867bc81c703d61c5ae99b018adecc09caeeaf2a05b954254f560751313c1faa2aa04a389a18ee389d7a5b7603abadf184e00a4a6cdf4acd77f86d034335998bf865a1d90be0152a380fa59ebe19b8c2229337a68d26c0f04b245fba2eeb0bb38dc8919b698a9396b7ad0b403cdcb9dde106c4e8fde7e054bdec4e5c84ac63251e3bb9223ac0f1e35dad9408e6b52c29bb467c5ac3e53efbb6f2837f8fc5b6ac237bf34e2d136d22137a59574f213812555bc153b6472e89ced345b1ac7fa95b3fed2ba2d166950e285bab026b781d8087dfbe6ed2e6b42b9ec595a764ba9aa97212939bc3b9e5682c005573fe401e9268522dea9d21cecab87981b480968de9148188312ec68ef27af4d6a4ac0cab351e5ad6aa15bbbbecf52628aae4a8e035a95775d0cdc3552ffa9f9cf5c9eef7e5121f1c357e4d6be5bb0f4c723d929a5a58f914a4770b0223dedee1b06a8819109f4942253e43d807eff15e857ad11e57ff794159c05181da7dc0546a336941f6d953c7a50e55b75b790113d1416be3d3c7fdb48919169aca452119f51ecb2bea0d255a2dc4b499a749a9a82b6508153ce02bb3a0bdf9e479c1ec6f7a205e7a735e481efbf71e966f1988f0c945963fad78e07450d15dd08f0bdb6bf372b8505c3c42ee101116f61f37af54390c380789aec5a0936f41627d631f8b4c99cfd2ad4edce6a0829ea666180495af79a5c339bd52a48dbee69b904d25c1b3f53478f95bb89533ccca7df6d1627765c5f2b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年6月18日</title>
      <link href="/2021/06/19/diaries/2020%E5%B9%B46%E6%9C%8818%E6%97%A5/"/>
      <url>/2021/06/19/diaries/2020%E5%B9%B46%E6%9C%8818%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3695e3441da9ea507a08beec5c947d51666bb400e06186a927bea253c992806f">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d7c3e498cbfe65bcbb66d07a984ac09ff6471e0d025067671166590cab0de61db7cc46a085cf79ee41bd0d287d548c2240d243abca2fb9e5ad9b1e8fbf4f9a423375a298ac23cfa989f8bc0bf21fbd31dea3f8145d32426b2f0b7b8d3afb8043ec58b8fcebcf6a1791c8574e4b6951d675042499a8aa60b9a11237b8e5e57d79c3aca6d5abe8a24e0b590f5175cd9af7f4e72a4a70124624035efbeb7a7e8636cabaeb079a3f613f192a2d127831cd402f3ec4be94e4e35bdd99a44d78fe64cd962fa35012991b70abdc79caeb9a929cf998b1b07e959d319035693fa29c302d9910b4bf35fd1bb65ca25607a6f7846bee75146ef38850008b78ff2a693f9eca173f6afca1871ccc836d87ea8da23ff87c34b9813fa3c24bf909eaf728ddb8f17cc607d7d3ed23ad04809aca94bdba932803a814bc52c35c8e957a020de0e04127b2c4949da658aecb14cdfeddd00d5666fdd8a8293f50e4ddcb37c523b721308072a6382bf68935259adbed4d534f31aa6bfe1e9c7f0657886be9782dd380e43fdd388a99780e1e156731f93a217e9f723c1abdeb40aef134dfe77a7d7611c78bdad37766791122959315b197727f5e4f971eee8dc91ce84e04d15bb62af1bae750154f96f301071ab15fa9dc20e1d472a453aecfdae226c9fb929cfa72a989d6df2b17e18a53dab4a2f5d3ff5a3c8eae1068a27c43bd18e87cd2c052da54510d805c2823ea3beda3446004932587e7aa8005dc24b7fc0f746f69a6d186f6f1fdf5bef06cf301a40fbc7646c91a70e3d24b005116decc53369d6d5da96af656622acc2407afc4b1c3aa3cfd45fd937eb39d0a006e20b35e22296b0fba29d48c6537d90f1784ad49855b683018e5077c4229b07bb42f8735d0fd3da12eac4e42d39c8a5284a604a0f27e2669fde9632af8f6eb21f8788fe2eb306ac68cdca6aa18c52ef38f8731193b4d4a093128dce96fb3a8939e1edd33a455a4cdaf7378b5d6c1cb3a4047bf3c6349b6481e1102b92edbdad228995f1c7f1f7eac4d09f907e21780a2d719a904a53b811ee046028205f2682c7df6a89f440a95dca7ae7c4afb7ccd99c696b3b25151734531bf38c06e5e479fbd40ae2feee0a0b6b394d702ab79354ce7e4f033fd508c5429eccf57a1b1845066d918a0190738c570e00b9067b5775255e0802b8cfbbc49efc15f3b46c0ccc960e24e0a3d787e1b7ae5426b6b126e8deac6d200119e76cc1d8875a6be8ec324d62a4e75a800bd1d684679b2b381a40647c00b82125bd8ab0202742ba0dd26e974e1552f8255a6ce5741d2b8c147d14acd72a8dd7aa1ee91a03eb683d1e76158352a12a77cd291ed3d1eda624c0880f3e9a39d9b0eab08d51a8d38461c01ddc31479b555eddc790c9a3d41f926d2f5c13a35caa0b6377a9cc9cd67830f4da4edf8171658a791675c4587abd824c12a3215a7bb13902efa48407f1655c89f6867cc1069f9543717e331c33613c389b74ad74c1efcb24130dba1cd29f3119d2fa3979cb0db3391c7f3427e8440932ee9b661cced6709460c830d3f51448d4fe300701cd09d0751debe633760aaee822e09a53a119086913d32ff2a4cf86869bd3bee14d9ed8762bb16f8d6be5c016fbcc2d093f57da36ffd25a031f30cd8adecb11498bc0082aee941d6deb21e68aa937fc8c7a7bcaafe54802b610e07c4faa2ce493349b4c3fe5f501a67709300c079b563f985f8301dba42dc1e49bdd5cfb126ffe0767f070931c915170a4de1a57aa2f001f8b4df0b6793136cebd09d4480044769a669782c69b80e94f4b2b64e2b50fd4db814041ae74e423133ba964224974ae38b58e3d47231e94e687505f5c5180250024abc0b2ad410acfa3359256bf22f5f5d4628fffc5aecb02b01dbd4e60abf5bbce0dbcf31d6681aa54b9ad3201b470f6581631788d305b5d4ec1d778baa82bf7cc76c26ed6b8d39536cba3b30527beff2c65fb98f7f8dc1ab882047988c219b12464313e5b77f1373c5a989d2270761652bd0a7aa3255974bf3479db100b4be21b4df463adb71bd864ceb759d897ba68af7605988fc4f54fbc17fd2dced7befd3886109d04f73e1db9a0f713858bb619cc17d8864aeafd81dfab9b9f0f87c35ef4e3830e7fab1646ecc734cc0231c82b39146e649934f22374a5d14de617d22294535faf1b1c1c81bea6ba388bb163f9fa5a859c9bbea955af671c6ad3bd8df5161b7da036ff54feefe0ae637ab4ffa0f870928422ed6f2ea19d504d7710c8e95e95ed65fc662261514a2911a8d93a2e3ff47cdae44df1d571b4ba41fc14a1492dc080068e5210deca79b6b7b634911fc486a026dff459b8701f613e2b5b4f4efd31c4522971fc79ea594ff3873d861ecd7f0ce9a15931528a64229a6f323ea1d07fdf0e0659e8221f2637e3afc7ff83d7b64ccb166934a597dfad6c8bdf9a76627ddc44df669311ab354776ba08515a1435cb03259735b95c4ff0fdcb69606fa1c5a03589e824646dc252ae3ca26eecd86503bf5a045e9a82ca92d5575f55d36c5a96f8bf1d6b44c959230a7a4b19e6cc9765850ea642f7a747f9d3fa9e7727c1709cc8b7206998247341fa067361e46c0c083542523f99d607277609d8c7c009f533909d435ceb92dc0af3ad8a98745d6836ba27bde45896754391ce6b91084882c5aed4741a9b870458d494d89bc788549066d8e975c0025a08acb33ba7ad4d07a385e86fcc8be8cb5e9a0e52401687c091541012fe2ef24e23784f17609b97ef4ccf5909d622e027b6080d02a37ed61faa053d927b28d93af2a06bb596094bfdb1822ba3c8607b4f5a8fd1232c21e1b7f51ac5a63950912f9255b48f8ef1a836a20bb2d580906fea98ea42a5d045438d4d7b83477c5f001d0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo&amp;Next博客阅读文章出现404</title>
      <link href="/2021/06/17/posts/Hexo&amp;Next%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB%E6%96%87%E7%AB%A0%E5%87%BA%E7%8E%B0404/"/>
      <url>/2021/06/17/posts/Hexo&amp;Next%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB%E6%96%87%E7%AB%A0%E5%87%BA%E7%8E%B0404/</url>
      
        <content type="html"><![CDATA[<p>​今天刚刚写完关于<a href="https://lasonneil.github.io/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/">自定义页面加时间线</a>  的文章 ,本地调试没有问题之后，把博客部署到了github上，结果主页显示正常，一点文章标题或者阅读全文就跳转到404界面<span id="more"></span></p><br><p>​<strong>解决办法：</strong>删掉或者剪切掉目前post的所有文章之后执行<code>hexo g</code> 和 <code>hexo d</code> ，然后再把文章 还原到post里再执行 <code>hexo g</code> 和<code> hexo d</code> ,即可解决</p><br><p>​<strong>可能的原因：</strong>部署到github上，原来仓库里的链接，网页可能有失效没有删掉的，这样操作一通后，删掉了哪些无效的链接，网页，回归正常</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo&amp;Next给自定义页面加时间线</title>
      <link href="/2021/06/16/posts/Hexo&amp;Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/"/>
      <url>/2021/06/16/posts/Hexo&amp;Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>​昨天突然想开一个日记的栏目，所以给侧边栏的菜单项添加了一个 “日记” 选项，专门用于存放每天的记录，经过一天的折腾以后，终于成功了，以下是折腾过程<span id="more"></span></p><br><h3>初次试验未能成功：</h3><ol><li><p>首先先更改主题配置文件<code>config.next.yml</code> ,加入一行代码来添加日记选项</p><br></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line"></span><br><span class="line"><span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line"></span><br><span class="line"><span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line"></span><br><span class="line"><span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line"></span><br><span class="line"><span class="attr">diaries:</span> <span class="string">/diaries</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-book</span>  <span class="comment">#添加这一行</span></span><br><span class="line"></span><br><span class="line"><span class="attr">commonweal:</span> <span class="string">/404/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heartbeat</span></span><br></pre></td></tr></table></figure><p>​<br></p><p>添加完之后运行<code>hexo s</code> 就可以看到菜单栏多了一个<strong>日记</strong>选项，日记的图标是在<a href="https://fontawesome.dashgame.com/"> fontawesome </a>找的，选用的是一个 “book” 图标</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E8%8F%9C%E5%8D%95%E6%A0%8F%E7%9A%84%E6%97%A5%E8%AE%B0%E9%80%89%E9%A1%B9.jpg" alt="菜单栏的日记选项"></p><p>​<br></p><ol start="2"><li>然后在博客目录下运行以下代码</li></ol>   <br>     <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page diaries</span><br></pre></td></tr></table></figure><p>   ​路径<code>Blog/source</code> 下就会出现一个新的diaries文件夹，文件夹内部会有一个 “index.md” 文件，到这里的时候我以为就已经结束了，想着在这里添加一些md文件，hexo就可以自动生成文章然后添加到 ”index.md“ 中索引，然后在网站上把一篇篇文章以卡片的形式展现出来展示出来，就像这样一样</p><p>   <img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E6%97%A5%E8%AE%B0%E9%A2%84%E6%9C%9F%E6%95%88%E6%9E%9C.jpg" alt="日记预期效果"></p>   <br><p>   ​然而实际上效果确实这样</p><p>   <img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E6%97%A5%E8%AE%B0%E5%AE%9E%E9%99%85%E6%95%88%E6%9E%9C.jpg" alt="日记实际效果"></p>   <br><p>   ​后来我一查，发现网上也没有太多教程，大多数最后的结果就是手动更改<code>Blog/source/diaries/index.md</code> 文件，往里面自行添加内容从而显示出来，这样以来，每新增一篇文章，就要手动往”index.md” 文件中添加一条记录，附上文章的链接，非常的麻烦</p>   <br><p>   ​后来我看到了 <strong>归档</strong> 页面的时间线形式，感觉日记的表现形式就应该像这样，有一条时间线，像这样</p><p>   <img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E5%BD%92%E6%A1%A3%E7%9A%84%E5%BD%A2%E5%BC%8F.jpg" alt="归档的形式"></p><p>   ​中间数个小时的教程搜索过程简直要把我搞吐，多余的就不说了，下面是成功的步骤</p><br><br><h3>成功的过程：</h3><ol><li><p>第一步和上面一样，更改主题配置文件，<code>config.next.yml</code> ，先加一个 “日记” 菜单选项，但是加的内容改成</p><p><code>diaries: /categories/日记/ || fa fa-book  </code> </p><br></li><li><p>每篇日记的frontmatter，都需要加上<code>categories: 日记</code> ，即可完成</p></li></ol>  <br> <br><h3>原理：</h3> <p>​分类的页面是有时间线形式的，如图，可以看到分类页面下有目前存在的几个类别，其中有一个就是 “日记”</p><br><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E5%88%86%E7%B1%BB%E7%9A%84%E6%97%B6%E9%97%B4%E7%BA%BF%E5%BD%A2%E5%BC%8F1.jpg" alt="分类的时间线形式"></p><p>​<br></p><p>​点开这个日记，就会进入日记的时间线界面</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E5%88%86%E7%B1%BB%E7%9A%84%E6%97%B6%E9%97%B4%E7%BA%BF%E5%BD%A2%E5%BC%8F2.jpg" alt="分类的时间线形式2"></p><p>​<br></p><p>​既然已经有现成的日记时间线页面了，我们就可以直接拿过来使用，简单来说就是将菜单栏的 “日记” 选项链接到这个页面</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E8%8F%9C%E5%8D%95%E6%A0%8F%E7%9A%84%E6%97%A5%E8%AE%B0%E9%80%89%E9%A1%B9.jpg" alt="菜单栏的日记选项"></p><br><p>​首先要找的就是这个 <strong>日记时间线页面</strong> 在哪里，才能去链接它，其实它就在分类目录下的文件夹里，就是下面那幅图的 <strong>”index.html“</strong> 页面</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E5%BD%92%E6%A1%A3%E6%96%87%E4%BB%B6%E5%A4%B9.jpg" alt="归档文件夹"></p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E6%97%A5%E8%AE%B0%E6%96%87%E4%BB%B6%E5%A4%B9.jpg" alt="日记文件夹"></p><p>​我们在 <code>hexo g</code> 生成文章以后，hexo会在<strong>Blog&#x2F;public&#x2F;categories下自动生成归档文件夹</strong> ，所有<code>categories</code>属性为 <strong>“日记”</strong> 的文章最终都会被它目录下的 <strong>“index.html”</strong> 索引到，且形式为时间线形式，文章的categories属性就是下面这样</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/categories%E5%BD%A2%E5%BC%8F.jpg" alt="categories形式"></p><p>​<br></p><blockquote><p>（ 注意，categories后面的属性值是什么，文件夹的名字才是什么，比如</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/categories%E8%8B%B1%E6%96%87%E5%BD%A2%E5%BC%8F.jpg" alt="categories英文形式"></p><p>​那么生成的文件夹就是这个样子</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E5%BD%92%E6%A1%A3%E6%96%87%E4%BB%B6%E5%A4%B9%E8%8B%B1%E6%96%87%E5%BD%A2%E5%BC%8F.jpg" alt="归档文件夹英文形式"></p><p>​这个很重要，关乎到后面的页面链接能否成功，所以一定要搞明白）</p></blockquote><br><p>​既然找到了要链接的页面，那就开始链接</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line"></span><br><span class="line"><span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line"></span><br><span class="line"><span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line"></span><br><span class="line"><span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"><span class="attr">diaries:</span> <span class="string">/categories/日记/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-book</span>  <span class="comment">#添加这一行即可</span></span><br><span class="line"><span class="comment">###############################################</span></span><br><span class="line"></span><br><span class="line"><span class="attr">commonweal:</span> <span class="string">/404/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heartbeat</span></span><br></pre></td></tr></table></figure><p>​<br></p><p>​这样就大功告成啦！</p><p><img src="/2021/06/16/posts/Hexo&Next%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%8A%A0%E6%97%B6%E9%97%B4%E7%BA%BF/%E6%88%90%E6%9E%9C.jpg" alt="成果"></p><br><p>可能存在的问题：</p><ol><li>这句  <code>diaries: /categories/日记/ || fa fa-book</code>   里面的那个 diaries 会不会和链接有关系？</li></ol><p>​不会，这个diaries就是侧边栏中哪些菜单的名字，我的侧边栏显示为日记实际上是因为我网页的显示语言为中文，将diaries翻译成了日记，和链接没有关系，可以说 <code>diaries: </code>  和 <code>/categories/日记/ || fa fa-book</code>  是两个部分，前面那个就是侧边栏菜单项展示的名字，你想起什么名字都可以，后面那个才是和链接页面有关的部分</p><br><br><br><p>参考文章：</p><p>​<a href="https://www.zhihu.com/question/33324071/answer/58775540">hexo下新建页面下如何放多个文章？</a> ——本地文件</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年6月15日</title>
      <link href="/2021/06/16/diaries/2021%E5%B9%B46%E6%9C%8815%E6%97%A5/"/>
      <url>/2021/06/16/diaries/2021%E5%B9%B46%E6%9C%8815%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5ae289edaa1f6639e406b207aad3c8a0e4b419cfa165ce4f0b1ab559a4b5e894">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d79c32a1cd7719c384c09ea72f9245ef1274d5161c530a4faf7e8031744bd34d2415644b5d4325c882d35304ad9a4a792b50c2c9e448cd5c4d42704c01b8d2d6406d15d9a4e9f256f5837eec0a42f42e2005d40aafca0915bd65c46b3199762501c0cf845a7238c57f057b9e19e2cf1be24bf8c364ab5651b103635dfaaa6a6885eb9d09a612b69b6698d44f3318a685faf6c9453940d7cb52ab6a7d3520c2ed2dc3cab2e42cb840f23893910956310084833c5774a62785e55bad413a5f5ba87c8dee5bacc0157a9bd1ea819ad23f363369539acc01b1f57c42d4a983c7d023db92d644c75a65731da0ffe126cbae64888e88469f04ab1430c33b33e8a91f38b7ea55ffab645be9be8c8aaad77e1afd4584a023e9f160a1f8ea218e5afaa4404e84a2a33cd060ccf12a3dc6312c00522da61acf244ab83f6cfa9e58f776d1f51362a2ca44d6ba834da2dd32025805364d48bf107993ef809dbd9457b964697648057335ea6a3bf9e5b0d16e7d33d645edf579571997260ceb8d4269f2b112975c0a864f18a4f0b865045b9a3ff6d5721c444562e79233364fd1ae2142b011c84209bea9a230d9e6a6fbc7cd4c6b8c84a0a6407465e7863a2e3e447888b94163f5223d13b1514729d3397938f40471d6802a39d5315b4440fe6f542192bb5dceb8e5b7a686275db2d2806aafb03ab3d8f86c411560f7503b5d48b16c01095fbc65a3d38b3e690e4c692bfdcbc2763aab9d56b04ec66b27aae3cb5ac845c1c91264b79872d8046d3e9b22ce5690d5460baa96777d70bc4450f55e7eb5a0337cd43d2b77cbc23762fb41cd2e969fa7480bd258953e1185222073eb2cb20fb11493e155b7e803104feefd33ae6e936118454ccc194f7482905c5df9d9b4e7ef7483c44f38c5b6cf956b3c453cf6f85bc72a934146fce5dca89fa4a4729eedd2170e601747cdec5d644ef0ecfe2f7fa27be62a982b8f949d7fff6a79dc157e03fe522e3644df6190793007e4058c348c751587137e3b0aeee6f83ec50b5e57bd61f08512f453d120e980a39fc540549e4cbf0213c97faba57f991a1df1d099b0b93fcb372e617be945f0251271fcd39afa7c3b471f26498910514989008abd4ea8a9c6482a5700844911ec342a4254d817358eb3bf7d3c22641fb2e4a831d7defc2590ebc20e9ca6134627dbbe9e19086754d4fef30888951ba4ace41df8660585ffc183466c1c88dbf8ea5e208ba065cd613698fc3a2df2ed29af78130f638c9ad3c359aad91e265fdc0297ccd356ffaba74940bff523ad8e9ae38f06050ccdae2027cefbebb4b5d165126626f194ae43b61b798670133e9aec552153365c710ecdacff5319c7f03462813560ffab13fcbf48e86f7578fa37ad5dbf1eab6cbc6000363d289399cfd5237a63a33ae8a2555ad0917753a19887325097cf69793012756424706208e03e1d76c173bf42399a530003eff83e33992457a6e16cb4f494fcfd686db8f1dcae9f0887735c111ad99ba4c346443e71c428f2d64688ad1b5ba7fa07b840f30900469a98c45c091d8bc83c4deec218bf9ffcb404bf427792721cff6fa396d911f816c3017861d522cbe1a113904d979add12298668d62a1d1c06dc380371b01a96cac83c835b3dd485ed12949ca9df8b62769de5986b404778b307a673f5f2c4cc824956ac46ba50f473c2ffd3559a975dba3e768b41b98727ba26ad446695a80ad550e0ddbea53e6e6cf3c3eccf0b2113586976170c67a1e3b49222a643049eeedee58cead294dbd3dd58dd11359d9ac78e531ef67f9b1e5fac382e9d5d773e0f2d26d764c714d88c51fb26069b8e1735acebebdcb135703b30819e0e053f25dc242c1c88c6a5d41bf083e91e90b733d8ad578e972fb3ab8a5955</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离校的这几天</title>
      <link href="/2021/06/15/diaries/2021%E5%B9%B46%E6%9C%8814%E6%97%A5/"/>
      <url>/2021/06/15/diaries/2021%E5%B9%B46%E6%9C%8814%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0deb9ccd66c160ebfbe5fd2780f502f605d41d377e0c81787baa12ff4c1a3e97">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d754b55cc6b98e81374780d12f7df131dcf8ce517cc0878b31634c5152fe74cedb73ff363263ab8128bb94a7977a423a6794e43bb2b630c0554f13e964a8251b2fd8462ed871c63a3974c38c65874584826983257bd47e3bdae1969974f8e9b3afe72f25d516b07d3aa540ca1df85ec76aafa4a232535212312124aa2f7f94e1ceb7c5f8c9f2788a11cef5e1921c215054d4250613272a7ae6a1f2d3ac42f2b515b4a35c10bbe6104ef4a77672dc042169ca0eb1dafaa89fc24ce4e0f9faf4b41dd943c1eff0a6e54d8893a492e0e636770407c708ee6156da45d6bed488e68cd76f49077b903ff020e5dd343dae15ce2157636d42002c9776276a5049776dcd8ffbed8716f7df76abac14fa76d9ddd793baf60ef45724b1e40c69ecd8a64f0586a4b9bf54936327bcec0cf26c1f1ae97a3070eab8357e7a12b0cc6e1d365d4762d03fa3ea16c281bc48db253a68618f751b979b76e7d59a5c9c330d8e311d70837899368173505d5238d6877ae0c5059afd2f42a5316d7e8102b89814f377160b529c091bcec3782f57ddcc6f90985e752bceaae11bf2cb069be60c163074f5446253db80afdffc2819b001e11d409ccf84f13a619af535662857c62adcbb208057bb147ca2f466831a9c484e0785534c8d0b5d4e9009babcae05ccb7c4b9caac184356ba23e63b6d079065d67f75d1f41c65ecf56e24ba4f73e6d8c023e5af895ee763d2a71abdc9c63e012ca95ddea0bdc2767e47689b5a12ef932c9bec90f5abc1a7fc43fa735e087ddd5ebfc63785887fc2b69ae01b61b90bbb88c0ca9f529479d9577e4d550f985e30c8ad2a366ddc9de7c5d6d34ae8d0bd10e0291654d0c238726db9beff94d5957e0c844171fe518975b0bb5cb75ec261d8eb8ee121c74fdc827bf1a28eca746d206adbee5888512de8323215aca625c9c6329a5b1dbfa49229ac13959933012cdd5053e81ce8ec5282aa3fa04d2530b2e995865ea128ff9c12fa36e107a06fbaf9deb6b0ff47f03e8fde4b11b86806d8b64622b74bb3264b61d03ea21a0239a7866baad02de0f5990b14316fb222a95bc19bc2dec5f4374b696016398613b864fbfd7301320b6e8cf17d9e29b75d2e16ceeb7c4867157f72c5ba6197da39b60908ecad03e1e8a6b67d15228c5bc553b2de80d68d62be89f8ef669ecf95520dd3a801bc08bc06411bbc62e7697040d8feb020d51a27d4d475714ef47b5b9f6b2190c6f20970f0330af363baff4c8fa3f8e510bca9a404eb217b51ea764f036e67a0fcb0b2f4e4f2895c820245b08d8ef41eb35c9d6825672ecc05849930396a1acc24002ddbfd9ecc23e1d401586240509104d2dc2e631171615361e44e7d3458210b205f03948d4348142326f9dd90aefdd05122ac4e95e3a36d1d904411ed8fe3323edb92295f7778850d82449d3a1bcc12d29241f9cb2fa1578c0ad20b9261360a7c1bf233dc120b26d83579dec2c1a332518a33a891aa34205c2063a9d6c69771c6efcfaf34a293e9290eaabbbc4877e890f2401c97d48b639e275ed39ef8c9a7b9bfa10b00686b7cdf9c4073568d8082c0564d9023b65993d8d2edca2354b7405a28c08903095593856d844af7ce2c8c8f43ec09bb670d363026d30c07b6f0fd9212b7fe0fb26a5718f38dfb3ddeb7bbba054f788e73c7cc3a44caae48bd0fec0944c62c7ac37bb2baed02a68c652e79a72f4fd79982c7d81ed161cfa19fcf65316c0004f5af3071d54032f4594ccfe77d317e38c08ba23919b560e635d94cd6772784a194d4bcdd5b01c376812825d063449c5809df1ac849f1d4f96df44e794b9d6e672f7966116d50a3654e0dc5ae606024ef1b534a4bcdb8698f21d965be1ed5b983140cf9596d36ea0ef517e761dfd8dbb1b76f8469d0f0fb7e537aa0b5fd84bebb8b897f2a6a49526561311e59c63b088cdd341757a6bb263b52b13c4f4e963d9ecf6e1c4c3c9939868464c37c6eee7843a7e5b5ec45f2036d270610018f022ef92700b99794a5bcca6d127003669b4289262938f747d8e942496c32c9088a98d73d4b6dedc970d124127f553816c21cd948b18d08273929a215189ee5d8ba5374f76a309beb384510345a16226724e7eb4c6fa95f6c9716fba35b96fa00e86ca96d80ec867de9e59519304ba0dd5d54df13143521fa7f0c1131d92e8eeb1dfff1c8b7b178180711b9e378d05511f7e400302214911524ce52a1da4bbdfb8f078a98a4b19bd28960602aedd42bfbadb0f0077d8e586a71919aa3214e8dedc1d50728df61f012dbf71944948228fa51b6ba0ee687f14dfc8b7b9f455fda7eaa06c6b2280cbcb53e1c49755e4b0a3348c2ecabe4a16da97f57fecf721da8c449de8995590fdfb7497bd9eb64c7d3d91c9bb4d801eb4eb52c05f87426f82bae714d96b77333a3c0799ea7b083bb52ebd3be72e16e8e753fa952f1fe1d233e8b74f99a8e4085da0b942e5198f683aa308ce3fee39a5be91c3bb90c885961c6eedfb54e05dd66fe133f49e0fc6ae033541d09738f15296693e9d918bf7b5866bc02f348bdf4638e76b91a0758546f72ed1fb85ed3c55330e8f71da97e179c75f575ad86b411047f1659b3b7772a7b218dd28be4048b5cd5ec479ee33e42bad74aa70948a3e0244512a41bc46db374c99d1e34233876a0d9cd040a0b1998f6f6414a74707c82389d25b4cf3a86e283176e6e28ee9a88e8df0d55788e99407ed022d7170d233be1348cb9d143e30c8d4510c360d3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字签名</title>
      <link href="/2020/12/25/posts/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/"/>
      <url>/2020/12/25/posts/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/12/25/posts/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/Sign.gif" alt="Sign"></p><span id="more"></span><blockquote><p>预备知识：密码学</p><p>理解数字签名需要了解密码学中的非对称加密算法，公钥和私钥的关系与特性，推荐首先阅读 密码学 </p></blockquote><br><br><h2 id="密钥的使用"><a href="#密钥的使用" class="headerlink" title="密钥的使用"></a>密钥的使用</h2><p><strong>密钥对用于加密传输</strong>：</p><p>当发送一份保密文件时，发送方使用接收方的公钥对数据加密，而接收方则使用自己的私钥解密，这样信息就可以安全无误地到达目的地了。通过这种手段保证加密过程是一个不可逆过程，即只有用私有密钥才能解密。</p><p>公开密钥技术解决了密钥发布的管理问题，商户可以公开其公开密钥，而保留其私有密钥。购物者可以用人人皆知的公开密钥对发送的信息进行加密，安全地传送给商户，然后由商户用自己的私有密钥进行解密。</p><br><p><strong>密钥对用于数字签名</strong>：</p><p>签名时利用私钥加密，由于私钥仅为本人所有，这样就产生了别人无法生成的文件，但是你公开的公钥可以解开，从而确保信息是由你发送的，这样就形成了数字签名，采用数字签名，能够确认以下两点：</p><p>(1)保证信息是由签名者自己签名发送的，签名者不能否认或难以否认；</p><p>(2)保证信息自签发后到收到为止未曾作过任何修改，签发的文件是真实文件。</p><br><br><h2 id="数字签名的过程"><a href="#数字签名的过程" class="headerlink" title="数字签名的过程"></a>数字签名的过程</h2><p>(1)将报文按双方约定的HASH算法计算得到一个固定位数的报文摘要。在数学上保证：只要改动报文中任何一位，重新计算出的报文摘要值就会与原先的值不相符。这样就保证了报文的不可更改性。</p><p>(2)将该报文摘要值用发送者的私人密钥加密，然后连同原报文一起发送给接收者，而产生的报文即称数字签名。这样就保证了签发者不可否认性。</p><p>(3)接收方收到数字签名后，用同样的HASH算法对报文计算摘要值，然后与用发送者的公开密钥进行解密解开的报文摘要值相比较。如相等则说明报文确实来自所称的发送者。</p><img src="/2020/12/25/posts/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/datasign.webp" alt="数字签名">]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字签名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学</title>
      <link href="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/Password.jpg" alt="Password"></p><span id="more"></span><p>在密码学中，有一个五元组：{明文、密文、密钥、加密算法、解密算法}，对应的加密方案称为密码体制（或密码）</p><p><strong>明文</strong>：是作为加密输入的原始信息</p><p><strong>密文</strong>：是明文经加密变换后的结果，即消息被加密处理后的形式</p><p><strong>密钥</strong>：是参与密码变换的参数，一切可能的密钥构成的有限集称为密钥空间</p><br><br><h2 id="对称加密算法"><a href="#对称加密算法" class="headerlink" title="对称加密算法"></a>对称加密算法</h2><p>加密和解密使用同一个密钥，主要算法包括：DES、3DES、RC2、RC4</p><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/Symmetric-key algorithm.webp" alt="对称密钥算法"><p>例如：</p><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/对称加密.jpeg" alt="对称加密"><br><br><h2 id="非对称加密算法"><a href="#非对称加密算法" class="headerlink" title="非对称加密算法"></a>非对称加密算法</h2><p>两个密钥同时产生：一把密钥（<strong>公钥</strong>）是公开的，任何人都可以得到。另一把密钥（<strong>私钥</strong>）只有密钥的拥有者知道</p><p>用其中一把密钥（公钥或者是私钥）加密的信息，只能用另一把打开，主要算法包括：RSA算法，ECC（椭圆曲线）算法</p><p>由已知的公钥几乎不可能推导出私钥，其实可以推出，按现在的计算机技术水平，要破解目前采用的1024位RSA密钥，需要上千年的计算时间，所以基本等于推不出来</p><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/asymmetric key algorithm1.webp" alt="非对称密钥算法1"><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/asymmetric key algorithm2.webp" alt="非对称密钥算法2"><p>例如：</p><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/非对称加密.jpeg" alt="非对称加密" style="zoom:67%;"><img src="/2020/12/24/posts/%E5%AF%86%E7%A0%81%E5%AD%A6/非对称加密2.jpeg" alt="非对称加密2" style="zoom:67%;"><br><br><h2 id="两种加密算法的区别与特点"><a href="#两种加密算法的区别与特点" class="headerlink" title="两种加密算法的区别与特点"></a>两种加密算法的区别与特点</h2><ul><li><p><strong>对称加密</strong> 的加密和解密效率都要高于 <strong>非对称加密</strong> </p><blockquote><p>因此一般的做法是将报文用对称加密算法进行加密，然后将对称加密的密钥用非对称加密的公钥进行加密，发送出去，接收方使用私钥解密得到对称加密的密钥之后对报文进行解密</p></blockquote><br></li><li><p><strong>对称加密</strong> 密钥分发困难，容易泄露，<strong>非对称加密</strong> 要安全许多</p><blockquote><p><strong>对称加密</strong> 的密钥在传递过程中一旦泄露，报文的安全性将不复存在</p><p><strong>非对称加密</strong> 采用密钥对的形式，公钥用于加密，私钥用于解密，公钥公开发布，私钥个人保存，安全许多</p></blockquote><br></li><li><p><strong>非对称加密</strong> 双方在进行通信时，需要两对密钥对，各自生成自己的密钥对之后将公钥发送给对方，实现加密通讯</p><br></li><li><p><strong>非对称加密</strong> 公钥用于加密，私钥用于解密，公私钥能互换吗？</p><blockquote><p>从数学原理上说，私钥也可用于加密，公钥也可用于解密</p><p>公钥加密只有私钥能解开，私钥加密只有公钥能解开</p><p>但若是私钥当作公钥使用，用于加密并且传播出去，由于私钥本身可以推出公钥，可以使用推出来的公钥进行解密，因此一般公钥和私钥不会互换功能</p><p>实际系统中，公钥指数e都很小，一般固定为3或者65537，而公钥的另外一个参数模N与私钥是共享的，所以公私钥不能互换。<br>至于为什么这样，我的理解是为了加快公钥运算速度，也就是验签速度</p><p>其实不是任选一个作公钥的 非对称加密还有一个特点就是 从私钥计算公钥很简单 从公钥计算私钥很困难 这也是保证公钥加密算法安全的一个因素</p></blockquote><br></li><li><p><strong>非对称加密</strong> 理论上公钥和私钥可以互相推导出</p><blockquote><p>公钥推出私钥非常困难</p><p>私钥推出公钥比较容易</p><p>一般的 RSA （一种非对称加密算法实现形式）實現中，公钥的生成选择的 Modular Multiplicative Inverse 都會是一个较小的数值，目的是降低 Hamming Weight，也就是体现在你看到的公钥比私钥短很多这上面。这就导致了，如果有人拿到了私钥，就可以较为轻松的计算出一个有效的公钥。</p><p>所以永远不要把私钥公开出去。</p><p>公钥一般固定65537（16进制10001），运算快也就是加密速度快（非对称加密，公钥只用作加密，不用作解密的）；私钥则取得比较大。可以互换的，互换后副作用是：加密变慢、解密复杂度降低</p></blockquote><br></li><li><p><strong>非对称加密</strong> 私钥用于签名，公钥用于认证（验签）</p><blockquote><p>所谓签名就是用私钥进行加密，认证就是公钥用于解密</p><p>当私钥进行加密时，此时作用不是加密原始数据，而是证明该数据确实来自私钥的拥有者，没有被伪造或是篡改。由于只能用你的公钥进行解密，并且只有本人拥有私钥，所以私钥进行加密时可以代表自己的身份</p><p>当公钥进行解密时，就是用于验证对方是不是使用私钥的人，如果不是，用公钥是无法解开的，如果是，用公钥即可解开，对其身份得以认证</p></blockquote></li></ul><br><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">RSA算法原理（一）</a>—————–</p><p><a href="http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html">RSA算法原理（二）</a>—————–</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 密钥 </tag>
            
            <tag> 非对称加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字证书是什么</title>
      <link href="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/CA.png" alt="CA"></p><p>数字证书是一种在网络世界中用来验证身份的数字标识，个人，组织，机构在网络上进行交易或者提交账号密码时，需要认证对方是不是真的是你想要进行交流的对象，而不是骇客假冒的，从而避免交易信息，账号密码信息等被骇客窃取<span id="more"></span></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="数字证书-CA-是什么"><a href="#数字证书-CA-是什么" class="headerlink" title="数字证书(CA)是什么"></a>数字证书(CA)是什么</h2><p>数字证书从本质上来说是一种电子文档，由<strong>证书授权中心(以下简称为<a href="https://baike.baidu.com/item/CA%E4%B8%AD%E5%BF%83/6471855">CA中心</a>）</strong>所颁发的一种较为权威与公正的证书</p><p>用于确定网络上的个人，计算机和其它实体的真实身份，是在互联网通讯中标识通讯各方身份信息的一个数字认证，由于互联网的虚拟性，你无法确定和你进行交易的对象是否是你想要交易的对象，而不是黑客假冒的，举个栗子：</p><p>​<code>比如有人盗了你朋友的QQ号，假装你的朋友向你借钱，由于你无法确定对话那头是你朋友还是盗号的人，所以你可能会选择视频或者语音的方式来确认他的身份，从而知道向你借钱的不是你的朋友，而是黑客</code> </p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Fake_Sever.jpg" alt="Fake_Sever"></p><p>其中，数字证书的作用就和你通过视频或者语音的方式来确认对方身份时的作用一样，用来确保对方的真实身份，不同的是，现实世界是通过身份证，长相，声音进行判断，网络则是通过数字证书进行判断</p><p>因此，简单来说数字证书就是<strong>“网络实体”的身份证</strong>，是用来在网络世界向对方证明 “你是谁” 的凭证</p><p>先对证书长什么样有个大概印象：</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Win_Certification.jpg" alt="Win_Certification"></p><p>正如首句所说，本质上是一种具有规定格式和内容的电子文档，此文档具有公信力，（举个栗子这么说）可以通过数字证书证明此Windows是微软公司的产品，不是别人假冒编写的盗版，也不是经过别人修改过的版本，是正规的。</p><p>（其实你每次下载的软件安装包也会包含它自己的数字证书和数字签名，如果数字签名正常就说明软件安装包正常，没有被黑客修改过，栗子往下看）</p><h2 id="数字证书的原理"><a href="#数字证书的原理" class="headerlink" title="数字证书的原理"></a>数字证书的原理</h2><blockquote><p><strong>预备知识：密码学、数字签名</strong></p></blockquote><p>数字证书在你和你所拥有的公&#x2F;私钥对之间建立了一种联系，即数字证书可以通过你所拥有的密钥对来唯一确定你的身份，也就是说，只要你有自己的数字证书，就可以用这个数字证书来证明是你自己。</p><p>这里面有个很重要的点，就是数字证书的颁发机构可以有很多，甚至你自己就可以成为CA中心，如果你需要具有公信力，人们都承认公正的数字证书，就要向国家认可的权威，可信，公正的第三方机构申请数字证书；如果只是小范围团体内传播信息，可以自己设立自己的CA中心（前提是你懂得如何发布数字证书），但是颁发的CA证书在社会上就不具有公信力，只在团体内部交流时使用</p><p><strong>那么CA中心是如何颁发数字证书的呢</strong><del>后面会提到加密证书颁发方式</del></p><p>用户先自己生成密钥对，将公钥以及部分个人信息传送给一家CA认证中心，认证中心在确认是用户本人的请求之后之后，制作并颁发数字证书给用户，证书内包含了用户公钥，用户基本信息和其它一些基础信息，同时还附有认证中心的数字签名，当用户想证明自己公开密钥的合法性（即证明这个公钥是不是自己的）时，就可以提供这一数字证书</p><p>（证书的产生：认证中心把用户证书的基本信息做哈希算法，然后用自己的私钥对哈希值进行加密，生成签名,最后形成一个具有如下格式的电子文档）</p><p>![数字证书](.&#x2F;数字证书是什么&#x2F;digital certificate.webp)</p><p>显然，到这里数字证书就生成了，但是有一个问题，按道理数字证书的格式应该都是一样的，那么CA中心的数字证书由谁来进行颁发和认证呢？</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/self-signed-certificate.jpg"></p><p>这种采用证书中的公钥对应的私钥进行签名的证书被称为自签名证书，意思是签名者和证书拥有者为同一人。您自己可以成为CA并颁发自己的证书，这些证书称为自签名证书，但出于商业目的，您的自签名证书将不受信任。只有已建立且知名的CA自签名证书才是可信的。CA的根证书始终是自签名的。</p><h2 id="数字证书的作用"><a href="#数字证书的作用" class="headerlink" title="数字证书的作用"></a>数字证书的作用</h2><p>​是  为  了  <strong>安  全 ！！</strong> </p><h3 id="电子商务"><a href="#电子商务" class="headerlink" title="电子商务"></a>电子商务</h3><p>​代表性的栗子就是 <strong>电子商务</strong> ，基于互联网的电子商务系统技术使网上购物的顾客可以轻松获得 商家和企业的信息，但同时也增加了对某些敏感或有价值的数据被盗取和滥用的风险，比如最简单的账号密码订单等等。</p><p>​买方和卖方都必须对于在因特网上进行的一切金融交易运作都是真实可靠的，并且要使顾客、商家和企业等交易各方都具有绝对的信心，因而因特网(Internet)电子商务系统必须保证具有十分可靠的安全保密技术</p><p>​人们在感叹电子商务的巨大潜力的同时，不得不冷静地思考，在人与人互不见面的计算机互联网上进行交易和作业时，怎么才能保证交易的公正性和安全性，<strong>保证交易双方身份的真实性</strong>。那就是建立<strong>安全证书体系结构</strong>。<strong>数字安全证书(CA)提供了一种在网上验证身份的方式</strong>。安全证书体制主要采用了公开密钥体制，其它还包括对称密钥加密、数字签名、数字信封等技术</p><p>​    使用<strong>数字证书</strong>，通过运用对称和非对称密码体制等密码技术建立起一套严密的身份认证系统，从而保证：信息除发送方和接收方外不被其它人窃取;信息在传输过程中不被篡改;发送方能够通过数字证书来确认接收方的身份;发送方对于自己的信息不能抵赖。</p><p>​CA中心采用的是以数字加密技术为核心的数字证书认证技术，通过数字证书，CA中心可以对互联网上所传输的各种信息进行加密、解密、数字签名与签名认证等各种处理，同时也能保障在数字传输的过程中不被不法分子所侵入，或者即使受到侵入也无法查看其中的内容。</p><p>​<strong>简而言之，确保在网上进行交易时，交易的对象是真实存在的并且是你想要进行交易的对象，而不是假冒的，由CA中心来为你担保，持有CA证书的人就是你交易的对象</strong> </p><h3 id="验证网站是否可信（仅针对HTTPS）"><a href="#验证网站是否可信（仅针对HTTPS）" class="headerlink" title="验证网站是否可信（仅针对HTTPS）"></a>验证网站是否可信（仅针对HTTPS）</h3><p>通常，我们如果访问某些敏感的网页（比如用户登录的页面），其协议都会使用 HTTPS 而不是 HTTP。因为 HTTP 协议是明文的，一旦有坏人在偷窥你的网络通讯，他&#x2F;她就可以看到网络通讯的内容（比如你的密码、银行帐号、等）；而 HTTPS 是加密的协议，可以保证你的传输过程中，坏蛋无法偷窥。<br>　　但是，千万【不要】以为，HTTPS 协议有了加密，就可高枕无忧了。俺再举一个例子来说明，光有加密是不够滴。假设有一个坏人，搞了一个假的网银的站点，然后诱骗你上这个站点。假设你又比较单纯，一不留神，就把你的帐号，口令都输入进去了。那这个坏蛋的阴谋就得逞鸟。<br>　　为了防止坏人这么干，HTTPS 协议除了有加密的机制，还有一套证书的机制。通过证书来确保，某个站点确实就是某个站点。<br>　　有了证书之后，当你的浏览器在访问某个 HTTPS 网站时，会验证该站点上的 CA 证书（类似于验证介绍信的公章）。如果浏览器发现该证书没有问题（证书被某个根证书信任、证书上绑定的域名和该网站的域名一致、证书没有过期），那么页面就直接打开；否则的话，浏览器会给出一个警告，告诉你该网站的证书存在某某问题，是否继续访问该站点？为了形象起见，下面给出 IE 和 Firefox 的抓图：</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/IE_Certification.png" alt="IE_Certification"></p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Firefox_Certification.png" alt="Firefox_Certification"></p><p>大多数知名的网站，如果用了 HTTPS 协议，其证书都是可信的（也就不会出现上述警告）。所以，今后你如果上某个知名网站，发现浏览器跳出上述警告，你就要小心啦！</p><h3 id="验证某文件是否可信（是否被篡改）"><a href="#验证某文件是否可信（是否被篡改）" class="headerlink" title="验证某文件是否可信（是否被篡改）"></a>验证某文件是否可信（是否被篡改）</h3><p>证书除了可以用来验证某个网站，还可以用来验证某个文件是否被篡改。具体是通过证书来制作文件的数字签名。制作数字签名的过程太专业，咱就不说了。后面专门告诉大家如何验证文件的数字签名。考虑到大多数人用 Windows 系统，俺就拿 Windows 的例子来说事儿。<br>　　比如，俺手头有一个 Firefox 的安装文件（带有数字签名）。当俺查看该文件的属性，会看到如下的界面。眼神好的同学，会注意到到上面有个“<strong>数字签名</strong>”的标签页。如果没有出现这个标签页，就说明该文件没有附带数字签名。</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Firefox_Setup_Files.png" alt="Firefox_Setup_Files"></p><p>选择该标签页，看到如下界面。<br>　　顺便说一下，某些数字签名中没有包含“邮件地址”，那么这一项会显示“不可用”；同样的，某些数字签名没有包含“时间戳”，也会显示“不可用”。不要紧张，这里显示的“不可用”跟数字签名的有效性【没关系】。</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Firefox_Setup_more.png" alt="Firefox_Setup_more"></p><p>一般来说，签名列表中，有且仅有一个签名。选中它，点“<strong>详细信息</strong>”按钮。跳出如下界面：<br>　　通常这个界面会显示一行字：“该数字签名正常”（图中红圈标出）。如果有这行字，就说明该文件从出厂到你手里，中途没有被篡改过（是原装滴、是纯洁滴）。</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Firefox_Setup_normal_Certification.png" alt="Firefox_Setup_normal_Certification"></p><p>如果该文件被篡改过了（比如，感染了病毒、被注入木马），那么对话框会出现一个警告提示“<strong>该数字签名无效</strong>”（图中红圈标出）。界面如下：</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Firefox_Setup_innormal_Certification.png" alt="Firefox_Setup_innormal_Certification"></p><p>不论签名是否正常，你都可以点“查看证书”按钮。这时候，会跳出证书的对话框。如下：</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Certification.png" alt="Certification"></p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/Certification_more.png" alt="Certification_more"></p><p>从后一个界面，可以看到俺刚才说的证书信任链。图中的信任链有3层：<br>第1层是根证书（Thawte Premium Server CA）<br>第2层是 Thawte 专门用来签名的证书<br>第3层是 Mozilla 自己的证书</p><p>　　目前大多数知名的公司（或组织机构），其发布的可执行文件（比如软件安装包、驱动程序、安全补丁），都带有数字签名。你可以自己去看一下。<br>　　建议大伙儿在安装软件之前，都先看看是否有数字签名？如果有，就按照上述步骤验证一把。一旦数字签名是坏的，那可千万别装。</p><h2 id="数字证书由谁颁发"><a href="#数字证书由谁颁发" class="headerlink" title="数字证书由谁颁发"></a>数字证书由谁颁发</h2><p>数字证书由<strong>证书授权中心(CA中心)<strong>或者认证中心的</strong>“下级认证CA中心”</strong>颁发，CA中心是能向用户签发数字证书以确认用户身份的管理机构，也是数字证书发行的唯一机构，它在数字证书发行中充当担保的角色<del>（认证中心的公共密钥必须是可靠的，认证中心必须公布其公共密钥或由更高级别的认证中心提供一个电子凭证来证明其公共密钥的有效性，后一种方法导致了多级别认证中心的出现）</del></p><p>当需要确认身份时，由他们来说，“是的，这个人就是他们所说的人，而我们，CA，验证，担保”</p><p>CA中心可以是民间团体，也可以是政府机构，由具有权威性和公正性的第三方信任机构担当，它的作用就像我们现实生活中颁发证件的公司，比如护照办理机构，也就是说CA中心不止有一个，可以有多个，但必须都是具有公信力的机构，被人们所信任</p><blockquote><p>其实所有的公司都可以发布证书，我们自己也可以去注册一家公司来专门给别人发布证书。但是很明显，我们自己的专门发布证书的公司是不会被那些国际上的权威机构认可的，人家怎么知道你是不是个狗屁皮包公司？因此微软在它的操作系统中，并不会信任我们这个证书发布机构，当应用程序在检查证书的合法信的时候，一看证书的发布机构并不是操作系统所信任的发布机构，就会抛出错误信息。也就是说windows操作系统中不会预先安装好我们这个证书发布机构的证书，不信任我们这个发布机构。</p><p><strong>不受信任的证书发布机构的危害</strong></p><p>为什么一个证书发布机构受不受信任这么重要？我们举个例子。假设我们开了一个狗屁公司来为别人发布证书，并且我和微软有一腿，微软在他们的操作系统中把我设置为了受信任的证书发布机构。现在如果有个小公司叫Wicrosoft 花了10块钱让我为他们公司申请了一个证书，并且公司慢慢壮大，证书的应用范围也越来越广。然后有个奸商的公司JS Company想冒充Wicrosoft，于是给了我￥10000，让我为他们颁布一个证书，但是证书的名字(Subject)要写Wicrosoft，假如我为了这￥10000，真的把证书给了他们，那么他们以后就可以使用这个证书来冒充Wicrosoft了。</p><p>如果是一个优秀的证书发布机构，比如你要向他申请一个名字叫Wicrosoft的证书，它会让你提供很多资料证明你确实可以代表Wicrosoft这个公司，也就是说他回去核实你的身份。证书发布机构是要为他发布出的证书负法律责任的。</p><p>到这里，你可能会想，TMD，那我们自己就不能发布证书吗？就一定要花钱去申请？当然不是，我们自己也可以成立证书发布机构，但是需要通过一些安全认证等等，只是有点麻烦。另外，如果数字证书只是要在公司内部使用，公司可以自己给自己生成一个证书，在公司的所有机器上把这个证书设置为操作系统信任的证书发布机构的证书(这句话仔细看清楚，有点绕口)，这样以后公司发布的证书在公司内部的所有机器上就可以通过验证了(在发布证书时，把这些证书的Issuer(发布机构)设置为我们自己的证书发布机构的证书的Subject(主题)就可以了)。但是这只限于内部应用，因为只有我们公司自己的机器上设置了信任我们自己这个所谓的证书发布机构，而其它机器上并没有事先信任我们这个证书发布机构，所以在其它机器上，我们发布的证书就无法通过安全验证。</p></blockquote><h2 id="数字证书的内容"><a href="#数字证书的内容" class="headerlink" title="数字证书的内容"></a>数字证书的内容</h2><p>下图显示了X.509版本3证书的内容：</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/x509v3.gif" alt="单层数字证书"></p><p>X.509版本3证书支持自X.509版本1以来支持的以下字段：</p><ul><li><p>***主题***：提供CA颁发证书的计算机，用户，网络设备或服务的名称。主题名称通常使用X.500或轻量级目录访问协议（LDAP）格式表示。</p></li><li><p>***序列号***：为CA颁发的每个证书提供唯一标识符。</p></li><li><p>***颁发者***：为颁发证书的CA提供专有名称。发行者名称通常使用X.500或LDAP格式表示。</p></li><li><p>***有效自***：提供证书生效的日期和时间。 </p></li><li><p>***有效收件人***：提供证书不再有效的日期和时间。应用程序或服务评估证书的日期必须介于证书的Valid From和Valid To字段之间，以使证书有效。</p></li><li><p>***公钥***：包含与证书关联的密钥对的公钥。</p></li><li><p>***签名算法***：用于签署证书的算法。</p></li><li><p>***签名值***：包含数字签名的位串。</p></li></ul><p>除版本1字段外，X.509版本3证书还包括为证书提供附加功能和功能的扩展。这些扩展是可选的，并不一定包含在CA颁发的每个证书中：</p><ul><li><em>主题替代名称</em>：主题可以以多种不同的格式呈现。例如，如果证书必须包含LDAP专有名称，电子邮件名称和用户主体名称（UPN）格式的用户帐户名，则可以通过添加证书中的电子邮件名称或UPN包含这些附加名称格式的主题备用名称扩展名。</li><li><em>CRL分发点（CDP）：</em> 当用户，服务或计算机提供证书时，应用程序或服务必须确定证书是否在其有效期到期之前被撤销。CDP扩展提供一个或多个URL，应用程序或服务可以从中检索证书吊销列表（CRL）。</li><li><em>授权信息访问（AIA）：</em> 在应用程序或服务验证证书后，还必须评估颁发证书的CA的证书（也称为父CA）的撤销和有效性。AIA扩展提供一个或多个URL，应用程序或服务可以从中检索颁发的CA证书。 </li><li><em>增强型密钥用法（EKU）：</em> 此属性包括可用于证书的每个应用程序或服务的对象标识符（OID）。每个OID都是来自全球注册机构的唯一数字序列。 </li><li><em>证书策略：</em> 描述组织在颁发证书之前验证证书请求者身份所采取的措施。OID用于表示验证过程，并且可以包括策略限定的URL，该URL完整地描述了验证身份所采取的措施。</li></ul><h2 id="数字证书的结构"><a href="#数字证书的结构" class="headerlink" title="数字证书的结构"></a>数字证书的结构</h2><p>CA在结构上是分层的。通常有三种类型的层次结构，它们由层数表示，也有三层以上的，至于为什么要这么多层，无非是安全和方便管理CA</p><h4 id="单层-单层层次结构"><a href="#单层-单层层次结构" class="headerlink" title="单层&#x2F;单层层次结构"></a>单层&#x2F;单层层次结构</h4><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/ca-1.png" alt="单层数字证书"></p><p>单层层次结构由一个CA组成。单个CA既是根CA又是颁发CA. 根CA是PKI的信任锚的术语。信任根CA的任何应用程序，用户或计算机都信任CA层次结构颁发的任何证书。颁发CA是向最终实体颁发证书的CA. 出于安全原因，这两个角色通常是分开的。使用单层层次结构时，它们将合并在一起。</p><h4 id="两层层次结构"><a href="#两层层次结构" class="headerlink" title="两层层次结构"></a>两层层次结构</h4><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/ca-2.png" alt="两层数字证书"></p><p>双层层次结构是最常见的。在某些方面，它是一层和三层等级之间的折衷。在此设计中，有一个脱机的根CA，以及一个在线的从属颁发CA. 由于根CA和颁发CA角色是分开的，因此安全级别会提高。但更重要的是，根CA处于脱机状态，因此可以更好地保护根CA的私钥免受攻击。它还提高了可扩展性和灵活性。这是因为可以存在多个从根CA到CA的颁发CA. 这可以让你有CA在不同的地理位置，以及与不同的安全级别。 </p><h4 id="三层层次结构"><a href="#三层层次结构" class="headerlink" title="三层层次结构"></a>三层层次结构</h4><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/ca-3.png" alt="三层数字证书"></p><p>具体而言，两层层次结构之间的区别在于第二层位于根CA和颁发CA之间。此CA的放置可能有几个不同的原因。第一个原因是将第二层CA用作策略CA，换句话说，策略CA配置为向 “颁发CA” 颁发证书，该证书受其颁发的证书类型的限制。策略CA也可以仅用作管理边界。换句话说，您只从“策略CA”的下属颁发某些证书，并在颁发证书之前执行某种级别的验证，但该策略仅从管理而非技术角度强制执行。</p><p>添加第二层的另一个原因是，如果由于密钥泄露而需要撤销多个CA，则可以在第二层级别执行它，从而使其他“从根分支”可用。应该注意的是，此层次结构中的第二层CA可以像Root一样保持脱机状态。</p><h4 id="信任链"><a href="#信任链" class="headerlink" title="信任链"></a>信任链</h4><p>由于CA的多层结构，会产生信任链</p><p>当您从商业CA（也就是要求具有公信力的CA中心）获得公钥证书时，您的证书将与证书链相关联，或者有时称为信任链。链中的证书数量取决于CA的层次结构。下图显示了双层CA的证书链。所有者&#x2F;用户证书由颁发CA签名，颁发CA证书由根CA签名。根CA的证书是自签名的。</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/chain-of-trust.gif" alt="信任链"></p><p>在用户通过浏览器或程序验证证书期间，浏览器需要通过查找上一个颁发CA或中间CA的公钥来验证签名。该过程将继续，直到达到根证书。根CA是自签名的，最后必须由浏览器信任。浏览器将所有知名的CA根证书保存在其信任库中。</p><p>浏览器的信任库中只会存有知名的根CA，颁发CA或者中间CA不会放在信任库中，因此浏览器在验证时，由下自上一直找到根CA，确保根CA是可信任的即可验证安全</p><p><strong>其实多层次的CA结构中，颁发CA或中间CA的出现是为了根CA的安全和方便CA的管理，有了颁发CA或者中间CA，根CA可以脱机管理，从而保证根CA的私钥安全</strong></p><h4 id="验证终端实体证书"><a href="#验证终端实体证书" class="headerlink" title="验证终端实体证书"></a>验证终端实体证书</h4><blockquote><p>看一个浏览器验证终端数字证书的过程</p></blockquote><p>终端实体证书(要验证的数字证书)的信任从证书路径回溯，通过从属 CA 直到根 CA。向 Web 浏览器或其他客户端呈现了终端实体证书时，它会尝试构建信任链。例如，它可能会检查证书的<em>颁发者可分辨名称</em> 和<em>主题可分辨名称</em> 是否与颁发 CA 证书的相应字段匹配。匹配将在层次结构上的每个后续级别继续进行，直到客户端到达其信任存储中包含的受信任根。</p><p>信任存储是浏览器或操作系统包含的受信任 CA 的库。对于私有 PKI，组织的 IT 部门必须确保每个浏览器或系统之前已将私有根 CA （即私人团体和组织自建的CA中心的自签名数字证书）添加到其信任存储中。否则将无法验证证书路径，导致客户端错误。</p><p>下图显示了在向浏览器提供终端实体 X.509 证书时，浏览器遵循的验证路径。请注意，终端实体证书缺乏签名颁发机构，仅用于对拥有该证书的实体进行身份验证。</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/chain-of-trust.png" alt="信任链"></p><p>浏览器检查终端实体证书。浏览器发现证书提供了来自从属 CA（级别 3）的签名作为其信任凭证。从属 CA 的证书必须包含在同一 PEM 文件中。或者，它们也可以位于包含构成信任链的证书的单独文件中。找到这些内容后，浏览器会检查从属 CA（级别 3）的证书，并发现它提供了来自从属 CA（级别 2）的签名。接下来，从属 CA（级别 2）提供了来自根 CA（级别 1）的签名作为其信任凭证。如果浏览器发现其信任存储中预装的私有根 CA 证书的副本，它会确认终端实体证书可信</p><p>通常，浏览器还会根据证书吊销列表 (CRL) 检查每个证书。已过期、已吊销或配置错误的证书将被拒绝，验证失败</p><h2 id="数字证书的分类"><a href="#数字证书的分类" class="headerlink" title="数字证书的分类"></a>数字证书的分类</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从证书的用途来看，数字证书可分为<span class="strong">**签名证书**</span>和<span class="strong">**加密证书**</span>。签名证书主要用于对用户信息进行签名，以保证信息完整性和行为的不可抵赖；加密证书主要用于对用户传送信息进行加密，以保证信息的机密性。</span><br></pre></td></tr></table></figure><h3 id="签名证书"><a href="#签名证书" class="headerlink" title="签名证书"></a>签名证书</h3><p> 签名时使用，仅仅用来验证身份使用，其公钥和私钥均由A自己产生，并且由自己保管，CA不负责其保管任务。</p><p>CA负责的仅仅是给你颁发一个签名证书，证书里面包含有你的身份信息和用于验证的公钥（公钥就是你自己生成的密钥对里的那个公钥，CA不会给你生成），这样当别人验证签名(验签)时，可以通过数字证书来确认你是不是本人</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/GetSignKey.jpg" alt="签名证书"></p><h3 id="加密证书"><a href="#加密证书" class="headerlink" title="加密证书"></a>加密证书</h3><p>加密证书在传递加密数据时使用，其私钥和公钥由CA产生，并由CA保管（存根）。</p><p>注意，加密证书的密钥对不是由你自己生成的，而是由CA产生（实际上不是CA，是KMC产生后交给CA），产生之后，将加密证书连同密钥对交给你，也就是说，加密密钥对在CA那边会存根一份，你自己保留一份，加密证书中存放的就是密钥对中的公钥，私钥不能外流</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/GetEncriptionKey.jpg" alt="加密证书"></p><p>这是割裂开的两个申请流程，实际上加密证书和签名证书可以同时申请，一个流程搞定</p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/DoubleCertifications.jpg" alt="双证书申请"></p><p><img src="/2020/12/24/posts/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E6%98%AF%E4%BB%80%E4%B9%88/DoubleCertifications2.jpg" alt="双证书申请"></p><p>PKI中使用双证书、即双密钥，双密钥是指签名密钥对与加密密钥对，从本质上说，两个密钥对都是非对称密钥对，因此，都可以用来作非对称加解密，然而为什么需要双密钥呢？这必须从两个密钥的用法说起。<br>签名密钥对用于数据的完整性检测，保证防伪造与防抵赖，签名私钥的遗失，并不会影响对以前签名数据的验证，因此，签名私钥无须备份，因此，签名密钥不需要也不应该需要第三方来管理，完全由持有者自己产生；而加密密钥对用于数据的加密保护，若加密私钥遗失，将导致以前的加密数据无法解密，这在实际应用中是无法接受的，加密私钥应该由可信的第三方（即通常所说的CA）来备份，以保证加密数据的可用性，因此，加密密钥对可以由第三方来产生，并备份。<br>由于签名密钥与加密密钥的使用与管理上的不同，决定了双证书使用的合理性与必然性</p><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p>若链接失效请参考离线版</p></blockquote><p><a href="https://blog.csdn.net/u011068702/article/details/73357150">深入理解加密、解密、数字签名（签名证书、加密证书）的组成和数字证书</a>—————</p><p><a href="https://www.cnblogs.com/JeffreySun/archive/2010/06/24/1627247.html">数字证书原理</a>———</p><p><a href="https://cloud.tencent.com/developer/article/1701743">数字签名和数字证书的前世今生</a>————————————————————————–</p><p><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc962029(v=technet.10)?redirectedfrom=MSDN">微软大法介绍数字证书</a>—————————————-</p><p><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html">数字签名是什么？</a>———————————————————————————————</p><p><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html">密码学笔记</a>——————————————————————————————————</p><p><a href="https://www.cnblogs.com/sunsky303/p/11194801.html">1.数字证书与证书颁发机构</a>————————————–</p><p><a href="https://www.jianshu.com/p/42bf7c4d6ab8">2.什么是数字证书</a>————————————————–</p><p><a href="https://zhaohuabing.com/post/2020-03-19-pki/">3.数字证书原理</a>—————————————————–</p><p><a href="https://docs.aws.amazon.com/zh_cn/acm-pca/latest/userguide/ca-hierarchy.html">CA层级结构</a>———————————————————-</p><p><a href="https://program-think.blogspot.com/2010/02/introduce-digital-certificate-and-ca.html">数字证书及 CA 的扫盲介绍</a>————————————</p><p><a href="https://wenku.baidu.com/view/89796e20524de518974b7d60.html">双证书体系</a>———————————————————–</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 数字签名 </tag>
            
            <tag> 数字证书 </tag>
            
            <tag> CA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于SSH</title>
      <link href="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/"/>
      <url>/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/</url>
      
        <content type="html"><![CDATA[<img src="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/SSH.jpg" alt="SSH" style="zoom:80%;"><span id="more"></span><h1 id="什么是SSH？"><a href="#什么是SSH？" class="headerlink" title="什么是SSH？"></a>什么是SSH？</h1><p>​<strong>Secure Shell</strong> (安全外壳协议，简称<strong>SSH</strong>) 是一种加密的 <strong>网络传输协议</strong>，目的是实现<strong>安全远程登陆</strong>以及其它<strong>安全网络服务</strong></p><blockquote><p>SSH仅仅是一项<strong>协议标准</strong>，其具体的实现有很多，既有开源实现的OPenSSH，也有商业实现方案，使用最广泛的当然是开源实现的OpenSSH</p></blockquote><br><p>​如果一个用户使用SSH协议登录另一台远程计算机，我们就可以认为这种登录是安全的，最早的时候计算机之间的通信都是明文通信，即没有经过加密，一旦被截获信息就暴露无疑，1995年芬兰赫尔辛基理工大学的研究员Tatu Ylönen设计了ssh协议的第一个版本，同年七月份，以免费软件的形式发布了这个协议的一个实现，迅速流行起来</p><br><br><h1 id="SSH实现原理"><a href="#SSH实现原理" class="headerlink" title="SSH实现原理"></a>SSH实现原理</h1><blockquote><p>预备知识：密码学</p></blockquote><p>​SSH采用非对称加密方式，进行加密登录和传输，要进行传输首先就要 <strong>建立通信&#x2F;登录</strong> ，SSH建立连接主要有两种方式</p><br><br><h2 id="基于口令认证"><a href="#基于口令认证" class="headerlink" title="基于口令认证"></a>基于口令认证</h2><p>​实际上是对sever端的公钥或者指纹进行确认，确认建立连接时的公钥或者指纹是属于你要连接的那个主机的，而不是黑客替换成的自己的公钥（即中间人攻击），流程如下：</p><p>​</p><img src="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/Token_Authentication.webp" alt="Token_Authentication"><ol><li><p>远程Server收到Client端用户TopGun的登录请求，Server把自己的公钥发给用户。</p></li><li><p>Client使用这个公钥，将密码进行加密。</p></li><li><p>Client将加密的密码发送给Server端。</p></li><li><p>远程Server用自己的私钥，解密登录密码，然后验证其合法性。</p></li><li><p>若验证结果，给Client相应的响应。</p><br><p>可以看到，直接采用非对称加密建立连接的过程，并不安全，因为你无法确保TopGun收到的公钥来自于Sever端，比如上文提到的中间人攻击：</p><img src="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/Middle_Hacker.webp" alt="Middle_Hacker"><p>​中间人通过这种方式可以轻易的获取你的账号密码并冒充你登录服务端，即所谓中间人攻击，那么如何避免这种情况的发生呢？就是我们所说的 <strong>基于口令的认证</strong> </p><br><p>​第一次登陆时，系统会出现类似下面的提示信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   The authenticity of host <span class="string">&#x27;ssh-server.example.com (12.18.429.21)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">   RSA key fingerprint is 98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? </span></span><br></pre></td></tr></table></figure><p>意思是“无法确认主机ssh-server.example.com（12.18.429.21）的真实性，不过知道它的公钥指纹，是否继续连接？”</p><blockquote><p>所谓公钥指纹，其实就是将公钥进行hash生成的一个128位的序列，用这个序列就可以代表公钥，因为具有唯一性，不会重复，所以称之为指纹(fingerprint)</p><p>为什么不用公钥，反倒要生成一个指纹代替？</p><p>主要是公钥位数比较长，向rsa算法生成的公钥有1024位，比较起来不方便，由于指纹位数比较少，而且不同的公钥生成的指纹不会重复，具有唯一性，所以用指纹代替</p></blockquote><br><p>现在又有疑问了，你怎么知道这个指纹是不是属于目标主机而不是中间人的呢？</p></li></ol><blockquote><p>实际上，这个没有什么好办法，远程主机必须在自己的网站上贴出自己的公钥指纹，以便用户自行核对，从而确定目标主机的身份，允许进行连接</p></blockquote><br><p>如果输入yes后，会出现下面的信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Warning: Permanently added &#x27;ssh-server.example.com,12.18.429.21&#x27; (RSA) to the list of known hosts. </span><br><span class="line">Password: (enter password)</span><br></pre></td></tr></table></figure><p>​即该host已被确认，并被追加到know_hosts中，然后需要输入密码，后面的流程就如第一幅图所示了</p><img src="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/Token_Authentication.webp" alt="Token_Authentication"><blockquote><p>​关于known_hosts文件，它记录的就是你连接过并且信赖的主机，这样当你下次再进行连接时，就不需要再次询问你是否信任该主机并进行连接了，而是直接让你输入密码进行登录</p></blockquote><br><br><br>     <h2 id="基于公钥认证"><a href="#基于公钥认证" class="headerlink" title="基于公钥认证"></a>基于公钥认证</h2><blockquote><p>​如果是根据口令进行认证，每一次登录都需要输入密码，一般登录主机都需要密码进行身份验证，确保你是主机的用户，或者其它利用ssh方式进行登录的网站，会要求你账号和密码都要输入，这样每一次登录就比较烦，都要输入账号密码才可以，但是接下来介绍的<strong>基于公钥认证</strong>就不需要这么麻烦</p></blockquote><p>流程如下：</p><img src="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/PubKey_Authentication.webp" alt="PubKey_Authentication"><ol><li>Client将自己的公钥存放在Server上，追加在文件authorized_keys中。</li><li>Server端接收到Client的连接请求后，会在authorized_keys中匹配到Client的公钥pubKey，并生成随机数R，用Client的公钥对该随机数进行加密得到pubKey(R)<br>，然后将加密后信息发送给Client。</li><li>Client端通过私钥进行解密得到随机数R，然后对随机数R和本次会话的SessionKey利用MD5生成摘要Digest1，发送给Server端。</li><li>Server端会也会对R和SessionKey利用同样摘要算法生成Digest2。</li><li>Server端会最后比较Digest1和Digest2是否相同，完成认证过程。</li></ol><p>​    </p><p>​简单说就是，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录，不再要求密码。  </p><p>​这样就不会有问题了，因为公钥是公开的，即使被别人截获也没有问题，因为实际上用户是通过私钥来证明自己的身份的，因为只有私钥才可以解开用公钥进行加密的随机字符串</p><br>    <p>​下面是将自己的公钥设置在Github上的展示：</p><img src="/2020/12/24/posts/%E5%85%B3%E4%BA%8ESSH/Set_PubKey.webp" alt="Set_PubKey"><br><br><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.jianshu.com/p/33461b619d53">图解SSH原理</a>——————</p>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git和Github是什么关系？</title>
      <link href="/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/"/>
      <url>/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/GitAndGithub.jpeg" alt="GitAndGithub"></p><p><code>Git</code> 是一款免费、开源的<a href="版本控制"><strong>版本控制</strong></a>管理软件<a id="Git"></a></p><p><code>Github</code> 是用 <code>Git</code> 做<strong>版本控制</strong>的代码托管平台</p><span id="more"></span><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>简单来说，<code>Git</code>就是一款能够实现<strong>版本控制</strong>功能的程序，只不过不像一般的用户应用程序，具有美观的GUI界面，它要通过命令行的形式去使用，如下：<code>git clone http://git.kernel.org/linux/kernel/git/torvalds/linux-2.6.git </code> 将linux系统的仓库下载到自己的电脑上</p><img src="/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/Git_bash.jpg" alt="Git程序界面"><p>每一台电脑上安装好<code>Git</code>之后就可以实现版本控制的功能了，不仅仅可以控制代码的版本历史，其它文件，比如文章，报告，小说都可以使用它进行版本控制，因为它就是一个版本控制工具，仅此而已，由于具有一定的使用门槛，所以大多时使用它的人都是程序猿出身，所以对代码进行版本控制毫无疑问成为它最主要的功能</p><p>关于Git的用法和详细介绍，我会再出一篇博文，这里仅仅是介绍它和Github的关系，也可以看<a href="https://www.liaoxuefeng.com/wiki/896043488029">现成的博文</a></p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><code>Github</code> 就是一个远程仓库，用来存放你代码的地方</p><blockquote><p>关于仓库，就是存放你代码所有版本，所有改动信息的一个库，显示在电脑上其实就是一个文件夹，一般来说一个项目建一个仓库</p><p>比如你有一份论文要写，但是要对它进行版本控制，就用git给它建一个文件夹，它所有版本都放在这个文件夹里。你的论文就是你开启的项目，这个文件夹就是这个项目的仓库</p></blockquote><p><code>Git</code>是一个版本控制程序，<code>Github</code> 是一个网站，每个人都可以在上面注册账号，在网站上新建项目和仓库，进行版本控制管理</p><p>不仅如此，Github上你可以把别人的开源项目下载下来，研究学习别人的代码，甚至可以加以改进，然后提交给原作者申请合并(pull request)，互相交流学习</p><p>关于Git的用法和详细介绍，我会再出一篇博文，这里仅仅是介绍它和Github的关系</p><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><blockquote><p>​举个栗子，你最近在写一篇报告，经常需要改动的地方很多，大多时候还要取消改动，为了以防万一，你每次改之前都会复制一份相同的文件，重命名一下加上版本号，比如：</p><ul><li><p>xxxx年度总结报告-版本1，改动时间 2月3日，改动内容…</p></li><li><p>xxxx年度总结报告-版本2，改动时间2月5日，改动内容…</p></li><li><p>xxxx年度总结报告-版本3，改动时间2月8日，改动内容…</p></li><li><p>…</p></li></ul><p>​是不是和你改论文的样子很像，这就是最简单的版本控制，把你每一次改动之前和改动之后的版本都保存下来，记录每次 <strong>改动的时间</strong>，<strong>改动的内容</strong>，<strong>改动的版本</strong>等等，利用这些信息，你可以很轻易的改回到你之前想要的任何版本</p></blockquote><p>​</p><h3 id="版本控制-官方"><a href="#版本控制-官方" class="headerlink" title="版本控制 (官方)"></a><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">版本控制</a> (官方)</h3><p>​<strong>版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统</strong></p><p>​如果你是位图形或网页设计师，可能会需要保存某一幅图片或页面布局文件的所有修订版本（这或许是你非常渴望拥有的功能），采用<strong>版本控制系统（VCS）</strong>是个明智的选择。 有了它你就可以将选定的文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态，你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等。 使用版本控制系统通常还意味着，就算你乱来一气把整个项目中的文件改的改删的删，你也照样可以轻松恢复到原先的样子。 但额外增加的工作量却微乎其微。</p><h4 id="本地版本控制系统"><a href="#本地版本控制系统" class="headerlink" title="本地版本控制系统"></a>本地版本控制系统</h4><p>​许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。 就像我举的那个栗子一样，这么做唯一的好处就是简单，但是特别容易犯错。 有时候会混淆所在的工作目录，一不小心会写错文件或者覆盖意想外的文件。</p><p>​为了解决这个问题，人们很久以前就开发了许多种<strong>本地版本控制系统</strong>，大多都是采用某种简单的数据库来记录文件的历次更新差异。</p><img src="/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/Local_VCS.png" alt="本地版本控制系统"><p>​其中最流行的一种叫做 RCS，现今许多计算机系统上都还看得到它的踪影。 <a href="https://www.gnu.org/software/rcs/">RCS</a> 的工作原理是在硬盘上保存补丁集（补丁是指文件修订前后的变化）；通过应用所有的补丁，可以重新计算出各个版本的文件内容。</p><h4 id="集中化的版本控制系统"><a href="#集中化的版本控制系统" class="headerlink" title="集中化的版本控制系统"></a>集中化的版本控制系统</h4><p>​接下来人们又遇到一个问题，如何让在不同系统上的开发者协同工作？ 于是，<strong>集中化的版本控制系统（Centralized Version Control Systems，简称 CVCS）</strong>应运而生。 这类系统，诸如 CVS、Subversion 以及 Perforce 等，都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。 多年以来，这已成为版本控制系统的标准做法。</p><img src="/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/Centralized_VCS.png" alt="集中化的版本控制系统"><p>​这种做法带来了许多好处，特别是相较于老式的本地 VCS 来说。 现在，每个人都可以在一定程度上看到项目中的其他人正在做些什么。 而管理员也可以轻松掌控每个开发者的权限，并且管理一个 CVCS 要远比在各个客户端上维护本地数据库来得轻松容易。</p><p>​事分两面，有好有坏。 这么做最显而易见的缺点是中央服务器的单点故障。 如果宕机一小时，那么在这一小时内，谁都无法提交更新，也就无法协同工作。 如果中心数据库所在的磁盘发生损坏，又没有做恰当备份，毫无疑问你将丢失所有数据——包括项目的整个变更历史，只剩下人们在各自机器上保留的单独快照。 本地版本控制系统也存在类似问题，只要整个项目的历史记录被保存在单一位置，就有丢失所有历史更新记录的风险。</p><h4 id="分布式版本控制系统"><a href="#分布式版本控制系统" class="headerlink" title="分布式版本控制系统"></a>分布式版本控制系统</h4><p>​于是分布式版本控制系统（Distributed Version Control System，简称 DVCS）面世了。 在这类系统中，像 <a href="#Git"><strong>Git</strong></a>、Mercurial、Bazaar 以及 Darcs 等，客户端并不只提取最新版本的文件快照(意思就是当前最新的文件版本)， 而是把代码仓库完整地镜像下来，包括完整的历史记录。 这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。 因为每一次的克隆操作，实际上都是一次对代码仓库的完整备份。</p><img src="/2020/12/23/posts/Git%E5%92%8CGithub%E6%98%AF%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB/Distributed_VCS.png"><p>​更进一步，许多这类系统都可以指定和若干不同的远端代码仓库进行交互。籍此，你就可以在同一个项目中，分别和不同工作小组的人相互协作。 你可以根据需要设定不同的协作流程，比如层次模型式的工作流，而这在以前的集中式系统中是无法实现的。</p><h3 id><a href="#" class="headerlink" title></a></h3>]]></content>
      
      
      <categories>
          
          <category> 技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-12-22小记</title>
      <link href="/2020/12/23/diaries/2020-12-22%E5%B0%8F%E8%AE%B0/"/>
      <url>/2020/12/23/diaries/2020-12-22%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6e22dbc5bf5d1744292757b74e2348790e2e16affc5926e015652b2372f2b3f2">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d74a18c6887027d79edf90b13d2acead58fc2479e5f2746c42a1f77898708122d38c98193a61ba86f83e444c842fbdc875b10c16153e085370573e8b835d1dabf074516f16adbd7ebfd330f88509bee40412f5303ccbdd76866156b9ebd980e54f11b24d51c7e53bb5ae9f95bb60bdfc12b0562982c4ac0094655e36cde719c2534b53854c4d726d9ede920557a2a83d8161b201799aacabd70cad578a70eb6bd214bd0e99b655344046f2346d9d3ff033c2ae5782e73285aae79fbdd025c6dbd392125c181ec50bf7994f3400ac2228558ebc70f2fc2a58d0bf5dcc6f94f683f0e836e358ec021b9da2201988e0be79e7c41e0e1a2b13dcdbd0fe5d9f4b4e7b942b2c8490fde527a597b6f1c7af3e257064ada88425b287cafe4839aa5471977f826d44c3ca7e38efa46ec57afd2befcd03b32fb6c1e205ad7d8470886787168cc392e08900ddefebd6d865829756c0c1d5ac1aa0cfeb9be4bb7722a13f91aaf9fc4073669086080b1700ddbaaf4249a74dac06ba72cc3b91aa358dd0c43dd10d2378e31505fc1f3253f2604f761561b3200153639a69261b95e974823c4b2452c35786899843cc25a3531bd522a2ae7f1d8b818340efc1af3eb625ffc3147e3a9b5ddc53034543ad85dddefd27f9300e58654c03d9990362ab86a403f8922da376ccd8a84c90a5f843f3a85db167ea0109313e2243485b977d1c03abab532c735e4cd5fcb065cee7aebdcd1d3b18b6166a5f95d7fdc2d68525afaf75bb81a8520a91dc99b43125192fa5ae2e85d33564cd72eafa0bffbb3f632a57edb469ae028841f418b501290f8f5a4d68125551eab36fffc8e2ce7415ea19cf9cec0dd0f6285698250e923ad1c0e9f7cf051e6e865070ddf65ec834a23f2c4694c153f0da4ea43d71be3b97e0b6387f5afd209c52d934df53cf8f5244f7f02b9403df1dd08e8a3c44015ce28dd4420718e0846a347c846fe9e84a9e19be42836be158af532e34d355a001e5f4cfbe1f296265e9ef98155734fdb6823e450c79948898e796bc8fd6cd365454301142595e4d8fd0eeda9daa8744122e0f05b0503e683969d1b4c8b7bc66f33e199afc608d4764065ef669c495f9dc03448b0fd22ffbfbeedf73b173cdef0d202659c441fa6475d563a352c0f0762698c73aad266f1f725d2c76c204d5add917bc02a1e07326524a70f93682967fc0f9f4d4747b271117b539cdf09d70b348d17986e29e80bc97b36fd6b48448c576ff32301be3bab48745594f6b4ec08848c13153d6f063059872bcc4488db3eca7b0705082d05d0cea86dc4ce8716b98cbe2431ab5e12463daf135fe2c8af97a01c38ac4e0e335caf0d688659a9dc0696e2d7bfb3123b5dab926678354a209e562cf17a1d8b480373bac4b11e9c6376786fdc08cd5499757bd84c570d55189a37b20d50a68a7c9696fc1c20480f17304b911acd089d6dbc5c81f9dabd37a64caabf8fecde7fa3ccabb44579bb50672e2584a8e2c32e0a5c473c3cfae818ed34932b081889fb4c2c544dafb500a54ec0e53e06e142d1b901685738e80989ce77628d32d827451a2043c60cb44ffbf4e585e120e03b8eeb5526227d0b13b225178d69aa9739fb5c57d64fe93e53013b195c3a7b3762b4c75f79377974d15e0dea53aafb07d3cb2a701b8b896a18e08933fca6bc109f33a4743cb69148e948cf7c21f6ca04a0754ab0b30d0de0795c336397e46e4880441ed7303fe3c9b99ce8383408b937342733aa04bfea4e22c0ca5b07fc5290045c5fa82bb7cd10b5f59196904cda35205bb84bba9de2cb295e0bf537c200706fb734490bd157c132dad8ff6cacec4a3a95644a84b7d6e403039a21ef5e12ad8920cf008abafeb121eb07aa4488fd922896f965538cdadfdd067a1709f975798249f19f96602dc890f97843bc76e6616d715cc1a2b2d237a2bd1a167500aa4fba72d8ee0936b31036c48b0d98e08b79427d8654ef8f2d573a8e66d1b15a7a51bd8ba22214e2623f0297639b39d4be77bfb1014b06392bcb3e8edce23461cb18e13b0730cf887bb307575f43638bd17ec5426f599d19c418b65d8ce380ed06f2b749ee54182a14aab328918689ba659f6e1c98e09d5d6abeaf993e7469ee327fad3f83a392718aa4676427998a46b1fdbe415b070bee7b76eba8acff6a8a73bc400efa890590fb5d89530ee1179bcada2368d14256e01a7b9c8d4636eb499cda6d7d6b36f5b8ef49392072cb5d4af8cd3d4010bc9bbce4667639c8c6616e799c2e49dcf6d74680dd0f8999fb46052c054292ecec0a98f3921a0c9997ccc42264ca6eea85bd3126944282b1a79284d63e57b6e2bdd1e74db36687d4251395164243c9917529e35f5abd9fdb2254d1f59ad80f01a726e4cff7f4a501b0aa7806504cf415fb79f712b3e500f3f0bcced88b4e68f9d9e324b3cf0e822bd99b69f11d91b9d72e212546629909a30dcb8d806df9562f6ada6aeb0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站伊始</title>
      <link href="/2020/12/22/diaries/%E5%BB%BA%E7%AB%99%E4%BC%8A%E5%A7%8B/"/>
      <url>/2020/12/22/diaries/%E5%BB%BA%E7%AB%99%E4%BC%8A%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1aef8d468caa3b23440032084dfaedaace218f3d8a35822dcdc24eefa1e6e859">a834c3e63deaa882de86997759bf560325e1c5876e197665812223c1263aa5d7e3f738f37fff10dc7dbabea560eee17f31a2110bb07668ee562484d0b25a3a326ebf1c4096b4ca48d3dfc5879ef1e98369b8eeba933366563658f150274e3f2396c092d352d189d4198742c9324a3a28368e7e0a53dd98901387c0dfc178a54f96bd7e673ca6e33fd3e58db8128e5874173b0602fbe7d8f0832523922e56240ca0c1b863ada3845c8a3ebb3a4591d229152da675e21c98630d9fedd088a3e01b2a4445bc227dabb4062c43a9023583ee9f585bd8e10f3183f9f519e0d4a0753ada0738d64f962d94b4f4627788593fb9d4c3e5bb8785cbfb7a46f50fc5e83e3cda80b40ae8a56da69058559aa0f60ab999dd3e03eb01af4cd23e6aaa732b933586308be3e1a3733a0c2789ba8f72c6f40648aa5cece595763d4286ae6f06baa924fd2dee607b13e990fdd519410a562968a40202f342df62fec247c684c91f4946cc62945e3036e7fc06fb456116e813b184dc28a63769942bdebcdf9aa732819c64b8c705bffaa95eb292e89e080737d301983f040ac783a9e68493ff4c01eac7b3e329b6ddf56cecd0506068f5322c54562de98aa4a723385f84eda9bc362cb5328b0e22807590121a5ef4c343bb6e778abb7a84d85b933fe8ed30254404b5df02a512b779d8eb87989f65878451067e84033c1c6bd4847d805e14767fcd0e9005dd215d1ad6a429b8adad9f8737a22b9ce4677b4c07a95d0a67c7e9944b0fd91a57c47d4581fc802842e543a8659cda8da27407326373d7cd691864783065fb946e7c12d0d6392df77763bafe293a32fbf98b984fafe9dd4c6399934da7cd3d7d9e0c8e4c63919c689f7b00be4dee54a0697ba81771ad86ef1ad1816cd9a07f8461d8784b29d256975fde452cc79f2ba9ac7c486c831a853d467356741da65da0293716329b5234be79bbf22744ecdd42ac641c1cf6a78b390712582adeea47142c53062621f6a574035f26c4d984484e266fdaf139b997a97954b43dddc6b46312d8d252dc19f0ed67a19dd75e3e2fdffcc381a0feeddcf0921d98f4e4dab97ca30181fbe3a682f2b987b6c56d2e8919fa11f2b9a06f047a71fee2cd888b35a271792ef2f31040b08fda81f675a2586e4287df74432b317c52f13d504bc1819dffe6a16aff66292bc2a99112f43f7aec9d80e3a0e1c835e6bf4d553ce5c4438ceeddfa98566f5a199e9a66c2e642b22de33f40171aecb717597853bc907481f6739f3223e124e9edc97a3d72c5a708674a4131f4ab39cf1431a9ab72e062ebf63dceb0400353a35dc2f177058f39fd2ae9171a934104cc4c02b1a1a1e7eb11d53f1d56b84419a41992e43f5468ee16051a964413ccab66fc8c97d1eae30cdc1cab603b7da345cda16b76f0cfb242e7b7220dd7f42b099599cbc6c168580144f744953a677ac4e0c7354f55249480b2b2c027df8bf99d2c0dee4f08774e11348163b6aa34bf7c609494ede3c49be4d508d53ef2f074578b08860675075c1a56008a0a9d2c31ffa8d6daf591035334410e01719b7eee68c434cf40ef615bc9f24098793db3b8885e87d47d537466811b81b4de80f343c721df03dded34c926730af3fcb18797c69e748b30491fbd9fe0c4245a61454930c599093f0798db17832a38657c8c3c53165a25a2e2001e71305602ef0fc941bad54928e62bcb65429a3d8d8075e9b6c51f547cf35397701904952cb8683228be89a9caa4b836daec49b55713a84ac2652a8deb5b3ee2f7742d5f57911f20b8adac3760407b723fd757d8ca34782130af2551254b1e38325d11cda5af6499f6ff1745db65f9d6c97e8a5582542ec763eace69bd34a94355c84bf505dc3473069f4fb9b8ba5ec1f9f40a19f5c87437924bbfa25b6d064d56d4480cae16a6e3358d7dd8a4abb7dcb89dd7d2408cd0771da69446aa33c53c1360a9bb4e95b7866ffce0277fdd10b46e5befb699940d19945b71a38627ca697716321a0cb9de8a12de8ef174ff6ec8c6b61f747285b04373b03cad397c082cdfb5095cf1561940b46156fde46fae589a1a0dc3b7c60a8469410e4dc4cafe4fa5424210a8f7990d5d729782a1dc228a0cac1b51ddd69c9726e2ba40ec2fbc934fd5f40b8f2dceea07fd611585979206c688134286454043f4f5211c8ba812a1d4205ebf83f8d4a2ee1679ddeedd043ee042a164c369450e2e6f8cf494ba81854ea577045f749c2b62e06c94e90bd5480104065eb5e8958761c22008566aa02da8025ab59c8e397e25f3baf4efb037959a78e2de5d2c10e2a4d411d5ddef872b210caa52abc41f05cdb7fdb4fa7ddd745572691b31ae8e62fc7439c882482aa27360311a5dc09c58f25ea2f4bffb84bf1b715aef853e7101ee13532ff6ebe15befa949a92c1ef7477af483776816e391cc8d0cde8759dfd6110d5d4f88b0c7abf815ad4a18e45b759cf7f6b5c122236438a39a43d376e97cf03cf60181bb273cf77ee2c6f8accd8f2124aa56bf3b94e0cfd099212993a8ade47f8bfe4a7aa225684bf1ed1530a3c028d638bc6b8e915b5e469886ad09745163686a106591db38887323e883b10af82155dfcac7476405155cbe268af7751239a4bb25452c2730566884f56174eab518ea3eb169d9587de61bb5d0ac60e3205e8321f865d7fac51a23d3a46b5acfdda4c33cf22a66a8bad580d55d5d7b3e6034e126cbd944a62ec06c7ac8cfcd7eb7400e978545208aae76363a1b60ff01c075edbccf7777f0147d9941438b246676c1073891e24b831e43c83b2d6cbc5588b3aa9db2db583451d470fbf742467b4a55bcbe6c78f27013112421ef750c5ab646954e196d4cec4278b4b9bae356501237b1f13d135de45ebfff8d580550f1a2f6af1c160e9ff6228bd2466ca7b6b49ae095f8e03aab2346c79a638e650cdaf8f22c76458b85c8f3d588ba47f8e6949a57a5579671700b45800ca1be7c04ee04b173a54929ffa1e78287088b8a09283d51597449868edd94622fa51c39edf73657d7b13221f7a9daf92b33e1a36fc6934415f53e01f2ef2598c46711e92b9fe1883830ea81d3c714746c69b969dc950619a8a1e5ff6fec5420820c45bcf174b7f61ccdb2f15558d54d34640996c8caba76c5e6128d00dc1c9a7d961097e70c69813a6b3b2b96c954bc428d26fab18ab49e42303f35a0bbaf1495ad975e4d7936689374cd8a7748826aac43d2b1b44ea6f44101c8aaf3090daf65fc8e5f3eac3565371ca871f2d389b83ac6eb2cd04a67e9cd80cc4bdc1fb0dbcba8408bba88cf2287b1cd4895f46b299b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
